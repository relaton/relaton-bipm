---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=7NImhCWWJWcQIOI9zK5/TFNixLunVFR0q9NHmp5nk4DlN3ujG9QemVhnhJxGiWW8+prI41H8ajHFDMJ/d36x0j9C1PTjVfAYpC20MFlxcanDp8mExMrt7MrB7Kkj;
        Expires=Fri, 16 Sep 2022 18:21:07 GMT; Path=/
      - AWSALBCORS=7NImhCWWJWcQIOI9zK5/TFNixLunVFR0q9NHmp5nk4DlN3ujG9QemVhnhJxGiWW8+prI41H8ajHFDMJ/d36x0j9C1PTjVfAYpC20MFlxcanDp8mExMrt7MrB7Kkj;
        Expires=Fri, 16 Sep 2022 18:21:07 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1662747667609%7C3117649b-0c99-4918-8f1b-15dc60b2b01e%7C20220909-224abd3411eec9ff56227f94dbea50a7%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F2ee0e152a1fbc5f0ae6613859f5776b9;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=C38BEBDB44C6E4BB841D5892C3A1611D; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=C38BEBDB44C6E4BB841D5892C3A1611D; Path=/; HttpOnly
      - __uzma=1fb65865-8062-40c8-b030-c4f899275f36; HttpOnly; path=/; Expires=Fri,
        10-Mar-23 18:21:07 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1662747667; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:07 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=593241055609; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:07 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1662747667; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:07 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=4853; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:07 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 3117649b-0c99-4918-8f1b-15dc60b2b01e
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Fri, 09 Sep 2022 18:21:07 GMT
      Iop-Session-Map:
      - iop_session_id=3117649b-0c99-4918-8f1b-15dc60b2b01e&identity_ids=guest%2C&ics_session_id=20220909-224abd3411eec9ff56227f94dbea50a7&request_id=bfccea45-8250-4f1c-9f03-656056516713&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 09 Sep 2022 18:21:07 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/article/10.1088/0026-1394/29/6/001
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=7NImhCWWJWcQIOI9zK5/TFNixLunVFR0q9NHmp5nk4DlN3ujG9QemVhnhJxGiWW8+prI41H8ajHFDMJ/d36x0j9C1PTjVfAYpC20MFlxcanDp8mExMrt7MrB7Kkj;
        AWSALBCORS=7NImhCWWJWcQIOI9zK5/TFNixLunVFR0q9NHmp5nk4DlN3ujG9QemVhnhJxGiWW8+prI41H8ajHFDMJ/d36x0j9C1PTjVfAYpC20MFlxcanDp8mExMrt7MrB7Kkj;
        IOP_session_live=%2F%2F1662747667609%7C3117649b-0c99-4918-8f1b-15dc60b2b01e%7C20220909-224abd3411eec9ff56227f94dbea50a7%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F2ee0e152a1fbc5f0ae6613859f5776b9;
        JSESSIONID=C38BEBDB44C6E4BB841D5892C3A1611D; __uzma=1fb65865-8062-40c8-b030-c4f899275f36;
        __uzmb=1662747667; __uzmc=593241055609; __uzmd=1662747667; __uzme=4853
      Host:
      - iopscience.iop.org
      Referer:
      - https://iopscience.iop.org/issue/0026-1394/29/6
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=XAmH6TOy7Xizd7MZpKN1YjGwp46eUCnpoT1RRZCJb6XxqpEDZ3ZU5gjay7vrvibMrcNwChUMdOHgqCh7kvU4vBA9cqa68OIuh1keIytWLt7GhXs62Ff9gxns3S4S;
        Expires=Fri, 16 Sep 2022 18:21:08 GMT; Path=/
      - AWSALBCORS=XAmH6TOy7Xizd7MZpKN1YjGwp46eUCnpoT1RRZCJb6XxqpEDZ3ZU5gjay7vrvibMrcNwChUMdOHgqCh7kvU4vBA9cqa68OIuh1keIytWLt7GhXs62Ff9gxns3S4S;
        Expires=Fri, 16 Sep 2022 18:21:08 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1662747668212%7C3117649b-0c99-4918-8f1b-15dc60b2b01e%7C20220909-4520684c7af5f1d2ab65d5549d2b3a96%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2Fd030fdfcfe3d9f80378d78f396234787;
        Path=/; Domain=.iop.org; HttpOnly
      - __uzmc=624321328188; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:08 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1662747668; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:08 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 3117649b-0c99-4918-8f1b-15dc60b2b01e
      Vary:
      - Accept-Encoding
      Cache-Control:
      - private, max-age=0, no-cache, s-max-age=0, must-revalidate, proxy-revalidate
      Iop-Page-Type:
      - ABSTRACT
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Fri, 09 Sep 2022 18:21:08 GMT
      Iop-Session-Map:
      - iop_session_id=3117649b-0c99-4918-8f1b-15dc60b2b01e&identity_ids=guest%2C&ics_session_id=20220909-4520684c7af5f1d2ab65d5549d2b3a96&request_id=052cb9b7-0e40-4d6f-9548-10f5ad09abbf&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Pragma:
      - no-cache
      Iop-Is-Vor:
      - 'yes'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 09 Sep 2022 18:21:08 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/export?doi=10.1088/0026-1394/29/6/001&exportFormat=iopexport_bib&exportType=abs&navsubmit=Export%20abstract&type=article
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=XAmH6TOy7Xizd7MZpKN1YjGwp46eUCnpoT1RRZCJb6XxqpEDZ3ZU5gjay7vrvibMrcNwChUMdOHgqCh7kvU4vBA9cqa68OIuh1keIytWLt7GhXs62Ff9gxns3S4S;
        AWSALBCORS=XAmH6TOy7Xizd7MZpKN1YjGwp46eUCnpoT1RRZCJb6XxqpEDZ3ZU5gjay7vrvibMrcNwChUMdOHgqCh7kvU4vBA9cqa68OIuh1keIytWLt7GhXs62Ff9gxns3S4S;
        IOP_session_live=%2F%2F1662747668212%7C3117649b-0c99-4918-8f1b-15dc60b2b01e%7C20220909-4520684c7af5f1d2ab65d5549d2b3a96%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2Fd030fdfcfe3d9f80378d78f396234787;
        JSESSIONID=C38BEBDB44C6E4BB841D5892C3A1611D; __uzma=1fb65865-8062-40c8-b030-c4f899275f36;
        __uzmb=1662747667; __uzmc=624321328188; __uzmd=1662747668; __uzme=4853
      Host:
      - iopscience.iop.org
      Referer:
      - https://iopscience.iop.org/article/10.1088/0026-1394/29/6/001
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - application/IOPEXPORT_BIB;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=YrA6ZSWY9yYHyLqKLmtOByRwxKQe10RVpsi6OcauxfmwRL5/fSUU/Lk7n6a9saKUPXPoeqvdMcwDsGGjf88CWiBtrVdm0GArdKh6Vs6wk5H4lglc50nGkP2AUHaG;
        Expires=Fri, 16 Sep 2022 18:21:08 GMT; Path=/
      - AWSALBCORS=YrA6ZSWY9yYHyLqKLmtOByRwxKQe10RVpsi6OcauxfmwRL5/fSUU/Lk7n6a9saKUPXPoeqvdMcwDsGGjf88CWiBtrVdm0GArdKh6Vs6wk5H4lglc50nGkP2AUHaG;
        Expires=Fri, 16 Sep 2022 18:21:08 GMT; Path=/; SameSite=None; Secure
      - __uzmc=344511688477; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:08 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1662747668; HttpOnly; path=/; Expires=Fri, 10-Mar-23 18:21:08 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Licence-Id:
      - lic370678
      Iop-Session-Id:
      - e2c6fc85-d810-4b68-adb0-acf0e865bc47
      Iop-Page-Type:
      - EXPORT
      Cache-Control:
      - no-store
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Fri, 09 Sep 2022 18:21:09 GMT
      Iop-Session-Map:
      - iop_session_id=e2c6fc85-d810-4b68-adb0-acf0e865bc47&identity_ids=guest%2C&license_id=lic370678&ics_session_id=20220909-FakeFakeFakeFake&request_id=f0008d02-beff-47d8-b690-e17b606c314d&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Disposition:
      - attachment; filename="IOPEXPORT_BIB.bib"
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: UTF-8
      string: "@article{Morris_1993,\n\tdoi = {10.1088/0026-1394/29/6/001},\n\turl
        = {https://doi.org/10.1088/0026-1394/29/6/001},\n\tyear = 1993,\n\tmonth =
        {jan},\n\tpublisher = {{IOP} Publishing},\n\tvolume = {29},\n\tnumber = {6},\n\tpages
        = {373--377},\n\tauthor = {E C Morris},\n\ttitle = {Decade Designs for Weighings
        of Non-uniform Variance},\n\tjournal = {Metrologia},\r\n\tabstract = {The
        selection of an efficient weighing design is a common problem in mass metrology.
        The calibration of a set of nominally equal masses in terms of one or more
        reference masses of the same value does not normally present any difficulty,
        but designs for extending the calibration of a kilogram mass to multiples
        and submultiples of the unit are more complex. A selection rule that is very
        widely used is that the design matrix be orthogonal. However, orthogonality
        is advantageous only when all the weighings in the design have the same variance.
        In accurate work this is generally not the case, as the variance of balances
        is load-dependent and furthermore it is often necessary to use more than one
        balance. Designs which make better use of weighings of non-uniform variance
        have been studied, and a practical approach to the construction of such designs
        is given.}\r\n}"
  recorded_at: Fri, 09 Sep 2022 18:21:09 GMT
recorded_with: VCR 6.1.0
