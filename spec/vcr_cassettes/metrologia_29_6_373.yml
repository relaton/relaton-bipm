---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=CZ7uX7JB8JndUKP1ExOtPYl33yA/A7vBoqSPiZD00k/u7Rb6qmdhRacVWdTVGOg1nRo4gGITleSJoWVvSYNiaIIip39ediSYTAJdmyqWK2Q7MiDCYFTOZsEsBXnr;
        Expires=Wed, 21 Jul 2021 13:37:26 GMT; Path=/
      - AWSALBCORS=CZ7uX7JB8JndUKP1ExOtPYl33yA/A7vBoqSPiZD00k/u7Rb6qmdhRacVWdTVGOg1nRo4gGITleSJoWVvSYNiaIIip39ediSYTAJdmyqWK2Q7MiDCYFTOZsEsBXnr;
        Expires=Wed, 21 Jul 2021 13:37:26 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1626269846061%7Cb58c3ea3-2f4d-474d-969a-fa437de59fc8%7C20210714-ae082081fbcfdf2373c615e1387a3a32%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F94feae3fa678af2e0fa4d1c622041d2e;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=EC8F3D3F5F3EFB12E6EC676D1ABA48F9; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=EC8F3D3F5F3EFB12E6EC676D1ABA48F9; Path=/; HttpOnly
      - __uzma=01e99607-37b8-4538-ad02-f6cb731cf6a9; HttpOnly; path=/; Expires=Wed,
        12-Jan-22 13:37:25 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1626269845; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:25 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=100511053419; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:25 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1626269845; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:25 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=6007; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:25 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-New-Cm:
      - 'yes'
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - b58c3ea3-2f4d-474d-969a-fa437de59fc8
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Wed, 14 Jul 2021 13:37:26 GMT
      Iop-Session-Map:
      - iop_session_id=b58c3ea3-2f4d-474d-969a-fa437de59fc8&identity_ids=guest%2C&ics_session_id=20210714-ae082081fbcfdf2373c615e1387a3a32&request_id=1fc1cdea-8359-462b-aaba-926cd82bc296&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Jul 2021 13:37:26 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/article/10.1088/0026-1394/29/6/001
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=CZ7uX7JB8JndUKP1ExOtPYl33yA/A7vBoqSPiZD00k/u7Rb6qmdhRacVWdTVGOg1nRo4gGITleSJoWVvSYNiaIIip39ediSYTAJdmyqWK2Q7MiDCYFTOZsEsBXnr;
        AWSALBCORS=CZ7uX7JB8JndUKP1ExOtPYl33yA/A7vBoqSPiZD00k/u7Rb6qmdhRacVWdTVGOg1nRo4gGITleSJoWVvSYNiaIIip39ediSYTAJdmyqWK2Q7MiDCYFTOZsEsBXnr;
        IOP_session_live=%2F%2F1626269846061%7Cb58c3ea3-2f4d-474d-969a-fa437de59fc8%7C20210714-ae082081fbcfdf2373c615e1387a3a32%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F94feae3fa678af2e0fa4d1c622041d2e;
        JSESSIONID=EC8F3D3F5F3EFB12E6EC676D1ABA48F9; __uzma=01e99607-37b8-4538-ad02-f6cb731cf6a9;
        __uzmb=1626269845; __uzmc=100511053419; __uzmd=1626269845; __uzme=6007
      Host:
      - iopscience.iop.org
      Referer:
      - https://iopscience.iop.org/issue/0026-1394/29/6
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=GXF0u5TKMWSbEXE0eKHc2Xily4cDmPP1eVOS8fF0WCHe3Yin2CiS/VlDU7YLWHoJWh2xuakEDFRQB7R8sa5u6zUx0TwvymOPk9DtJxTYDEMwjb4qx2yPU9j/ap3+;
        Expires=Wed, 21 Jul 2021 13:37:26 GMT; Path=/
      - AWSALBCORS=GXF0u5TKMWSbEXE0eKHc2Xily4cDmPP1eVOS8fF0WCHe3Yin2CiS/VlDU7YLWHoJWh2xuakEDFRQB7R8sa5u6zUx0TwvymOPk9DtJxTYDEMwjb4qx2yPU9j/ap3+;
        Expires=Wed, 21 Jul 2021 13:37:26 GMT; Path=/; SameSite=None; Secure
      - __uzmc=348571361780; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:26 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1626269846; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:26 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-New-Cm:
      - 'yes'
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - b58c3ea3-2f4d-474d-969a-fa437de59fc8
      Vary:
      - Accept-Encoding
      Cache-Control:
      - private, max-age=0, no-cache, s-max-age=0, must-revalidate, proxy-revalidate
      Iop-Page-Type:
      - ABSTRACT
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Wed, 14 Jul 2021 13:37:27 GMT
      Iop-Session-Map:
      - iop_session_id=b58c3ea3-2f4d-474d-969a-fa437de59fc8&identity_ids=guest%2C&ics_session_id=20210714-ae082081fbcfdf2373c615e1387a3a32&request_id=fc5b1394-61f4-437e-b997-509bd2a883c1&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Pragma:
      - no-cache
      Iop-Is-Vor:
      - 'yes'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
      Iop-Xml-Refs:
      - 'no'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 14 Jul 2021 13:37:27 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/export?articleId=0026-1394/29/6/373&doi=10.1088/0026-1394/29/6/001&exportFormat=iopexport_bib&exportType=abs&navsubmit=Export%20abstract
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=GXF0u5TKMWSbEXE0eKHc2Xily4cDmPP1eVOS8fF0WCHe3Yin2CiS/VlDU7YLWHoJWh2xuakEDFRQB7R8sa5u6zUx0TwvymOPk9DtJxTYDEMwjb4qx2yPU9j/ap3+;
        AWSALBCORS=GXF0u5TKMWSbEXE0eKHc2Xily4cDmPP1eVOS8fF0WCHe3Yin2CiS/VlDU7YLWHoJWh2xuakEDFRQB7R8sa5u6zUx0TwvymOPk9DtJxTYDEMwjb4qx2yPU9j/ap3+;
        IOP_session_live=%2F%2F1626269846061%7Cb58c3ea3-2f4d-474d-969a-fa437de59fc8%7C20210714-ae082081fbcfdf2373c615e1387a3a32%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F94feae3fa678af2e0fa4d1c622041d2e;
        JSESSIONID=EC8F3D3F5F3EFB12E6EC676D1ABA48F9; __uzma=01e99607-37b8-4538-ad02-f6cb731cf6a9;
        __uzmb=1626269845; __uzmc=348571361780; __uzmd=1626269846; __uzme=6007
      Host:
      - iopscience.iop.org
      Referer:
      - https://iopscience.iop.org/article/10.1088/0026-1394/29/6/001
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - application/IOPEXPORT_BIB;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=Gfw1cpCaVTEu0fSdL4NffCTEgr9KeboNnyxJe3hgO15sAKn3j4ZOZ5QpeUe+0itblkXtAW7uGU6rB1HXnb9uhHU1e7dVx466p/B/DU/vn0KEbu8ZgDuTGlUki8Kl;
        Expires=Wed, 21 Jul 2021 13:37:28 GMT; Path=/
      - AWSALBCORS=Gfw1cpCaVTEu0fSdL4NffCTEgr9KeboNnyxJe3hgO15sAKn3j4ZOZ5QpeUe+0itblkXtAW7uGU6rB1HXnb9uhHU1e7dVx466p/B/DU/vn0KEbu8ZgDuTGlUki8Kl;
        Expires=Wed, 21 Jul 2021 13:37:28 GMT; Path=/; SameSite=None; Secure
      - __uzmc=485431668821; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:28 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1626269848; HttpOnly; path=/; Expires=Wed, 12-Jan-22 13:37:28 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Licence-Id:
      - lic370678
      Iop-Session-Id:
      - ac7fcbfa-fd5c-4133-a282-041eeecdb3e5
      Iop-Page-Type:
      - EXPORT
      Cache-Control:
      - no-store
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Wed, 14 Jul 2021 13:37:28 GMT
      Iop-Session-Map:
      - iop_session_id=ac7fcbfa-fd5c-4133-a282-041eeecdb3e5&identity_ids=guest%2C&license_id=lic370678&ics_session_id=20210714-FakeFakeFakeFake&request_id=4b2433ec-b688-4d0e-95b4-ef7777e62e3e&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Disposition:
      - attachment; filename="IOPEXPORT_BIB.bib"
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: UTF-8
      string: "@article{Morris_1993,\n\tdoi = {10.1088/0026-1394/29/6/001},\n\turl
        = {https://doi.org/10.1088/0026-1394/29/6/001},\n\tyear = 1993,\n\tmonth =
        {jan},\n\tpublisher = {{IOP} Publishing},\n\tvolume = {29},\n\tnumber = {6},\n\tpages
        = {373--377},\n\tauthor = {E C Morris},\n\ttitle = {Decade Designs for Weighings
        of Non-uniform Variance},\n\tjournal = {Metrologia},\r\n\tabstract = {The
        selection of an efficient weighing design is a common problem in mass metrology.
        The calibration of a set of nominally equal masses in terms of one or more
        reference masses of the same value does not normally present any difficulty,
        but designs for extending the calibration of a kilogram mass to multiples
        and submultiples of the unit are more complex. A selection rule that is very
        widely used is that the design matrix be orthogonal. However, orthogonality
        is advantageous only when all the weighings in the design have the same variance.
        In accurate work this is generally not the case, as the variance of balances
        is load-dependent and furthermore it is often necessary to use more than one
        balance. Designs which make better use of weighings of non-uniform variance
        have been studied, and a practical approach to the construction of such designs
        is given.}\r\n}"
  recorded_at: Wed, 14 Jul 2021 13:37:28 GMT
recorded_with: VCR 6.0.0
