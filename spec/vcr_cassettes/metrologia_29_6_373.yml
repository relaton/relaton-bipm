---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=hLxSVKo9VlReCOIRF31A3OHBt0Qr2rHb6SRjtMzc1xhlofLUkzELveBIGKNr9kpofkvUAwx2ehwHLTdCpIcKnHvo26fxGS57R3Ixs24TPqu79eaaC93r8+j390rM;
        Expires=Fri, 21 May 2021 10:05:23 GMT; Path=/
      - AWSALBCORS=hLxSVKo9VlReCOIRF31A3OHBt0Qr2rHb6SRjtMzc1xhlofLUkzELveBIGKNr9kpofkvUAwx2ehwHLTdCpIcKnHvo26fxGS57R3Ixs24TPqu79eaaC93r8+j390rM;
        Expires=Fri, 21 May 2021 10:05:23 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1620986723894%7C9c54a612-ae47-4f17-a550-4bf726436ac2%7C20210514-807c7f936d2c10c1b45f3b699f8cb9f6%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F271ed8891be266f14155217dca6f1fd7;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=65D4358AD50AF75E63F07FBF80EABC38; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=65D4358AD50AF75E63F07FBF80EABC38; Path=/; HttpOnly
      - __uzma=fa2c1b8c-6fc8-4cbf-bfca-a8e8e90a250e; HttpOnly; path=/; Expires=Fri,
        12-Nov-21 10:05:23 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1620986723; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:23 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=762251098533; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:23 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1620986723; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:23 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=6686; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:23 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-New-Cm:
      - 'yes'
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 9c54a612-ae47-4f17-a550-4bf726436ac2
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Fri, 14 May 2021 10:05:23 GMT
      Iop-Session-Map:
      - iop_session_id=9c54a612-ae47-4f17-a550-4bf726436ac2&identity_ids=guest%2C&ics_session_id=20210514-807c7f936d2c10c1b45f3b699f8cb9f6&request_id=64669961-7bcb-464f-8a13-49392b260156&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 14 May 2021 10:05:25 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/article/10.1088/0026-1394/29/6/001
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=hLxSVKo9VlReCOIRF31A3OHBt0Qr2rHb6SRjtMzc1xhlofLUkzELveBIGKNr9kpofkvUAwx2ehwHLTdCpIcKnHvo26fxGS57R3Ixs24TPqu79eaaC93r8+j390rM;
        AWSALBCORS=hLxSVKo9VlReCOIRF31A3OHBt0Qr2rHb6SRjtMzc1xhlofLUkzELveBIGKNr9kpofkvUAwx2ehwHLTdCpIcKnHvo26fxGS57R3Ixs24TPqu79eaaC93r8+j390rM;
        IOP_session_live=%2F%2F1620986723894%7C9c54a612-ae47-4f17-a550-4bf726436ac2%7C20210514-807c7f936d2c10c1b45f3b699f8cb9f6%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F271ed8891be266f14155217dca6f1fd7;
        JSESSIONID=65D4358AD50AF75E63F07FBF80EABC38; __uzma=fa2c1b8c-6fc8-4cbf-bfca-a8e8e90a250e;
        __uzmb=1620986723; __uzmc=762251098533; __uzmd=1620986723; __uzme=6686
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=rgFvMfatTw0JDPVfePYLI8wH3da7rgtHp46+zC+W6PzQ1FxM+O/ywgk3pn7VlBoBkAYmfY3HSOdxwoTrnx15RUhkwemqaUG2lPMCHOCDb8WI6k4nmVeNbufXN0zL;
        Expires=Fri, 21 May 2021 10:05:27 GMT; Path=/
      - AWSALBCORS=rgFvMfatTw0JDPVfePYLI8wH3da7rgtHp46+zC+W6PzQ1FxM+O/ywgk3pn7VlBoBkAYmfY3HSOdxwoTrnx15RUhkwemqaUG2lPMCHOCDb8WI6k4nmVeNbufXN0zL;
        Expires=Fri, 21 May 2021 10:05:27 GMT; Path=/; SameSite=None; Secure
      - __uzmc=312611367837; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:27 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1620986727; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:27 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-New-Cm:
      - 'yes'
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 9c54a612-ae47-4f17-a550-4bf726436ac2
      Vary:
      - Accept-Encoding
      Cache-Control:
      - private, max-age=0, no-cache, s-max-age=0, must-revalidate, proxy-revalidate
      Iop-Page-Type:
      - ABSTRACT
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Fri, 14 May 2021 10:05:27 GMT
      Iop-Session-Map:
      - iop_session_id=9c54a612-ae47-4f17-a550-4bf726436ac2&identity_ids=guest%2C&ics_session_id=20210514-807c7f936d2c10c1b45f3b699f8cb9f6&request_id=0171238b-e47e-44ca-8a96-5bd2cf1663f3&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Pragma:
      - no-cache
      Iop-Is-Vor:
      - 'yes'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
      Iop-Xml-Refs:
      - 'no'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 14 May 2021 10:05:28 GMT
- request:
    method: get
    uri: https://iopscience.iop.org/export?articleId=0026-1394/29/6/373&doi=10.1088/0026-1394/29/6/001&exportFormat=iopexport_bib&exportType=abs&navsubmit=Export%20abstract
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Cookie:
      - AWSALB=rgFvMfatTw0JDPVfePYLI8wH3da7rgtHp46+zC+W6PzQ1FxM+O/ywgk3pn7VlBoBkAYmfY3HSOdxwoTrnx15RUhkwemqaUG2lPMCHOCDb8WI6k4nmVeNbufXN0zL;
        AWSALBCORS=rgFvMfatTw0JDPVfePYLI8wH3da7rgtHp46+zC+W6PzQ1FxM+O/ywgk3pn7VlBoBkAYmfY3HSOdxwoTrnx15RUhkwemqaUG2lPMCHOCDb8WI6k4nmVeNbufXN0zL;
        IOP_session_live=%2F%2F1620986723894%7C9c54a612-ae47-4f17-a550-4bf726436ac2%7C20210514-807c7f936d2c10c1b45f3b699f8cb9f6%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F271ed8891be266f14155217dca6f1fd7;
        JSESSIONID=65D4358AD50AF75E63F07FBF80EABC38; __uzma=fa2c1b8c-6fc8-4cbf-bfca-a8e8e90a250e;
        __uzmb=1620986723; __uzmc=312611367837; __uzmd=1620986727; __uzme=6686
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/IOPEXPORT_BIB;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=da717XVWQP449xLsKHW849TyHL+2nZuZIYYIMYcMbs2i3Cn3+jDjYfSYZ6+PuJxLgFTTjAGkjXmlHqVs74fZNOM23iqoTce5GwrsAnoV/j/rEpdXPsY2+oDB5unS;
        Expires=Fri, 21 May 2021 10:05:29 GMT; Path=/
      - AWSALBCORS=da717XVWQP449xLsKHW849TyHL+2nZuZIYYIMYcMbs2i3Cn3+jDjYfSYZ6+PuJxLgFTTjAGkjXmlHqVs74fZNOM23iqoTce5GwrsAnoV/j/rEpdXPsY2+oDB5unS;
        Expires=Fri, 21 May 2021 10:05:29 GMT; Path=/; SameSite=None; Secure
      - __uzmc=505331698557; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:29 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1620986729; HttpOnly; path=/; Expires=Fri, 12-Nov-21 10:05:29 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Licence-Id:
      - lic370678
      Iop-Session-Id:
      - 278fa383-3743-4f9f-ae3e-aba11b0bc7aa
      Iop-Page-Type:
      - EXPORT
      Cache-Control:
      - no-store
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Fri, 14 May 2021 10:05:29 GMT
      Iop-Session-Map:
      - iop_session_id=278fa383-3743-4f9f-ae3e-aba11b0bc7aa&identity_ids=guest%2C&license_id=lic370678&ics_session_id=20210514-FakeFakeFakeFake&request_id=4988b822-e15a-4c86-b979-11679c89c94e&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Disposition:
      - attachment; filename="IOPEXPORT_BIB.bib"
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: UTF-8
      string: "@article{Morris_1993,\n\tdoi = {10.1088/0026-1394/29/6/001},\n\turl
        = {https://doi.org/10.1088/0026-1394/29/6/001},\n\tyear = 1993,\n\tmonth =
        {jan},\n\tpublisher = {{IOP} Publishing},\n\tvolume = {29},\n\tnumber = {6},\n\tpages
        = {373--377},\n\tauthor = {E C Morris},\n\ttitle = {Decade Designs for Weighings
        of Non-uniform Variance},\n\tjournal = {Metrologia},\r\n\tabstract = {The
        selection of an efficient weighing design is a common problem in mass metrology.
        The calibration of a set of nominally equal masses in terms of one or more
        reference masses of the same value does not normally present any difficulty,
        but designs for extending the calibration of a kilogram mass to multiples
        and submultiples of the unit are more complex. A selection rule that is very
        widely used is that the design matrix be orthogonal. However, orthogonality
        is advantageous only when all the weighings in the design have the same variance.
        In accurate work this is generally not the case, as the variance of balances
        is load-dependent and furthermore it is often necessary to use more than one
        balance. Designs which make better use of weighings of non-uniform variance
        have been studied, and a practical approach to the construction of such designs
        is given.}\r\n}"
  recorded_at: Fri, 14 May 2021 10:05:30 GMT
recorded_with: VCR 6.0.0
