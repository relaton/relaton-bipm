---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/journal/0026-1394
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=bl4Nk5FRrzh/MGo8PUKFQfIWfnvgAPvffqiCFAbaaV7skaMczTkMShdxekS1yrCEXIoyvn+ohSlhnycVo4ZhZ8oRjDy9Eb041hEbTkc68BPmcVIeKCx3wnVBASzk;
        Expires=Wed, 08 Feb 2023 19:08:00 GMT; Path=/
      - AWSALBCORS=bl4Nk5FRrzh/MGo8PUKFQfIWfnvgAPvffqiCFAbaaV7skaMczTkMShdxekS1yrCEXIoyvn+ohSlhnycVo4ZhZ8oRjDy9Eb041hEbTkc68BPmcVIeKCx3wnVBASzk;
        Expires=Wed, 08 Feb 2023 19:08:00 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1675278480852%7Cf8427f2f-3fb4-4ffc-a51b-93d64201ad9d%7C654db6d9-1ae6-4616-b497-e81f06931080%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F48ec83a6a3643c9491b50e388b67ef92;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=C9E91F6069260D3DFB7BEB29FD2AA606; Max-Age=20; Expires=Wed, 01-Feb-2023
        19:08:20 GMT; Path=/; HttpOnly
      - __uzma=d634f323-336b-4404-8fe6-53376f7f605f; HttpOnly; path=/; Expires=Wed,
        02-Aug-23 19:08:00 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1675278480; HttpOnly; path=/; Expires=Wed, 02-Aug-23 19:08:00 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=481111064973; HttpOnly; path=/; Expires=Wed, 02-Aug-23 19:08:00 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1675278480; HttpOnly; path=/; Expires=Wed, 02-Aug-23 19:08:00 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=7607; HttpOnly; path=/; Expires=Wed, 02-Aug-23 19:08:00 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Licence-Id:
      - NO_LICENSE_IN_THE_NEW_WORLD
      Iop-Session-Id:
      - f8427f2f-3fb4-4ffc-a51b-93d64201ad9d
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - JNL_HOMEPAGE
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Wed, 01 Feb 2023 19:08:00 GMT
      Iop-Session-Map:
      - iop_session_id=f8427f2f-3fb4-4ffc-a51b-93d64201ad9d&identity_ids=guest%2C&license_id=NO_LICENSE_IN_THE_NEW_WORLD&ics_session_id=654db6d9-1ae6-4616-b497-e81f06931080&request_id=c9d28e57-656b-4a71-a0f7-5bce62dc2e43&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 Feb 2023 19:08:01 GMT
recorded_with: VCR 6.1.0
