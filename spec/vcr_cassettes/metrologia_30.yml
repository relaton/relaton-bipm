---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/volume/0026-1394/30
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=QjgEUOG1queykI1Utsn1pSXQXGvUj6WsbwCB+soU87rlenaeSMLx7C1QVUCSx9PcKEsPWN9PndNNmw1SuKNqouXWiXtS8L0Y4P4DXXKzMZdV5+Y9mSVzGP2i3CZu;
        Expires=Thu, 08 Jul 2021 15:56:47 GMT; Path=/
      - AWSALBCORS=QjgEUOG1queykI1Utsn1pSXQXGvUj6WsbwCB+soU87rlenaeSMLx7C1QVUCSx9PcKEsPWN9PndNNmw1SuKNqouXWiXtS8L0Y4P4DXXKzMZdV5+Y9mSVzGP2i3CZu;
        Expires=Thu, 08 Jul 2021 15:56:47 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1625155007968%7Cac99724c-ad1f-49b5-a4b4-c0b544524519%7C20210701-e4772e8398a587c8691fdb03af686a7d%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F51000ab795aa284af7dc4d8690acb48a;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=18D70B49B8F6BC99543B44C7F576F930; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=18D70B49B8F6BC99543B44C7F576F930; Path=/; HttpOnly
      - __uzma=ad92588b-0d6e-40fe-8313-91383ccaf66f; HttpOnly; path=/; Expires=Thu,
        30-Dec-21 15:56:47 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1625155007; HttpOnly; path=/; Expires=Thu, 30-Dec-21 15:56:47 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=729491075704; HttpOnly; path=/; Expires=Thu, 30-Dec-21 15:56:47 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1625155007; HttpOnly; path=/; Expires=Thu, 30-Dec-21 15:56:47 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=2843; HttpOnly; path=/; Expires=Thu, 30-Dec-21 15:56:47 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-New-Cm:
      - 'yes'
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - ac99724c-ad1f-49b5-a4b4-c0b544524519
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - VOLUME
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Thu, 01 Jul 2021 15:56:48 GMT
      Iop-Session-Map:
      - iop_session_id=ac99724c-ad1f-49b5-a4b4-c0b544524519&identity_ids=guest%2C&ics_session_id=20210701-e4772e8398a587c8691fdb03af686a7d&request_id=c878218f-35c2-41c4-8a5d-38e17ebc0cd3&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 01 Jul 2021 15:56:48 GMT
recorded_with: VCR 6.0.0
