---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/30/4
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=Z1cZJkVX1B9G4TgpTsLOs12BxZBW3fQaR+vL3ypQ2qrqrvCezGw3Ae7loMrCJ+IE3pQUqb5GuA1FSoyAR9/955CUjmFLK9TNw9BqxThkbH6Ch9qduxtPEUTShv0N;
        Expires=Fri, 04 Nov 2022 22:39:50 GMT; Path=/
      - AWSALBCORS=Z1cZJkVX1B9G4TgpTsLOs12BxZBW3fQaR+vL3ypQ2qrqrvCezGw3Ae7loMrCJ+IE3pQUqb5GuA1FSoyAR9/955CUjmFLK9TNw9BqxThkbH6Ch9qduxtPEUTShv0N;
        Expires=Fri, 04 Nov 2022 22:39:50 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1666996790280%7C65289652-cf1a-4ad5-9da8-13b1d6214d28%7C20221028-cbef059a64802533af57e2f79d29450c%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2Fd0241ef3a5a5f5f09a0bb916e8e40a57;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=6357B49371D794440BEA3ED2BFAAF03F; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=6357B49371D794440BEA3ED2BFAAF03F; Path=/; HttpOnly
      - __uzma=b483da86-d89b-42f9-80f9-4e078abb465e; HttpOnly; path=/; Expires=Fri,
        28-Apr-23 22:39:50 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1666996790; HttpOnly; path=/; Expires=Fri, 28-Apr-23 22:39:50 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=153051034637; HttpOnly; path=/; Expires=Fri, 28-Apr-23 22:39:50 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1666996790; HttpOnly; path=/; Expires=Fri, 28-Apr-23 22:39:50 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=0159; HttpOnly; path=/; Expires=Fri, 28-Apr-23 22:39:50 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 65289652-cf1a-4ad5-9da8-13b1d6214d28
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Fri, 28 Oct 2022 22:39:50 GMT
      Iop-Session-Map:
      - iop_session_id=65289652-cf1a-4ad5-9da8-13b1d6214d28&identity_ids=guest%2C&ics_session_id=20221028-cbef059a64802533af57e2f79d29450c&request_id=add687da-7b37-4ec5-8898-130476fd3538&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCTxoZWFkPgoJCTxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSxjaHJvbWU9MSI+CgkJCgkJCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4od2luZG93Lk5SRVVNfHwoTlJFVU09e30pKS5pbml0PXtwcml2YWN5Ontjb29raWVzX2VuYWJsZWQ6dHJ1ZX0sYWpheDp7ZGVueV9saXN0OlsiYmFtLm5yLWRhdGEubmV0Il19LGRpc3RyaWJ1dGVkX3RyYWNpbmc6e2VuYWJsZWQ6dHJ1ZX19Oyh3aW5kb3cuTlJFVU18fChOUkVVTT17fSkpLmxvYWRlcl9jb25maWc9e2FnZW50SUQ6IjE3MzI2ODkzNDMiLGFjY291bnRJRDoiOTE3ODc3Iix0cnVzdEtleToiOTE3ODc3Iix4cGlkOiJYUWNBV1ZGVUd3SUhWMU5VRHdZQVgxUT0iLGxpY2Vuc2VLZXk6ImIyYmZhYWUxYjYiLGFwcGxpY2F0aW9uSUQ6IjE3MzI2ODc3OTAifTt3aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKG4pe2lmKCFlW25dKXt2YXIgbz1lW25dPXtleHBvcnRzOnt9fTt0W25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBvPXRbbl1bMV1bZV07cmV0dXJuIHIob3x8ZSl9LG8sby5leHBvcnRzKX1yZXR1cm4gZVtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7dHJ5e3MuY29uc29sZSYmY29uc29sZS5sb2codCl9Y2F0Y2goZSl7fX12YXIgbyxpPXQoImVlIiksYT10KDMxKSxzPXt9O3RyeXtvPWxvY2FsU3RvcmFnZS5nZXRJdGVtKCJfX25yX2ZsYWdzIikuc3BsaXQoIiwiKSxjb25zb2xlJiYiZnVuY3Rpb24iPT10eXBlb2YgY29uc29sZS5sb2cmJihzLmNvbnNvbGU9ITAsby5pbmRleE9mKCJkZXYiKSE9PS0xJiYocy5kZXY9ITApLG8uaW5kZXhPZigibnJfZGV2IikhPT0tMSYmKHMubnJEZXY9ITApKX1jYXRjaChjKXt9cy5uckRldiYmaS5vbigiaW50ZXJuYWwtZXJyb3IiLGZ1bmN0aW9uKHQpe3IodC5zdGFjayl9KSxzLmRldiYmaS5vbigiZm4tZXJyIixmdW5jdGlvbih0LGUsbil7cihuLnN0YWNrKX0pLHMuZGV2JiYocigiTlIgQUdFTlQgSU4gREVWRUxPUE1FTlQgTU9ERSIpLHIoImZsYWdzOiAiK2EocyxmdW5jdGlvbih0LGUpe3JldHVybiB0fSkuam9pbigiLCAiKSkpfSx7fV0sMjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4scixzKXt0cnl7bD9sLT0xOm8oc3x8bmV3IFVuY2F1Z2h0RXhjZXB0aW9uKHQsZSxuKSwhMCl9Y2F0Y2goZil7dHJ5e2koImllcnIiLFtmLGMubm93KCksITBdKX1jYXRjaChkKXt9fXJldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB1JiZ1LmFwcGx5KHRoaXMsYShhcmd1bWVudHMpKX1mdW5jdGlvbiBVbmNhdWdodEV4Y2VwdGlvbih0LGUsbil7dGhpcy5tZXNzYWdlPXR8fCJVbmNhdWdodCBlcnJvciB3aXRoIG5vIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24iLHRoaXMuc291cmNlVVJMPWUsdGhpcy5saW5lPW59ZnVuY3Rpb24gbyh0LGUpe3ZhciBuPWU/bnVsbDpjLm5vdygpO2koImVyciIsW3Qsbl0pfXZhciBpPXQoImhhbmRsZSIpLGE9dCgzMikscz10KCJlZSIpLGM9dCgibG9hZGVyIiksZj10KCJnb3MiKSx1PXdpbmRvdy5vbmVycm9yLGQ9ITEscD0ibnJAc2VlbkVycm9yIjtpZighYy5kaXNhYmxlZCl7dmFyIGw9MDtjLmZlYXR1cmVzLmVycj0hMCx0KDEpLHdpbmRvdy5vbmVycm9yPXI7dHJ5e3Rocm93IG5ldyBFcnJvcn1jYXRjaChoKXsic3RhY2siaW4gaCYmKHQoMTQpLHQoMTMpLCJhZGRFdmVudExpc3RlbmVyImluIHdpbmRvdyYmdCg3KSxjLnhocldyYXBwYWJsZSYmdCgxNSksZD0hMCl9cy5vbigiZm4tc3RhcnQiLGZ1bmN0aW9uKHQsZSxuKXtkJiYobCs9MSl9KSxzLm9uKCJmbi1lcnIiLGZ1bmN0aW9uKHQsZSxuKXtkJiYhbltwXSYmKGYobixwLGZ1bmN0aW9uKCl7cmV0dXJuITB9KSx0aGlzLnRocm93bj0hMCxvKG4pKX0pLHMub24oImZuLWVuZCIsZnVuY3Rpb24oKXtkJiYhdGhpcy50aHJvd24mJmw+MCYmKGwtPTEpfSkscy5vbigiaW50ZXJuYWwtZXJyb3IiLGZ1bmN0aW9uKHQpe2koImllcnIiLFt0LGMubm93KCksITBdKX0pfX0se31dLDM6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgcj10KCJsb2FkZXIiKTtyLmRpc2FibGVkfHwoci5mZWF0dXJlcy5pbnM9ITApfSx7fV0sNDpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIoKXtVKyssTD1nLmhhc2gsdGhpc1t1XT15Lm5vdygpfWZ1bmN0aW9uIG8oKXtVLS0sZy5oYXNoIT09TCYmaSgwLCEwKTt2YXIgdD15Lm5vdygpO3RoaXNbaF09fn50aGlzW2hdK3QtdGhpc1t1XSx0aGlzW2RdPXR9ZnVuY3Rpb24gaSh0LGUpe0UuZW1pdCgibmV3VVJMIixbIiIrZyxlXSl9ZnVuY3Rpb24gYSh0LGUpe3Qub24oZSxmdW5jdGlvbigpe3RoaXNbZV09eS5ub3coKX0pfXZhciBzPSItc3RhcnQiLGM9Ii1lbmQiLGY9Ii1ib2R5Iix1PSJmbiIrcyxkPSJmbiIrYyxwPSJjYiIrcyxsPSJjYiIrYyxoPSJqc1RpbWUiLG09ImZldGNoIix2PSJhZGRFdmVudExpc3RlbmVyIix3PXdpbmRvdyxnPXcubG9jYXRpb24seT10KCJsb2FkZXIiKTtpZih3W3ZdJiZ5LnhocldyYXBwYWJsZSYmIXkuZGlzYWJsZWQpe3ZhciB4PXQoMTEpLGI9dCgxMiksRT10KDkpLFI9dCg3KSxPPXQoMTQpLFQ9dCg4KSxTPXQoMTUpLFA9dCgxMCksTT10KCJlZSIpLEM9TS5nZXQoInRyYWNlciIpLE49dCgyMyk7dCgxNykseS5mZWF0dXJlcy5zcGE9ITA7dmFyIEwsVT0wO00ub24odSxyKSxiLm9uKHAsciksUC5vbihwLHIpLE0ub24oZCxvKSxiLm9uKGwsbyksUC5vbihsLG8pLE0uYnVmZmVyKFt1LGQsInhoci1yZXNvbHZlZCJdKSxSLmJ1ZmZlcihbdV0pLE8uYnVmZmVyKFsic2V0VGltZW91dCIrYywiY2xlYXJUaW1lb3V0IitzLHVdKSxTLmJ1ZmZlcihbdSwibmV3LXhociIsInNlbmQteGhyIitzXSksVC5idWZmZXIoW20rcyxtKyItZG9uZSIsbStmK3MsbStmK2NdKSxFLmJ1ZmZlcihbIm5ld1VSTCJdKSx4LmJ1ZmZlcihbdV0pLGIuYnVmZmVyKFsicHJvcGFnYXRlIixwLGwsImV4ZWN1dG9yLWVyciIsInJlc29sdmUiK3NdKSxDLmJ1ZmZlcihbdSwibm8tIit1XSksUC5idWZmZXIoWyJuZXctanNvbnAiLCJjYi1zdGFydCIsImpzb25wLWVycm9yIiwianNvbnAtZW5kIl0pLGEoVCxtK3MpLGEoVCxtKyItZG9uZSIpLGEoUCwibmV3LWpzb25wIiksYShQLCJqc29ucC1lbmQiKSxhKFAsImNiLXN0YXJ0IiksRS5vbigicHVzaFN0YXRlLWVuZCIsaSksRS5vbigicmVwbGFjZVN0YXRlLWVuZCIsaSksd1t2XSgiaGFzaGNoYW5nZSIsaSxOKCEwKSksd1t2XSgibG9hZCIsaSxOKCEwKSksd1t2XSgicG9wc3RhdGUiLGZ1bmN0aW9uKCl7aSgwLFU+MSl9LE4oITApKX19LHt9XSw1OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe3ZhciB0PW5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKGZ1bmN0aW9uKHQsZSl7dmFyIG49dC5nZXRFbnRyaWVzKCk7cyh2LFtuXSl9KTt0cnl7dC5vYnNlcnZlKHtlbnRyeVR5cGVzOlsicmVzb3VyY2UiXX0pfWNhdGNoKGUpe319ZnVuY3Rpb24gbyh0KXtpZihzKHYsW3dpbmRvdy5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKHcpXSksd2luZG93LnBlcmZvcm1hbmNlWyJjIitwXSl0cnl7d2luZG93LnBlcmZvcm1hbmNlW2hdKG0sbywhMSl9Y2F0Y2godCl7fWVsc2UgdHJ5e3dpbmRvdy5wZXJmb3JtYW5jZVtoXSgid2Via2l0IittLG8sITEpfWNhdGNoKHQpe319ZnVuY3Rpb24gaSh0KXt9aWYod2luZG93LnBlcmZvcm1hbmNlJiZ3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nJiZ3aW5kb3cucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSl7dmFyIGE9dCgiZWUiKSxzPXQoImhhbmRsZSIpLGM9dCgxNCksZj10KDEzKSx1PXQoNiksZD10KDIzKSxwPSJsZWFyUmVzb3VyY2VUaW1pbmdzIixsPSJhZGRFdmVudExpc3RlbmVyIixoPSJyZW1vdmVFdmVudExpc3RlbmVyIixtPSJyZXNvdXJjZXRpbWluZ2J1ZmZlcmZ1bGwiLHY9ImJzdFJlc291cmNlIix3PSJyZXNvdXJjZSIsZz0iLXN0YXJ0Iix5PSItZW5kIix4PSJmbiIrZyxiPSJmbiIreSxFPSJic3RUaW1lciIsUj0icHVzaFN0YXRlIixPPXQoImxvYWRlciIpO2lmKCFPLmRpc2FibGVkKXtPLmZlYXR1cmVzLnN0bj0hMCx0KDkpLCJhZGRFdmVudExpc3RlbmVyImluIHdpbmRvdyYmdCg3KTt2YXIgVD1OUkVVTS5vLkVWO2Eub24oeCxmdW5jdGlvbih0LGUpe3ZhciBuPXRbMF07biBpbnN0YW5jZW9mIFQmJih0aGlzLmJzdFN0YXJ0PU8ubm93KCkpfSksYS5vbihiLGZ1bmN0aW9uKHQsZSl7dmFyIG49dFswXTtuIGluc3RhbmNlb2YgVCYmcygiYnN0IixbbixlLHRoaXMuYnN0U3RhcnQsTy5ub3coKV0pfSksYy5vbih4LGZ1bmN0aW9uKHQsZSxuKXt0aGlzLmJzdFN0YXJ0PU8ubm93KCksdGhpcy5ic3RUeXBlPW59KSxjLm9uKGIsZnVuY3Rpb24odCxlKXtzKEUsW2UsdGhpcy5ic3RTdGFydCxPLm5vdygpLHRoaXMuYnN0VHlwZV0pfSksZi5vbih4LGZ1bmN0aW9uKCl7dGhpcy5ic3RTdGFydD1PLm5vdygpfSksZi5vbihiLGZ1bmN0aW9uKHQsZSl7cyhFLFtlLHRoaXMuYnN0U3RhcnQsTy5ub3coKSwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0pfSksYS5vbihSK2csZnVuY3Rpb24odCl7dGhpcy50aW1lPU8ubm93KCksdGhpcy5zdGFydFBhdGg9bG9jYXRpb24ucGF0aG5hbWUrbG9jYXRpb24uaGFzaH0pLGEub24oUit5LGZ1bmN0aW9uKHQpe3MoImJzdEhpc3QiLFtsb2NhdGlvbi5wYXRobmFtZStsb2NhdGlvbi5oYXNoLHRoaXMuc3RhcnRQYXRoLHRoaXMudGltZV0pfSksdSgpPyhzKHYsW3dpbmRvdy5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKCJyZXNvdXJjZSIpXSkscigpKTpsIGluIHdpbmRvdy5wZXJmb3JtYW5jZSYmKHdpbmRvdy5wZXJmb3JtYW5jZVsiYyIrcF0/d2luZG93LnBlcmZvcm1hbmNlW2xdKG0sbyxkKCExKSk6d2luZG93LnBlcmZvcm1hbmNlW2xdKCJ3ZWJraXQiK20sbyxkKCExKSkpLGRvY3VtZW50W2xdKCJzY3JvbGwiLGksZCghMSkpLGRvY3VtZW50W2xdKCJrZXlwcmVzcyIsaSxkKCExKSksZG9jdW1lbnRbbF0oImNsaWNrIixpLGQoITEpKX19fSx7fV0sNjpbZnVuY3Rpb24odCxlLG4pe2UuZXhwb3J0cz1mdW5jdGlvbigpe3JldHVybiJQZXJmb3JtYW5jZU9ic2VydmVyImluIHdpbmRvdyYmImZ1bmN0aW9uIj09dHlwZW9mIHdpbmRvdy5QZXJmb3JtYW5jZU9ic2VydmVyfX0se31dLDc6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQpe2Zvcih2YXIgZT10O2UmJiFlLmhhc093blByb3BlcnR5KHUpOyllPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKTtlJiZvKGUpfWZ1bmN0aW9uIG8odCl7cy5pblBsYWNlKHQsW3UsZF0sIi0iLGkpfWZ1bmN0aW9uIGkodCxlKXtyZXR1cm4gdFsxXX12YXIgYT10KCJlZSIpLmdldCgiZXZlbnRzIikscz10KCJ3cmFwLWZ1bmN0aW9uIikoYSwhMCksYz10KCJnb3MiKSxmPVhNTEh0dHBSZXF1ZXN0LHU9ImFkZEV2ZW50TGlzdGVuZXIiLGQ9InJlbW92ZUV2ZW50TGlzdGVuZXIiO2UuZXhwb3J0cz1hLCJnZXRQcm90b3R5cGVPZiJpbiBPYmplY3Q/KHIoZG9jdW1lbnQpLHIod2luZG93KSxyKGYucHJvdG90eXBlKSk6Zi5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkodSkmJihvKHdpbmRvdyksbyhmLnByb3RvdHlwZSkpLGEub24odSsiLXN0YXJ0IixmdW5jdGlvbih0LGUpe3ZhciBuPXRbMV07aWYobnVsbCE9PW4mJigiZnVuY3Rpb24iPT10eXBlb2Ygbnx8Im9iamVjdCI9PXR5cGVvZiBuKSl7dmFyIHI9YyhuLCJuckB3cmFwcGVkIixmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXtpZigiZnVuY3Rpb24iPT10eXBlb2Ygbi5oYW5kbGVFdmVudClyZXR1cm4gbi5oYW5kbGVFdmVudC5hcHBseShuLGFyZ3VtZW50cyl9dmFyIGU9e29iamVjdDp0LCJmdW5jdGlvbiI6bn1bdHlwZW9mIG5dO3JldHVybiBlP3MoZSwiZm4tIixudWxsLGUubmFtZXx8ImFub255bW91cyIpOm59KTt0aGlzLndyYXBwZWQ9dFsxXT1yfX0pLGEub24oZCsiLXN0YXJ0IixmdW5jdGlvbih0KXt0WzFdPXRoaXMud3JhcHBlZHx8dFsxXX0pfSx7fV0sODpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4pe3ZhciByPXRbZV07ImZ1bmN0aW9uIj09dHlwZW9mIHImJih0W2VdPWZ1bmN0aW9uKCl7dmFyIHQ9aShhcmd1bWVudHMpLGU9e307by5lbWl0KG4rImJlZm9yZS1zdGFydCIsW3RdLGUpO3ZhciBhO2VbbV0mJmVbbV0uZHQmJihhPWVbbV0uZHQpO3ZhciBzPXIuYXBwbHkodGhpcyx0KTtyZXR1cm4gby5lbWl0KG4rInN0YXJ0IixbdCxhXSxzKSxzLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG8uZW1pdChuKyJlbmQiLFtudWxsLHRdLHMpLHR9LGZ1bmN0aW9uKHQpe3Rocm93IG8uZW1pdChuKyJlbmQiLFt0XSxzKSx0fSl9KX12YXIgbz10KCJlZSIpLmdldCgiZmV0Y2giKSxpPXQoMzIpLGE9dCgzMSk7ZS5leHBvcnRzPW87dmFyIHM9d2luZG93LGM9ImZldGNoLSIsZj1jKyJib2R5LSIsdT1bImFycmF5QnVmZmVyIiwiYmxvYiIsImpzb24iLCJ0ZXh0IiwiZm9ybURhdGEiXSxkPXMuUmVxdWVzdCxwPXMuUmVzcG9uc2UsbD1zLmZldGNoLGg9InByb3RvdHlwZSIsbT0ibnJAY29udGV4dCI7ZCYmcCYmbCYmKGEodSxmdW5jdGlvbih0LGUpe3IoZFtoXSxlLGYpLHIocFtoXSxlLGYpfSkscihzLCJmZXRjaCIsYyksby5vbihjKyJlbmQiLGZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZihlKXt2YXIgcj1lLmhlYWRlcnMuZ2V0KCJjb250ZW50LWxlbmd0aCIpO251bGwhPT1yJiYobi5yeFNpemU9ciksby5lbWl0KGMrImRvbmUiLFtudWxsLGVdLG4pfWVsc2Ugby5lbWl0KGMrImRvbmUiLFt0XSxuKX0pKX0se31dLDk6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgcj10KCJlZSIpLmdldCgiaGlzdG9yeSIpLG89dCgid3JhcC1mdW5jdGlvbiIpKHIpO2UuZXhwb3J0cz1yO3ZhciBpPXdpbmRvdy5oaXN0b3J5JiZ3aW5kb3cuaGlzdG9yeS5jb25zdHJ1Y3RvciYmd2luZG93Lmhpc3RvcnkuY29uc3RydWN0b3IucHJvdG90eXBlLGE9d2luZG93Lmhpc3Rvcnk7aSYmaS5wdXNoU3RhdGUmJmkucmVwbGFjZVN0YXRlJiYoYT1pKSxvLmluUGxhY2UoYSxbInB1c2hTdGF0ZSIsInJlcGxhY2VTdGF0ZSJdLCItIil9LHt9XSwxMDpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7ZnVuY3Rpb24gZSgpe2YuZW1pdCgianNvbnAtZW5kIixbXSxsKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLGUsYyghMSkpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZXJyb3IiLG4sYyghMSkpfWZ1bmN0aW9uIG4oKXtmLmVtaXQoImpzb25wLWVycm9yIixbXSxsKSxmLmVtaXQoImpzb25wLWVuZCIsW10sbCksdC5yZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIixlLGMoITEpKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImVycm9yIixuLGMoITEpKX12YXIgcj10JiYic3RyaW5nIj09dHlwZW9mIHQubm9kZU5hbWUmJiJzY3JpcHQiPT09dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKHIpe3ZhciBvPSJmdW5jdGlvbiI9PXR5cGVvZiB0LmFkZEV2ZW50TGlzdGVuZXI7aWYobyl7dmFyIGE9aSh0LnNyYyk7aWYoYSl7dmFyIGQ9cyhhKSxwPSJmdW5jdGlvbiI9PXR5cGVvZiBkLnBhcmVudFtkLmtleV07aWYocCl7dmFyIGw9e307dS5pblBsYWNlKGQucGFyZW50LFtkLmtleV0sImNiLSIsbCksdC5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixlLGMoITEpKSx0LmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixuLGMoITEpKSxmLmVtaXQoIm5ldy1qc29ucCIsW3Quc3JjXSxsKX19fX19ZnVuY3Rpb24gbygpe3JldHVybiJhZGRFdmVudExpc3RlbmVyImluIHdpbmRvd31mdW5jdGlvbiBpKHQpe3ZhciBlPXQubWF0Y2goZCk7cmV0dXJuIGU/ZVsxXTpudWxsfWZ1bmN0aW9uIGEodCxlKXt2YXIgbj10Lm1hdGNoKGwpLHI9blsxXSxvPW5bM107cmV0dXJuIG8/YShvLGVbcl0pOmVbcl19ZnVuY3Rpb24gcyh0KXt2YXIgZT10Lm1hdGNoKHApO3JldHVybiBlJiZlLmxlbmd0aD49Mz97a2V5OmVbMl0scGFyZW50OmEoZVsxXSx3aW5kb3cpfTp7a2V5OnQscGFyZW50OndpbmRvd319dmFyIGM9dCgyMyksZj10KCJlZSIpLmdldCgianNvbnAiKSx1PXQoIndyYXAtZnVuY3Rpb24iKShmKTtpZihlLmV4cG9ydHM9ZixvKCkpe3ZhciBkPS9bPyZdKD86Y2FsbGJhY2t8Y2IpPShbXiYjXSspLyxwPS8oLiopXC4oW14uXSspLyxsPS9eKFx3KykoXC58JCkoLiopJC8saD1bImFwcGVuZENoaWxkIiwiaW5zZXJ0QmVmb3JlIiwicmVwbGFjZUNoaWxkIl07Tm9kZSYmTm9kZS5wcm90b3R5cGUmJk5vZGUucHJvdG90eXBlLmFwcGVuZENoaWxkP3UuaW5QbGFjZShOb2RlLnByb3RvdHlwZSxoLCJkb20tIik6KHUuaW5QbGFjZShIVE1MRWxlbWVudC5wcm90b3R5cGUsaCwiZG9tLSIpLHUuaW5QbGFjZShIVE1MSGVhZEVsZW1lbnQucHJvdG90eXBlLGgsImRvbS0iKSx1LmluUGxhY2UoSFRNTEJvZHlFbGVtZW50LnByb3RvdHlwZSxoLCJkb20tIikpLGYub24oImRvbS1zdGFydCIsZnVuY3Rpb24odCl7cih0WzBdKX0pfX0se31dLDExOltmdW5jdGlvbih0LGUsbil7dmFyIHI9dCgiZWUiKS5nZXQoIm11dGF0aW9uIiksbz10KCJ3cmFwLWZ1bmN0aW9uIikociksaT1OUkVVTS5vLk1PO2UuZXhwb3J0cz1yLGkmJih3aW5kb3cuTXV0YXRpb25PYnNlcnZlcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGk/bmV3IGkobyh0LCJmbi0iKSk6aS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LE11dGF0aW9uT2JzZXJ2ZXIucHJvdG90eXBlPWkucHJvdG90eXBlKX0se31dLDEyOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXt2YXIgZT1pLmNvbnRleHQoKSxuPXModCwiZXhlY3V0b3ItIixlLG51bGwsITEpLHI9bmV3IGYobik7cmV0dXJuIGkuY29udGV4dChyKS5nZXRDdHg9ZnVuY3Rpb24oKXtyZXR1cm4gZX0scn12YXIgbz10KCJ3cmFwLWZ1bmN0aW9uIiksaT10KCJlZSIpLmdldCgicHJvbWlzZSIpLGE9dCgiZWUiKS5nZXRPclNldENvbnRleHQscz1vKGkpLGM9dCgzMSksZj1OUkVVTS5vLlBSO2UuZXhwb3J0cz1pLGYmJih3aW5kb3cuUHJvbWlzZT1yLFsiYWxsIiwicmFjZSJdLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9Zlt0XTtmW3RdPWZ1bmN0aW9uKG4pe2Z1bmN0aW9uIHIodCl7cmV0dXJuIGZ1bmN0aW9uKCl7aS5lbWl0KCJwcm9wYWdhdGUiLFtudWxsLCFvXSxhLCExLCExKSxvPW98fCF0fX12YXIgbz0hMTtjKG4sZnVuY3Rpb24oZSxuKXtQcm9taXNlLnJlc29sdmUobikudGhlbihyKCJhbGwiPT09dCkscighMSkpfSk7dmFyIGE9ZS5hcHBseShmLGFyZ3VtZW50cykscz1mLnJlc29sdmUoYSk7cmV0dXJuIHN9fSksWyJyZXNvbHZlIiwicmVqZWN0Il0uZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZT1mW3RdO2ZbdF09ZnVuY3Rpb24odCl7dmFyIG49ZS5hcHBseShmLGFyZ3VtZW50cyk7cmV0dXJuIHQhPT1uJiZpLmVtaXQoInByb3BhZ2F0ZSIsW3QsITBdLG4sITEsITEpLG59fSksZi5wcm90b3R5cGVbImNhdGNoIl09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbihudWxsLHQpfSxmLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGYucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6cn19KSxjKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGYpLGZ1bmN0aW9uKHQsZSl7dHJ5e3JbZV09ZltlXX1jYXRjaChuKXt9fSksby53cmFwSW5QbGFjZShmLnByb3RvdHlwZSwidGhlbiIsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxuPW8uYXJnc1RvQXJyYXkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHI9YShlKTtyLnByb21pc2U9ZSxuWzBdPXMoblswXSwiY2ItIixyLG51bGwsITEpLG5bMV09cyhuWzFdLCJjYi0iLHIsbnVsbCwhMSk7dmFyIGM9dC5hcHBseSh0aGlzLG4pO3JldHVybiByLm5leHRQcm9taXNlPWMsaS5lbWl0KCJwcm9wYWdhdGUiLFtlLCEwXSxjLCExLCExKSxjfX0pLGkub24oImV4ZWN1dG9yLXN0YXJ0IixmdW5jdGlvbih0KXt0WzBdPXModFswXSwicmVzb2x2ZS0iLHRoaXMsbnVsbCwhMSksdFsxXT1zKHRbMV0sInJlc29sdmUtIix0aGlzLG51bGwsITEpfSksaS5vbigiZXhlY3V0b3ItZXJyIixmdW5jdGlvbih0LGUsbil7dFsxXShuKX0pLGkub24oImNiLWVuZCIsZnVuY3Rpb24odCxlLG4pe2kuZW1pdCgicHJvcGFnYXRlIixbbiwhMF0sdGhpcy5uZXh0UHJvbWlzZSwhMSwhMSl9KSxpLm9uKCJwcm9wYWdhdGUiLGZ1bmN0aW9uKHQsZSxuKXt0aGlzLmdldEN0eCYmIWV8fCh0aGlzLmdldEN0eD1mdW5jdGlvbigpe2lmKHQgaW5zdGFuY2VvZiBQcm9taXNlKXZhciBlPWkuY29udGV4dCh0KTtyZXR1cm4gZSYmZS5nZXRDdHg/ZS5nZXRDdHgoKTp0aGlzfSl9KSxyLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIiIrZn0pfSx7fV0sMTM6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgcj10KCJlZSIpLmdldCgicmFmIiksbz10KCJ3cmFwLWZ1bmN0aW9uIikociksaT0iZXF1ZXN0QW5pbWF0aW9uRnJhbWUiO2UuZXhwb3J0cz1yLG8uaW5QbGFjZSh3aW5kb3csWyJyIitpLCJtb3pSIitpLCJ3ZWJraXRSIitpLCJtc1IiK2ldLCJyYWYtIiksci5vbigicmFmLXN0YXJ0IixmdW5jdGlvbih0KXt0WzBdPW8odFswXSwiZm4tIil9KX0se31dLDE0OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUsbil7dFswXT1hKHRbMF0sImZuLSIsbnVsbCxuKX1mdW5jdGlvbiBvKHQsZSxuKXt0aGlzLm1ldGhvZD1uLHRoaXMudGltZXJEdXJhdGlvbj1pc05hTih0WzFdKT8wOit0WzFdLHRbMF09YSh0WzBdLCJmbi0iLHRoaXMsbil9dmFyIGk9dCgiZWUiKS5nZXQoInRpbWVyIiksYT10KCJ3cmFwLWZ1bmN0aW9uIikoaSkscz0ic2V0VGltZW91dCIsYz0ic2V0SW50ZXJ2YWwiLGY9ImNsZWFyVGltZW91dCIsdT0iLXN0YXJ0IixkPSItIjtlLmV4cG9ydHM9aSxhLmluUGxhY2Uod2luZG93LFtzLCJzZXRJbW1lZGlhdGUiXSxzK2QpLGEuaW5QbGFjZSh3aW5kb3csW2NdLGMrZCksYS5pblBsYWNlKHdpbmRvdyxbZiwiY2xlYXJJbW1lZGlhdGUiXSxmK2QpLGkub24oYyt1LHIpLGkub24ocyt1LG8pfSx7fV0sMTU6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7ZC5pblBsYWNlKGUsWyJvbnJlYWR5c3RhdGVjaGFuZ2UiXSwiZm4tIixzKX1mdW5jdGlvbiBvKCl7dmFyIHQ9dGhpcyxlPXUuY29udGV4dCh0KTt0LnJlYWR5U3RhdGU+MyYmIWUucmVzb2x2ZWQmJihlLnJlc29sdmVkPSEwLHUuZW1pdCgieGhyLXJlc29sdmVkIixbXSx0KSksZC5pblBsYWNlKHQseSwiZm4tIixzKX1mdW5jdGlvbiBpKHQpe3gucHVzaCh0KSxtJiYoRT9FLnRoZW4oYSk6dz93KGEpOihSPS1SLE8uZGF0YT1SKSl9ZnVuY3Rpb24gYSgpe2Zvcih2YXIgdD0wO3Q8eC5sZW5ndGg7dCsrKXIoW10seFt0XSk7eC5sZW5ndGgmJih4PVtdKX1mdW5jdGlvbiBzKHQsZSl7cmV0dXJuIGV9ZnVuY3Rpb24gYyh0LGUpe2Zvcih2YXIgbiBpbiB0KWVbbl09dFtuXTtyZXR1cm4gZX10KDcpO3ZhciBmPXQoImVlIiksdT1mLmdldCgieGhyIiksZD10KCJ3cmFwLWZ1bmN0aW9uIikodSkscD10KDIzKSxsPU5SRVVNLm8saD1sLlhIUixtPWwuTU8sdj1sLlBSLHc9bC5TSSxnPSJyZWFkeXN0YXRlY2hhbmdlIix5PVsib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbmxvYWRzdGFydCIsIm9ubG9hZGVuZCIsIm9ucHJvZ3Jlc3MiLCJvbnRpbWVvdXQiXSx4PVtdO2UuZXhwb3J0cz11O3ZhciBiPXdpbmRvdy5YTUxIdHRwUmVxdWVzdD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgaCh0KTt0cnl7dS5lbWl0KCJuZXcteGhyIixbZV0sZSksZS5hZGRFdmVudExpc3RlbmVyKGcsbyxwKCExKSl9Y2F0Y2gobil7dHJ5e3UuZW1pdCgiaW50ZXJuYWwtZXJyb3IiLFtuXSl9Y2F0Y2gocil7fX1yZXR1cm4gZX07aWYoYyhoLGIpLGIucHJvdG90eXBlPWgucHJvdG90eXBlLGQuaW5QbGFjZShiLnByb3RvdHlwZSxbIm9wZW4iLCJzZW5kIl0sIi14aHItIixzKSx1Lm9uKCJzZW5kLXhoci1zdGFydCIsZnVuY3Rpb24odCxlKXtyKHQsZSksaShlKX0pLHUub24oIm9wZW4teGhyLXN0YXJ0IixyKSxtKXt2YXIgRT12JiZ2LnJlc29sdmUoKTtpZighdyYmIXYpe3ZhciBSPTEsTz1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShSKTtuZXcgbShhKS5vYnNlcnZlKE8se2NoYXJhY3RlckRhdGE6ITB9KX19ZWxzZSBmLm9uKCJmbi1lbmQiLGZ1bmN0aW9uKHQpe3RbMF0mJnRbMF0udHlwZT09PWd8fGEoKX0pfSx7fV0sMTY6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQpe2lmKCFzKHQpKXJldHVybiBudWxsO3ZhciBlPXdpbmRvdy5OUkVVTTtpZighZS5sb2FkZXJfY29uZmlnKXJldHVybiBudWxsO3ZhciBuPShlLmxvYWRlcl9jb25maWcuYWNjb3VudElEfHwiIikudG9TdHJpbmcoKXx8bnVsbCxyPShlLmxvYWRlcl9jb25maWcuYWdlbnRJRHx8IiIpLnRvU3RyaW5nKCl8fG51bGwsZj0oZS5sb2FkZXJfY29uZmlnLnRydXN0S2V5fHwiIikudG9TdHJpbmcoKXx8bnVsbDtpZighbnx8IXIpcmV0dXJuIG51bGw7dmFyIGg9bC5nZW5lcmF0ZVNwYW5JZCgpLG09bC5nZW5lcmF0ZVRyYWNlSWQoKSx2PURhdGUubm93KCksdz17c3BhbklkOmgsdHJhY2VJZDptLHRpbWVzdGFtcDp2fTtyZXR1cm4odC5zYW1lT3JpZ2lufHxjKHQpJiZwKCkpJiYody50cmFjZUNvbnRleHRQYXJlbnRIZWFkZXI9byhoLG0pLHcudHJhY2VDb250ZXh0U3RhdGVIZWFkZXI9aShoLHYsbixyLGYpKSwodC5zYW1lT3JpZ2luJiYhdSgpfHwhdC5zYW1lT3JpZ2luJiZjKHQpJiZkKCkpJiYody5uZXdyZWxpY0hlYWRlcj1hKGgsbSx2LG4scixmKSksd31mdW5jdGlvbiBvKHQsZSl7cmV0dXJuIjAwLSIrZSsiLSIrdCsiLTAxIn1mdW5jdGlvbiBpKHQsZSxuLHIsbyl7dmFyIGk9MCxhPSIiLHM9MSxjPSIiLGY9IiI7cmV0dXJuIG8rIkBucj0iK2krIi0iK3MrIi0iK24rIi0iK3IrIi0iK3QrIi0iK2ErIi0iK2MrIi0iK2YrIi0iK2V9ZnVuY3Rpb24gYSh0LGUsbixyLG8saSl7dmFyIGE9ImJ0b2EiaW4gd2luZG93JiYiZnVuY3Rpb24iPT10eXBlb2Ygd2luZG93LmJ0b2E7aWYoIWEpcmV0dXJuIG51bGw7dmFyIHM9e3Y6WzAsMV0sZDp7dHk6IkJyb3dzZXIiLGFjOnIsYXA6byxpZDp0LHRyOmUsdGk6bn19O3JldHVybiBpJiZyIT09aSYmKHMuZC50az1pKSxidG9hKEpTT04uc3RyaW5naWZ5KHMpKX1mdW5jdGlvbiBzKHQpe3JldHVybiBmKCkmJmModCl9ZnVuY3Rpb24gYyh0KXt2YXIgZT0hMSxuPXt9O2lmKCJpbml0ImluIE5SRVVNJiYiZGlzdHJpYnV0ZWRfdHJhY2luZyJpbiBOUkVVTS5pbml0JiYobj1OUkVVTS5pbml0LmRpc3RyaWJ1dGVkX3RyYWNpbmcpLHQuc2FtZU9yaWdpbillPSEwO2Vsc2UgaWYobi5hbGxvd2VkX29yaWdpbnMgaW5zdGFuY2VvZiBBcnJheSlmb3IodmFyIHI9MDtyPG4uYWxsb3dlZF9vcmlnaW5zLmxlbmd0aDtyKyspe3ZhciBvPWgobi5hbGxvd2VkX29yaWdpbnNbcl0pO2lmKHQuaG9zdG5hbWU9PT1vLmhvc3RuYW1lJiZ0LnByb3RvY29sPT09by5wcm90b2NvbCYmdC5wb3J0PT09by5wb3J0KXtlPSEwO2JyZWFrfX1yZXR1cm4gZX1mdW5jdGlvbiBmKCl7cmV0dXJuImluaXQiaW4gTlJFVU0mJiJkaXN0cmlidXRlZF90cmFjaW5nImluIE5SRVVNLmluaXQmJiEhTlJFVU0uaW5pdC5kaXN0cmlidXRlZF90cmFjaW5nLmVuYWJsZWR9ZnVuY3Rpb24gdSgpe3JldHVybiJpbml0ImluIE5SRVVNJiYiZGlzdHJpYnV0ZWRfdHJhY2luZyJpbiBOUkVVTS5pbml0JiYhIU5SRVVNLmluaXQuZGlzdHJpYnV0ZWRfdHJhY2luZy5leGNsdWRlX25ld3JlbGljX2hlYWRlcn1mdW5jdGlvbiBkKCl7cmV0dXJuImluaXQiaW4gTlJFVU0mJiJkaXN0cmlidXRlZF90cmFjaW5nImluIE5SRVVNLmluaXQmJk5SRVVNLmluaXQuZGlzdHJpYnV0ZWRfdHJhY2luZy5jb3JzX3VzZV9uZXdyZWxpY19oZWFkZXIhPT0hMX1mdW5jdGlvbiBwKCl7cmV0dXJuImluaXQiaW4gTlJFVU0mJiJkaXN0cmlidXRlZF90cmFjaW5nImluIE5SRVVNLmluaXQmJiEhTlJFVU0uaW5pdC5kaXN0cmlidXRlZF90cmFjaW5nLmNvcnNfdXNlX3RyYWNlY29udGV4dF9oZWFkZXJzfXZhciBsPXQoMjgpLGg9dCgxOCk7ZS5leHBvcnRzPXtnZW5lcmF0ZVRyYWNlUGF5bG9hZDpyLHNob3VsZEdlbmVyYXRlVHJhY2U6c319LHt9XSwxNzpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7dmFyIGU9dGhpcy5wYXJhbXMsbj10aGlzLm1ldHJpY3M7aWYoIXRoaXMuZW5kZWQpe3RoaXMuZW5kZWQ9ITA7Zm9yKHZhciByPTA7cjxwO3IrKyl0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZFtyXSx0aGlzLmxpc3RlbmVyLCExKTtyZXR1cm4gZS5wcm90b2NvbCYmImRhdGEiPT09ZS5wcm90b2NvbD92b2lkIGcoIkFqYXgvRGF0YVVybC9FeGNsdWRlZCIpOnZvaWQoZS5hYm9ydGVkfHwobi5kdXJhdGlvbj1hLm5vdygpLXRoaXMuc3RhcnRUaW1lLHRoaXMubG9hZENhcHR1cmVDYWxsZWR8fDQhPT10LnJlYWR5U3RhdGU/bnVsbD09ZS5zdGF0dXMmJihlLnN0YXR1cz0wKTppKHRoaXMsdCksbi5jYlRpbWU9dGhpcy5jYlRpbWUscygieGhyIixbZSxuLHRoaXMuc3RhcnRUaW1lLHRoaXMuZW5kVGltZSwieGhyIl0sdGhpcykpKX19ZnVuY3Rpb24gbyh0LGUpe3ZhciBuPWMoZSkscj10LnBhcmFtcztyLmhvc3RuYW1lPW4uaG9zdG5hbWUsci5wb3J0PW4ucG9ydCxyLnByb3RvY29sPW4ucHJvdG9jb2wsci5ob3N0PW4uaG9zdG5hbWUrIjoiK24ucG9ydCxyLnBhdGhuYW1lPW4ucGF0aG5hbWUsdC5wYXJzZWRPcmlnaW49bix0LnNhbWVPcmlnaW49bi5zYW1lT3JpZ2lufWZ1bmN0aW9uIGkodCxlKXt0LnBhcmFtcy5zdGF0dXM9ZS5zdGF0dXM7dmFyIG49dihlLHQubGFzdFNpemUpO2lmKG4mJih0Lm1ldHJpY3MucnhTaXplPW4pLHQuc2FtZU9yaWdpbil7dmFyIHI9ZS5nZXRSZXNwb25zZUhlYWRlcigiWC1OZXdSZWxpYy1BcHAtRGF0YSIpO3ImJih0LnBhcmFtcy5jYXQ9ci5zcGxpdCgiLCAiKS5wb3AoKSl9dC5sb2FkQ2FwdHVyZUNhbGxlZD0hMH12YXIgYT10KCJsb2FkZXIiKTtpZihhLnhocldyYXBwYWJsZSYmIWEuZGlzYWJsZWQpe3ZhciBzPXQoImhhbmRsZSIpLGM9dCgxOCksZj10KDE2KS5nZW5lcmF0ZVRyYWNlUGF5bG9hZCx1PXQoImVlIiksZD1bImxvYWQiLCJlcnJvciIsImFib3J0IiwidGltZW91dCJdLHA9ZC5sZW5ndGgsbD10KCJpZCIpLGg9dCgyNCksbT10KDIyKSx2PXQoMTkpLHc9dCgyMyksZz10KDI1KS5yZWNvcmRTdXBwb3J0YWJpbGl0eSx5PU5SRVVNLm8uUkVRLHg9d2luZG93LlhNTEh0dHBSZXF1ZXN0O2EuZmVhdHVyZXMueGhyPSEwLHQoMTUpLHQoOCksdS5vbigibmV3LXhociIsZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLnRvdGFsQ2JzPTAsZS5jYWxsZWQ9MCxlLmNiVGltZT0wLGUuZW5kPXIsZS5lbmRlZD0hMSxlLnhockd1aWRzPXt9LGUubGFzdFNpemU9bnVsbCxlLmxvYWRDYXB0dXJlQ2FsbGVkPSExLGUucGFyYW1zPXRoaXMucGFyYW1zfHx7fSxlLm1ldHJpY3M9dGhpcy5tZXRyaWNzfHx7fSx0LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGZ1bmN0aW9uKG4pe2koZSx0KX0sdyghMSkpLGgmJihoPjM0fHxoPDEwKXx8dC5hZGRFdmVudExpc3RlbmVyKCJwcm9ncmVzcyIsZnVuY3Rpb24odCl7ZS5sYXN0U2l6ZT10LmxvYWRlZH0sdyghMSkpfSksdS5vbigib3Blbi14aHItc3RhcnQiLGZ1bmN0aW9uKHQpe3RoaXMucGFyYW1zPXttZXRob2Q6dFswXX0sbyh0aGlzLHRbMV0pLHRoaXMubWV0cmljcz17fX0pLHUub24oIm9wZW4teGhyLWVuZCIsZnVuY3Rpb24odCxlKXsibG9hZGVyX2NvbmZpZyJpbiBOUkVVTSYmInhwaWQiaW4gTlJFVU0ubG9hZGVyX2NvbmZpZyYmdGhpcy5zYW1lT3JpZ2luJiZlLnNldFJlcXVlc3RIZWFkZXIoIlgtTmV3UmVsaWMtSUQiLE5SRVVNLmxvYWRlcl9jb25maWcueHBpZCk7dmFyIG49Zih0aGlzLnBhcnNlZE9yaWdpbik7aWYobil7dmFyIHI9ITE7bi5uZXdyZWxpY0hlYWRlciYmKGUuc2V0UmVxdWVzdEhlYWRlcigibmV3cmVsaWMiLG4ubmV3cmVsaWNIZWFkZXIpLHI9ITApLG4udHJhY2VDb250ZXh0UGFyZW50SGVhZGVyJiYoZS5zZXRSZXF1ZXN0SGVhZGVyKCJ0cmFjZXBhcmVudCIsbi50cmFjZUNvbnRleHRQYXJlbnRIZWFkZXIpLG4udHJhY2VDb250ZXh0U3RhdGVIZWFkZXImJmUuc2V0UmVxdWVzdEhlYWRlcigidHJhY2VzdGF0ZSIsbi50cmFjZUNvbnRleHRTdGF0ZUhlYWRlcikscj0hMCksciYmKHRoaXMuZHQ9bil9fSksdS5vbigic2VuZC14aHItc3RhcnQiLGZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5tZXRyaWNzLHI9dFswXSxvPXRoaXM7aWYobiYmcil7dmFyIGk9bShyKTtpJiYobi50eFNpemU9aSl9dGhpcy5zdGFydFRpbWU9YS5ub3coKSx0aGlzLmxpc3RlbmVyPWZ1bmN0aW9uKHQpe3RyeXsiYWJvcnQiIT09dC50eXBlfHxvLmxvYWRDYXB0dXJlQ2FsbGVkfHwoby5wYXJhbXMuYWJvcnRlZD0hMCksKCJsb2FkIiE9PXQudHlwZXx8by5jYWxsZWQ9PT1vLnRvdGFsQ2JzJiYoby5vbmxvYWRDYWxsZWR8fCJmdW5jdGlvbiIhPXR5cGVvZiBlLm9ubG9hZCkpJiZvLmVuZChlKX1jYXRjaChuKXt0cnl7dS5lbWl0KCJpbnRlcm5hbC1lcnJvciIsW25dKX1jYXRjaChyKXt9fX07Zm9yKHZhciBzPTA7czxwO3MrKyllLmFkZEV2ZW50TGlzdGVuZXIoZFtzXSx0aGlzLmxpc3RlbmVyLHcoITEpKX0pLHUub24oInhoci1jYi10aW1lIixmdW5jdGlvbih0LGUsbil7dGhpcy5jYlRpbWUrPXQsZT90aGlzLm9ubG9hZENhbGxlZD0hMDp0aGlzLmNhbGxlZCs9MSx0aGlzLmNhbGxlZCE9PXRoaXMudG90YWxDYnN8fCF0aGlzLm9ubG9hZENhbGxlZCYmImZ1bmN0aW9uIj09dHlwZW9mIG4ub25sb2FkfHx0aGlzLmVuZChuKX0pLHUub24oInhoci1sb2FkLWFkZGVkIixmdW5jdGlvbih0LGUpe3ZhciBuPSIiK2wodCkrISFlO3RoaXMueGhyR3VpZHMmJiF0aGlzLnhockd1aWRzW25dJiYodGhpcy54aHJHdWlkc1tuXT0hMCx0aGlzLnRvdGFsQ2JzKz0xKX0pLHUub24oInhoci1sb2FkLXJlbW92ZWQiLGZ1bmN0aW9uKHQsZSl7dmFyIG49IiIrbCh0KSshIWU7dGhpcy54aHJHdWlkcyYmdGhpcy54aHJHdWlkc1tuXSYmKGRlbGV0ZSB0aGlzLnhockd1aWRzW25dLHRoaXMudG90YWxDYnMtPTEpfSksdS5vbigieGhyLXJlc29sdmVkIixmdW5jdGlvbigpe3RoaXMuZW5kVGltZT1hLm5vdygpfSksdS5vbigiYWRkRXZlbnRMaXN0ZW5lci1lbmQiLGZ1bmN0aW9uKHQsZSl7ZSBpbnN0YW5jZW9mIHgmJiJsb2FkIj09PXRbMF0mJnUuZW1pdCgieGhyLWxvYWQtYWRkZWQiLFt0WzFdLHRbMl1dLGUpfSksdS5vbigicmVtb3ZlRXZlbnRMaXN0ZW5lci1lbmQiLGZ1bmN0aW9uKHQsZSl7ZSBpbnN0YW5jZW9mIHgmJiJsb2FkIj09PXRbMF0mJnUuZW1pdCgieGhyLWxvYWQtcmVtb3ZlZCIsW3RbMV0sdFsyXV0sZSl9KSx1Lm9uKCJmbi1zdGFydCIsZnVuY3Rpb24odCxlLG4pe2UgaW5zdGFuY2VvZiB4JiYoIm9ubG9hZCI9PT1uJiYodGhpcy5vbmxvYWQ9ITApLCgibG9hZCI9PT0odFswXSYmdFswXS50eXBlKXx8dGhpcy5vbmxvYWQpJiYodGhpcy54aHJDYlN0YXJ0PWEubm93KCkpKX0pLHUub24oImZuLWVuZCIsZnVuY3Rpb24odCxlKXt0aGlzLnhockNiU3RhcnQmJnUuZW1pdCgieGhyLWNiLXRpbWUiLFthLm5vdygpLXRoaXMueGhyQ2JTdGFydCx0aGlzLm9ubG9hZCxlXSxlKX0pLHUub24oImZldGNoLWJlZm9yZS1zdGFydCIsZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUpe3ZhciBuPSExO3JldHVybiBlLm5ld3JlbGljSGVhZGVyJiYodC5zZXQoIm5ld3JlbGljIixlLm5ld3JlbGljSGVhZGVyKSxuPSEwKSxlLnRyYWNlQ29udGV4dFBhcmVudEhlYWRlciYmKHQuc2V0KCJ0cmFjZXBhcmVudCIsZS50cmFjZUNvbnRleHRQYXJlbnRIZWFkZXIpLGUudHJhY2VDb250ZXh0U3RhdGVIZWFkZXImJnQuc2V0KCJ0cmFjZXN0YXRlIixlLnRyYWNlQ29udGV4dFN0YXRlSGVhZGVyKSxuPSEwKSxufXZhciBuLHI9dFsxXXx8e307InN0cmluZyI9PXR5cGVvZiB0WzBdP249dFswXTp0WzBdJiZ0WzBdLnVybD9uPXRbMF0udXJsOndpbmRvdy5VUkwmJnRbMF0mJnRbMF1pbnN0YW5jZW9mIFVSTCYmKG49dFswXS5ocmVmKSxuJiYodGhpcy5wYXJzZWRPcmlnaW49YyhuKSx0aGlzLnNhbWVPcmlnaW49dGhpcy5wYXJzZWRPcmlnaW4uc2FtZU9yaWdpbik7dmFyIG89Zih0aGlzLnBhcnNlZE9yaWdpbik7aWYobyYmKG8ubmV3cmVsaWNIZWFkZXJ8fG8udHJhY2VDb250ZXh0UGFyZW50SGVhZGVyKSlpZigic3RyaW5nIj09dHlwZW9mIHRbMF18fHdpbmRvdy5VUkwmJnRbMF0mJnRbMF1pbnN0YW5jZW9mIFVSTCl7dmFyIGk9e307Zm9yKHZhciBhIGluIHIpaVthXT1yW2FdO2kuaGVhZGVycz1uZXcgSGVhZGVycyhyLmhlYWRlcnN8fHt9KSxlKGkuaGVhZGVycyxvKSYmKHRoaXMuZHQ9byksdC5sZW5ndGg+MT90WzFdPWk6dC5wdXNoKGkpfWVsc2UgdFswXSYmdFswXS5oZWFkZXJzJiZlKHRbMF0uaGVhZGVycyxvKSYmKHRoaXMuZHQ9byl9KSx1Lm9uKCJmZXRjaC1zdGFydCIsZnVuY3Rpb24odCxlKXt0aGlzLnBhcmFtcz17fSx0aGlzLm1ldHJpY3M9e30sdGhpcy5zdGFydFRpbWU9YS5ub3coKSx0aGlzLmR0PWUsdC5sZW5ndGg+PTEmJih0aGlzLnRhcmdldD10WzBdKSx0Lmxlbmd0aD49MiYmKHRoaXMub3B0cz10WzFdKTt2YXIgbixyPXRoaXMub3B0c3x8e30saT10aGlzLnRhcmdldDtpZigic3RyaW5nIj09dHlwZW9mIGk/bj1pOiJvYmplY3QiPT10eXBlb2YgaSYmaSBpbnN0YW5jZW9mIHk/bj1pLnVybDp3aW5kb3cuVVJMJiYib2JqZWN0Ij09dHlwZW9mIGkmJmkgaW5zdGFuY2VvZiBVUkwmJihuPWkuaHJlZiksbyh0aGlzLG4pLCJkYXRhIiE9PXRoaXMucGFyYW1zLnByb3RvY29sKXt2YXIgcz0oIiIrKGkmJmkgaW5zdGFuY2VvZiB5JiZpLm1ldGhvZHx8ci5tZXRob2R8fCJHRVQiKSkudG9VcHBlckNhc2UoKTt0aGlzLnBhcmFtcy5tZXRob2Q9cyx0aGlzLnR4U2l6ZT1tKHIuYm9keSl8fDB9fSksdS5vbigiZmV0Y2gtZG9uZSIsZnVuY3Rpb24odCxlKXtpZih0aGlzLmVuZFRpbWU9YS5ub3coKSx0aGlzLnBhcmFtc3x8KHRoaXMucGFyYW1zPXt9KSwiZGF0YSI9PT10aGlzLnBhcmFtcy5wcm90b2NvbClyZXR1cm4gdm9pZCBnKCJBamF4L0RhdGFVcmwvRXhjbHVkZWQiKTt0aGlzLnBhcmFtcy5zdGF0dXM9ZT9lLnN0YXR1czowO3ZhciBuOyJzdHJpbmciPT10eXBlb2YgdGhpcy5yeFNpemUmJnRoaXMucnhTaXplLmxlbmd0aD4wJiYobj0rdGhpcy5yeFNpemUpO3ZhciByPXt0eFNpemU6dGhpcy50eFNpemUscnhTaXplOm4sZHVyYXRpb246YS5ub3coKS10aGlzLnN0YXJ0VGltZX07cygieGhyIixbdGhpcy5wYXJhbXMscix0aGlzLnN0YXJ0VGltZSx0aGlzLmVuZFRpbWUsImZldGNoIl0sdGhpcyl9KX19LHt9XSwxODpbZnVuY3Rpb24odCxlLG4pe3ZhciByPXt9O2UuZXhwb3J0cz1mdW5jdGlvbih0KXtpZih0IGluIHIpcmV0dXJuIHJbdF07aWYoMD09PSh0fHwiIikuaW5kZXhPZigiZGF0YToiKSlyZXR1cm57cHJvdG9jb2w6ImRhdGEifTt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIiksbj13aW5kb3cubG9jYXRpb24sbz17fTtlLmhyZWY9dCxvLnBvcnQ9ZS5wb3J0O3ZhciBpPWUuaHJlZi5zcGxpdCgiOi8vIik7IW8ucG9ydCYmaVsxXSYmKG8ucG9ydD1pWzFdLnNwbGl0KCIvIilbMF0uc3BsaXQoIkAiKS5wb3AoKS5zcGxpdCgiOiIpWzFdKSxvLnBvcnQmJiIwIiE9PW8ucG9ydHx8KG8ucG9ydD0iaHR0cHMiPT09aVswXT8iNDQzIjoiODAiKSxvLmhvc3RuYW1lPWUuaG9zdG5hbWV8fG4uaG9zdG5hbWUsby5wYXRobmFtZT1lLnBhdGhuYW1lLG8ucHJvdG9jb2w9aVswXSwiLyIhPT1vLnBhdGhuYW1lLmNoYXJBdCgwKSYmKG8ucGF0aG5hbWU9Ii8iK28ucGF0aG5hbWUpO3ZhciBhPSFlLnByb3RvY29sfHwiOiI9PT1lLnByb3RvY29sfHxlLnByb3RvY29sPT09bi5wcm90b2NvbCxzPWUuaG9zdG5hbWU9PT1kb2N1bWVudC5kb21haW4mJmUucG9ydD09PW4ucG9ydDtyZXR1cm4gby5zYW1lT3JpZ2luPWEmJighZS5ob3N0bmFtZXx8cyksIi8iPT09by5wYXRobmFtZSYmKHJbdF09byksb319LHt9XSwxOTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXt2YXIgbj10LnJlc3BvbnNlVHlwZTtyZXR1cm4ianNvbiI9PT1uJiZudWxsIT09ZT9lOiJhcnJheWJ1ZmZlciI9PT1ufHwiYmxvYiI9PT1ufHwianNvbiI9PT1uP28odC5yZXNwb25zZSk6InRleHQiPT09bnx8IiI9PT1ufHx2b2lkIDA9PT1uP28odC5yZXNwb25zZVRleHQpOnZvaWQgMH12YXIgbz10KDIyKTtlLmV4cG9ydHM9cn0se31dLDIwOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBvKHQsZSxuLHIpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB1LnJlY29yZFN1cHBvcnRhYmlsaXR5KCJBUEkvIitlKyIvY2FsbGVkIiksaSh0K2UsW2Yubm93KCldLmNvbmNhdChzKGFyZ3VtZW50cykpLG4/bnVsbDp0aGlzLHIpLG4/dm9pZCAwOnRoaXN9fXZhciBpPXQoImhhbmRsZSIpLGE9dCgzMSkscz10KDMyKSxjPXQoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPXQoImxvYWRlciIpLHU9dCgyNSksZD1OUkVVTTsidW5kZWZpbmVkIj09dHlwZW9mIHdpbmRvdy5uZXdyZWxpYyYmKG5ld3JlbGljPWQpO3ZhciBwPVsic2V0UGFnZVZpZXdOYW1lIiwic2V0Q3VzdG9tQXR0cmlidXRlIiwic2V0RXJyb3JIYW5kbGVyIiwiZmluaXNoZWQiLCJhZGRUb1RyYWNlIiwiaW5saW5lSGl0IiwiYWRkUmVsZWFzZSJdLGw9ImFwaS0iLGg9bCsiaXhuLSI7YShwLGZ1bmN0aW9uKHQsZSl7ZFtlXT1vKGwsZSwhMCwiYXBpIil9KSxkLmFkZFBhZ2VBY3Rpb249byhsLCJhZGRQYWdlQWN0aW9uIiwhMCksZC5zZXRDdXJyZW50Um91dGVOYW1lPW8obCwicm91dGVOYW1lIiwhMCksZS5leHBvcnRzPW5ld3JlbGljLGQuaW50ZXJhY3Rpb249ZnVuY3Rpb24oKXtyZXR1cm4obmV3IHIpLmdldCgpfTt2YXIgbT1yLnByb3RvdHlwZT17Y3JlYXRlVHJhY2VyOmZ1bmN0aW9uKHQsZSl7dmFyIG49e30scj10aGlzLG89ImZ1bmN0aW9uIj09dHlwZW9mIGU7cmV0dXJuIGkoaCsidHJhY2VyIixbZi5ub3coKSx0LG5dLHIpLGZ1bmN0aW9uKCl7aWYoYy5lbWl0KChvPyIiOiJuby0iKSsiZm4tc3RhcnQiLFtmLm5vdygpLHIsb10sbiksbyl0cnl7cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfWNhdGNoKHQpe3Rocm93IGMuZW1pdCgiZm4tZXJyIixbYXJndW1lbnRzLHRoaXMsdF0sbiksdH1maW5hbGx5e2MuZW1pdCgiZm4tZW5kIixbZi5ub3coKV0sbil9fX19O2EoImFjdGlvblRleHQsc2V0TmFtZSxzZXRBdHRyaWJ1dGUsc2F2ZSxpZ25vcmUsb25FbmQsZ2V0Q29udGV4dCxlbmQsZ2V0Ii5zcGxpdCgiLCIpLGZ1bmN0aW9uKHQsZSl7bVtlXT1vKGgsZSl9KSxuZXdyZWxpYy5ub3RpY2VFcnJvcj1mdW5jdGlvbih0LGUpeyJzdHJpbmciPT10eXBlb2YgdCYmKHQ9bmV3IEVycm9yKHQpKSx1LnJlY29yZFN1cHBvcnRhYmlsaXR5KCJBUEkvbm90aWNlRXJyb3IvY2FsbGVkIiksaSgiZXJyIixbdCxmLm5vdygpLCExLGVdKX19LHt9XSwyMTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7aWYoTlJFVU0uaW5pdCl7Zm9yKHZhciBlPU5SRVVNLmluaXQsbj10LnNwbGl0KCIuIikscj0wO3I8bi5sZW5ndGgtMTtyKyspaWYoZT1lW25bcl1dLCJvYmplY3QiIT10eXBlb2YgZSlyZXR1cm47cmV0dXJuIGU9ZVtuW24ubGVuZ3RoLTFdXX19ZS5leHBvcnRzPXtnZXRDb25maWd1cmF0aW9uOnJ9fSx7fV0sMjI6W2Z1bmN0aW9uKHQsZSxuKXtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0JiZ0Lmxlbmd0aClyZXR1cm4gdC5sZW5ndGg7aWYoIm9iamVjdCI9PXR5cGVvZiB0KXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZ0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXImJnQuYnl0ZUxlbmd0aClyZXR1cm4gdC5ieXRlTGVuZ3RoO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgQmxvYiYmdCBpbnN0YW5jZW9mIEJsb2ImJnQuc2l6ZSlyZXR1cm4gdC5zaXplO2lmKCEoInVuZGVmaW5lZCIhPXR5cGVvZiBGb3JtRGF0YSYmdCBpbnN0YW5jZW9mIEZvcm1EYXRhKSl0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpLmxlbmd0aH1jYXRjaChlKXtyZXR1cm59fX19LHt9XSwyMzpbZnVuY3Rpb24odCxlLG4pe3ZhciByPSExO3RyeXt2YXIgbz1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sInBhc3NpdmUiLHtnZXQ6ZnVuY3Rpb24oKXtyPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJ0ZXN0UGFzc2l2ZSIsbnVsbCxvKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigidGVzdFBhc3NpdmUiLG51bGwsbyl9Y2F0Y2goaSl7fWUuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gcj97cGFzc2l2ZTohMCxjYXB0dXJlOiEhdH06ISF0fX0se31dLDI0OltmdW5jdGlvbih0LGUsbil7dmFyIHI9MCxvPW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0ZpcmVmb3hbXC9cc10oXGQrXC5cZCspLyk7byYmKHI9K29bMV0pLGUuZXhwb3J0cz1yfSx7fV0sMjU6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7dmFyIG49W2EsdCx7bmFtZTp0fSxlXTtyZXR1cm4gaSgic3RvcmVNZXRyaWMiLG4sbnVsbCwiYXBpIiksbn1mdW5jdGlvbiBvKHQsZSl7dmFyIG49W3MsdCx7bmFtZTp0fSxlXTtyZXR1cm4gaSgic3RvcmVFdmVudE1ldHJpY3MiLG4sbnVsbCwiYXBpIiksbn12YXIgaT10KCJoYW5kbGUiKSxhPSJzbSIscz0iY20iO2UuZXhwb3J0cz17Y29uc3RhbnRzOntTVVBQT1JUQUJJTElUWV9NRVRSSUM6YSxDVVNUT01fTUVUUklDOnN9LHJlY29yZFN1cHBvcnRhYmlsaXR5OnIscmVjb3JkQ3VzdG9tOm99fSx7fV0sMjY6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKCl7cmV0dXJuIHMuZXhpc3RzJiZwZXJmb3JtYW5jZS5ub3c/TWF0aC5yb3VuZChwZXJmb3JtYW5jZS5ub3coKSk6KGk9TWF0aC5tYXgoKG5ldyBEYXRlKS5nZXRUaW1lKCksaSkpLWF9ZnVuY3Rpb24gbygpe3JldHVybiBpfXZhciBpPShuZXcgRGF0ZSkuZ2V0VGltZSgpLGE9aSxzPXQoMzMpO2UuZXhwb3J0cz1yLGUuZXhwb3J0cy5vZmZzZXQ9YSxlLmV4cG9ydHMuZ2V0TGFzdFRpbWVzdGFtcD1vfSx7fV0sMjc6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7dmFyIG49dC5nZXRFbnRyaWVzKCk7bi5mb3JFYWNoKGZ1bmN0aW9uKHQpeyJmaXJzdC1wYWludCI9PT10Lm5hbWU/bCgidGltaW5nIixbImZwIixNYXRoLmZsb29yKHQuc3RhcnRUaW1lKV0pOiJmaXJzdC1jb250ZW50ZnVsLXBhaW50Ij09PXQubmFtZSYmbCgidGltaW5nIixbImZjcCIsTWF0aC5mbG9vcih0LnN0YXJ0VGltZSldKX0pfWZ1bmN0aW9uIG8odCxlKXt2YXIgbj10LmdldEVudHJpZXMoKTtpZihuLmxlbmd0aD4wKXt2YXIgcj1uW24ubGVuZ3RoLTFdO2lmKGYmJmY8ci5zdGFydFRpbWUpcmV0dXJuO3ZhciBvPVtyXSxpPWEoe30pO2kmJm8ucHVzaChpKSxsKCJsY3AiLG8pfX1mdW5jdGlvbiBpKHQpe3QuZ2V0RW50cmllcygpLmZvckVhY2goZnVuY3Rpb24odCl7dC5oYWRSZWNlbnRJbnB1dHx8bCgiY2xzIixbdF0pfSl9ZnVuY3Rpb24gYSh0KXt2YXIgZT1uYXZpZ2F0b3IuY29ubmVjdGlvbnx8bmF2aWdhdG9yLm1vekNvbm5lY3Rpb258fG5hdmlnYXRvci53ZWJraXRDb25uZWN0aW9uO2lmKGUpcmV0dXJuIGUudHlwZSYmKHRbIm5ldC10eXBlIl09ZS50eXBlKSxlLmVmZmVjdGl2ZVR5cGUmJih0WyJuZXQtZXR5cGUiXT1lLmVmZmVjdGl2ZVR5cGUpLGUucnR0JiYodFsibmV0LXJ0dCJdPWUucnR0KSxlLmRvd25saW5rJiYodFsibmV0LWRsaW5rIl09ZS5kb3dubGluayksdH1mdW5jdGlvbiBzKHQpe2lmKHQgaW5zdGFuY2VvZiB3JiYheSl7dmFyIGU9TWF0aC5yb3VuZCh0LnRpbWVTdGFtcCksbj17dHlwZTp0LnR5cGV9O2EobiksZTw9aC5ub3coKT9uLmZpZD1oLm5vdygpLWU6ZT5oLm9mZnNldCYmZTw9RGF0ZS5ub3coKT8oZS09aC5vZmZzZXQsbi5maWQ9aC5ub3coKS1lKTplPWgubm93KCkseT0hMCxsKCJ0aW1pbmciLFsiZmkiLGUsbl0pfX1mdW5jdGlvbiBjKHQpeyJoaWRkZW4iPT09dCYmKGY9aC5ub3coKSxsKCJwYWdlSGlkZSIsW2ZdKSl9aWYoISgiaW5pdCJpbiBOUkVVTSYmInBhZ2Vfdmlld190aW1pbmciaW4gTlJFVU0uaW5pdCYmImVuYWJsZWQiaW4gTlJFVU0uaW5pdC5wYWdlX3ZpZXdfdGltaW5nJiZOUkVVTS5pbml0LnBhZ2Vfdmlld190aW1pbmcuZW5hYmxlZD09PSExKSl7dmFyIGYsdSxkLHAsbD10KCJoYW5kbGUiKSxoPXQoImxvYWRlciIpLG09dCgzMCksdj10KDIzKSx3PU5SRVVNLm8uRVY7aWYoIlBlcmZvcm1hbmNlT2JzZXJ2ZXIiaW4gd2luZG93JiYiZnVuY3Rpb24iPT10eXBlb2Ygd2luZG93LlBlcmZvcm1hbmNlT2JzZXJ2ZXIpe3U9bmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIocik7dHJ5e3Uub2JzZXJ2ZSh7ZW50cnlUeXBlczpbInBhaW50Il19KX1jYXRjaChnKXt9ZD1uZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihvKTt0cnl7ZC5vYnNlcnZlKHtlbnRyeVR5cGVzOlsibGFyZ2VzdC1jb250ZW50ZnVsLXBhaW50Il19KX1jYXRjaChnKXt9cD1uZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihpKTt0cnl7cC5vYnNlcnZlKHt0eXBlOiJsYXlvdXQtc2hpZnQiLGJ1ZmZlcmVkOiEwfSl9Y2F0Y2goZyl7fX1pZigiYWRkRXZlbnRMaXN0ZW5lciJpbiBkb2N1bWVudCl7dmFyIHk9ITEseD1bImNsaWNrIiwia2V5ZG93biIsIm1vdXNlZG93biIsInBvaW50ZXJkb3duIiwidG91Y2hzdGFydCJdO3guZm9yRWFjaChmdW5jdGlvbih0KXtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKHQscyx2KCExKSl9KX1tKGMpfX0se31dLDI4OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gZT8xNSZlW24rK106MTYqTWF0aC5yYW5kb20oKXwwfXZhciBlPW51bGwsbj0wLHI9d2luZG93LmNyeXB0b3x8d2luZG93Lm1zQ3J5cHRvO3ImJnIuZ2V0UmFuZG9tVmFsdWVzJiYoZT1yLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgzMSkpKTtmb3IodmFyIG8saT0ieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4IixhPSIiLHM9MDtzPGkubGVuZ3RoO3MrKylvPWlbc10sIngiPT09bz9hKz10KCkudG9TdHJpbmcoMTYpOiJ5Ij09PW8/KG89MyZ0KCl8OCxhKz1vLnRvU3RyaW5nKDE2KSk6YSs9bztyZXR1cm4gYX1mdW5jdGlvbiBvKCl7cmV0dXJuIGEoMTYpfWZ1bmN0aW9uIGkoKXtyZXR1cm4gYSgzMil9ZnVuY3Rpb24gYSh0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG4/MTUmbltyKytdOjE2Kk1hdGgucmFuZG9tKCl8MH12YXIgbj1udWxsLHI9MCxvPXdpbmRvdy5jcnlwdG98fHdpbmRvdy5tc0NyeXB0bztvJiZvLmdldFJhbmRvbVZhbHVlcyYmVWludDhBcnJheSYmKG49by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkodCkpKTtmb3IodmFyIGk9W10sYT0wO2E8dDthKyspaS5wdXNoKGUoKS50b1N0cmluZygxNikpO3JldHVybiBpLmpvaW4oIiIpfWUuZXhwb3J0cz17Z2VuZXJhdGVVdWlkOnIsZ2VuZXJhdGVTcGFuSWQ6byxnZW5lcmF0ZVRyYWNlSWQ6aX19LHt9XSwyOTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXtpZighbylyZXR1cm4hMTtpZih0IT09bylyZXR1cm4hMTtpZighZSlyZXR1cm4hMDtpZighaSlyZXR1cm4hMTtmb3IodmFyIG49aS5zcGxpdCgiLiIpLHI9ZS5zcGxpdCgiLiIpLGE9MDthPHIubGVuZ3RoO2ErKylpZihyW2FdIT09blthXSlyZXR1cm4hMTtyZXR1cm4hMH12YXIgbz1udWxsLGk9bnVsbCxhPS9WZXJzaW9uXC8oXFMrKVxzK1NhZmFyaS87aWYobmF2aWdhdG9yLnVzZXJBZ2VudCl7dmFyIHM9bmF2aWdhdG9yLnVzZXJBZ2VudCxjPXMubWF0Y2goYSk7YyYmcy5pbmRleE9mKCJDaHJvbWUiKT09PS0xJiZzLmluZGV4T2YoIkNocm9taXVtIik9PT0tMSYmKG89IlNhZmFyaSIsaT1jWzFdKX1lLmV4cG9ydHM9e2FnZW50Om8sdmVyc2lvbjppLG1hdGNoOnJ9fSx7fV0sMzA6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQpe2Z1bmN0aW9uIGUoKXt0KHMmJmRvY3VtZW50W3NdP2RvY3VtZW50W3NdOmRvY3VtZW50W2ldPyJoaWRkZW4iOiJ2aXNpYmxlIil9ImFkZEV2ZW50TGlzdGVuZXIiaW4gZG9jdW1lbnQmJmEmJmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoYSxlLG8oITEpKX12YXIgbz10KDIzKTtlLmV4cG9ydHM9cjt2YXIgaSxhLHM7InVuZGVmaW5lZCIhPXR5cGVvZiBkb2N1bWVudC5oaWRkZW4/KGk9ImhpZGRlbiIsYT0idmlzaWJpbGl0eWNoYW5nZSIscz0idmlzaWJpbGl0eVN0YXRlIik6InVuZGVmaW5lZCIhPXR5cGVvZiBkb2N1bWVudC5tc0hpZGRlbj8oaT0ibXNIaWRkZW4iLGE9Im1zdmlzaWJpbGl0eWNoYW5nZSIpOiJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnQud2Via2l0SGlkZGVuJiYoaT0id2Via2l0SGlkZGVuIixhPSJ3ZWJraXR2aXNpYmlsaXR5Y2hhbmdlIixzPSJ3ZWJraXRWaXNpYmlsaXR5U3RhdGUiKX0se31dLDMxOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIHQpby5jYWxsKHQscikmJihuW2ldPWUocix0W3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1yfSx7fV0sMzI6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSxuKXtlfHwoZT0wKSwidW5kZWZpbmVkIj09dHlwZW9mIG4mJihuPXQ/dC5sZW5ndGg6MCk7Zm9yKHZhciByPS0xLG89bi1lfHwwLGk9QXJyYXkobzwwPzA6byk7KytyPG87KWlbcl09dFtlK3JdO3JldHVybiBpfWUuZXhwb3J0cz1yfSx7fV0sMzM6W2Z1bmN0aW9uKHQsZSxuKXtlLmV4cG9ydHM9e2V4aXN0czoidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZSYmd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZyYmInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydH19LHt9XSxlZTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyh0KXtmdW5jdGlvbiBlKHQpe3JldHVybiB0JiZ0IGluc3RhbmNlb2Ygcj90OnQ/Zih0LGMsYSk6YSgpfWZ1bmN0aW9uIG4obixyLG8saSxhKXtpZihhIT09ITEmJihhPSEwKSwhbC5hYm9ydGVkfHxpKXt0JiZhJiZ0KG4scixvKTtmb3IodmFyIHM9ZShvKSxjPW0obiksZj1jLmxlbmd0aCx1PTA7dTxmO3UrKyljW3VdLmFwcGx5KHMscik7dmFyIHA9ZFt5W25dXTtyZXR1cm4gcCYmcC5wdXNoKFt4LG4scixzXSksc319ZnVuY3Rpb24gaSh0LGUpe2dbdF09bSh0KS5jb25jYXQoZSl9ZnVuY3Rpb24gaCh0LGUpe3ZhciBuPWdbdF07aWYobilmb3IodmFyIHI9MDtyPG4ubGVuZ3RoO3IrKyluW3JdPT09ZSYmbi5zcGxpY2UociwxKX1mdW5jdGlvbiBtKHQpe3JldHVybiBnW3RdfHxbXX1mdW5jdGlvbiB2KHQpe3JldHVybiBwW3RdPXBbdF18fG8obil9ZnVuY3Rpb24gdyh0LGUpe2wuYWJvcnRlZHx8dSh0LGZ1bmN0aW9uKHQsbil7ZT1lfHwiZmVhdHVyZSIseVtuXT1lLGUgaW4gZHx8KGRbZV09W10pfSl9dmFyIGc9e30seT17fSx4PXtvbjppLGFkZEV2ZW50TGlzdGVuZXI6aSxyZW1vdmVFdmVudExpc3RlbmVyOmgsZW1pdDpuLGdldDp2LGxpc3RlbmVyczptLGNvbnRleHQ6ZSxidWZmZXI6dyxhYm9ydDpzLGFib3J0ZWQ6ITF9O3JldHVybiB4fWZ1bmN0aW9uIGkodCl7cmV0dXJuIGYodCxjLGEpfWZ1bmN0aW9uIGEoKXtyZXR1cm4gbmV3IHJ9ZnVuY3Rpb24gcygpeyhkLmFwaXx8ZC5mZWF0dXJlKSYmKGwuYWJvcnRlZD0hMCxkPWwuYmFja2xvZz17fSl9dmFyIGM9Im5yQGNvbnRleHQiLGY9dCgiZ29zIiksdT10KDMxKSxkPXt9LHA9e30sbD1lLmV4cG9ydHM9bygpO2UuZXhwb3J0cy5nZXRPclNldENvbnRleHQ9aSxsLmJhY2tsb2c9ZH0se31dLGdvczpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4pe2lmKG8uY2FsbCh0LGUpKXJldHVybiB0W2VdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIHRbZV09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZS5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSxuLHIpe28uYnVmZmVyKFt0XSxyKSxvLmVtaXQodCxlLG4pfXZhciBvPXQoImVlIikuZ2V0KCJoYW5kbGUiKTtlLmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuIXR8fCJvYmplY3QiIT09ZSYmImZ1bmN0aW9uIiE9PWU/LTE6dD09PXdpbmRvdz8wOmEodCxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9dCgiZ29zIik7ZS5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKCl7aWYoIVQrKyl7dmFyIHQ9Ty5pbmZvPU5SRVVNLmluZm8sZT1tLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KGYuYWJvcnQsM2U0KSwhKHQmJnQubGljZW5zZUtleSYmdC5hcHBsaWNhdGlvbklEJiZlKSlyZXR1cm4gZi5hYm9ydCgpO2MoRSxmdW5jdGlvbihlLG4pe3RbZV18fCh0W2VdPW4pfSk7dmFyIG49YSgpO3MoIm1hcmsiLFsib25sb2FkIixuK08ub2Zmc2V0XSxudWxsLCJhcGkiKSxzKCJ0aW1pbmciLFsibG9hZCIsbl0pO3ZhciByPW0uY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7MD09PXQuYWdlbnQuaW5kZXhPZigiaHR0cDovLyIpfHwwPT09dC5hZ2VudC5pbmRleE9mKCJodHRwczovLyIpP3Iuc3JjPXQuYWdlbnQ6ci5zcmM9bCsiOi8vIit0LmFnZW50LGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocixlKX19ZnVuY3Rpb24gbygpeyJjb21wbGV0ZSI9PT1tLnJlYWR5U3RhdGUmJmkoKX1mdW5jdGlvbiBpKCl7cygibWFyayIsWyJkb21Db250ZW50IixhKCkrTy5vZmZzZXRdLG51bGwsImFwaSIpfXZhciBhPXQoMjYpLHM9dCgiaGFuZGxlIiksYz10KDMxKSxmPXQoImVlIiksdT10KDI5KSxkPXQoMjEpLHA9dCgyMyksbD1kLmdldENvbmZpZ3VyYXRpb24oInNzbCIpPT09ITE/Imh0dHAiOiJodHRwcyIsaD13aW5kb3csbT1oLmRvY3VtZW50LHY9ImFkZEV2ZW50TGlzdGVuZXIiLHc9ImF0dGFjaEV2ZW50IixnPWguWE1MSHR0cFJlcXVlc3QseT1nJiZnLnByb3RvdHlwZSx4PSExO05SRVVNLm89e1NUOnNldFRpbWVvdXQsU0k6aC5zZXRJbW1lZGlhdGUsQ1Q6Y2xlYXJUaW1lb3V0LFhIUjpnLFJFUTpoLlJlcXVlc3QsRVY6aC5FdmVudCxQUjpoLlByb21pc2UsTU86aC5NdXRhdGlvbk9ic2VydmVyfTt2YXIgYj0iIitsb2NhdGlvbixFPXtiZWFjb246ImJhbS5uci1kYXRhLm5ldCIsZXJyb3JCZWFjb246ImJhbS5uci1kYXRhLm5ldCIsYWdlbnQ6ImpzLWFnZW50Lm5ld3JlbGljLmNvbS9uci1zcGEtMTIxNi5taW4uanMifSxSPWcmJnkmJnlbdl0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksTz1lLmV4cG9ydHM9e29mZnNldDphLmdldExhc3RUaW1lc3RhbXAoKSxub3c6YSxvcmlnaW46YixmZWF0dXJlczp7fSx4aHJXcmFwcGFibGU6Uix1c2VyQWdlbnQ6dSxkaXNhYmxlZDp4fTtpZigheCl7dCgyMCksdCgyNyksbVt2XT8obVt2XSgiRE9NQ29udGVudExvYWRlZCIsaSxwKCExKSksaFt2XSgibG9hZCIscixwKCExKSkpOihtW3ddKCJvbnJlYWR5c3RhdGVjaGFuZ2UiLG8pLGhbd10oIm9ubG9hZCIscikpLHMoIm1hcmsiLFsiZmlyc3RieXRlIixhLmdldExhc3RUaW1lc3RhbXAoKV0sbnVsbCwiYXBpIik7dmFyIFQ9MH19LHt9XSwid3JhcC1mdW5jdGlvbiI6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7ZnVuY3Rpb24gbihlLG4scixjLGYpe2Z1bmN0aW9uIG5yV3JhcHBlcigpe3ZhciBpLGEsdSxwO3RyeXthPXRoaXMsaT1kKGFyZ3VtZW50cyksdT0iZnVuY3Rpb24iPT10eXBlb2Ygcj9yKGksYSk6cnx8e319Y2F0Y2gobCl7byhbbCwiIixbaSxhLGNdLHVdLHQpfXMobisic3RhcnQiLFtpLGEsY10sdSxmKTt0cnl7cmV0dXJuIHA9ZS5hcHBseShhLGkpfWNhdGNoKGgpe3Rocm93IHMobisiZXJyIixbaSxhLGhdLHUsZiksaH1maW5hbGx5e3MobisiZW5kIixbaSxhLHBdLHUsZil9fXJldHVybiBhKGUpP2U6KG58fChuPSIiKSxucldyYXBwZXJbcF09ZSxpKGUsbnJXcmFwcGVyLHQpLG5yV3JhcHBlcil9ZnVuY3Rpb24gcih0LGUscixvLGkpe3J8fChyPSIiKTt2YXIgcyxjLGYsdT0iLSI9PT1yLmNoYXJBdCgwKTtmb3IoZj0wO2Y8ZS5sZW5ndGg7ZisrKWM9ZVtmXSxzPXRbY10sYShzKXx8KHRbY109bihzLHU/YytyOnIsbyxjLGkpKX1mdW5jdGlvbiBzKG4scixpLGEpe2lmKCFofHxlKXt2YXIgcz1oO2g9ITA7dHJ5e3QuZW1pdChuLHIsaSxlLGEpfWNhdGNoKGMpe28oW2MsbixyLGldLHQpfWg9c319cmV0dXJuIHR8fCh0PXUpLG4uaW5QbGFjZT1yLG4uZmxhZz1wLG59ZnVuY3Rpb24gbyh0LGUpe2V8fChlPXUpO3RyeXtlLmVtaXQoImludGVybmFsLWVycm9yIix0KX1jYXRjaChuKXt9fWZ1bmN0aW9uIGkodCxlLG4pe2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmtleXMpdHJ5e3ZhciByPU9iamVjdC5rZXlzKHQpO3JldHVybiByLmZvckVhY2goZnVuY3Rpb24obil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRbbl19LHNldDpmdW5jdGlvbihlKXtyZXR1cm4gdFtuXT1lLGV9fSl9KSxlfWNhdGNoKGkpe28oW2ldLG4pfWZvcih2YXIgYSBpbiB0KWwuY2FsbCh0LGEpJiYoZVthXT10W2FdKTtyZXR1cm4gZX1mdW5jdGlvbiBhKHQpe3JldHVybiEodCYmdCBpbnN0YW5jZW9mIEZ1bmN0aW9uJiZ0LmFwcGx5JiYhdFtwXSl9ZnVuY3Rpb24gcyh0LGUpe3ZhciBuPWUodCk7cmV0dXJuIG5bcF09dCxpKHQsbix1KSxufWZ1bmN0aW9uIGModCxlLG4pe3ZhciByPXRbZV07dFtlXT1zKHIsbil9ZnVuY3Rpb24gZigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLG49MDtuPHQ7KytuKWVbbl09YXJndW1lbnRzW25dO3JldHVybiBlfXZhciB1PXQoImVlIiksZD10KDMyKSxwPSJuckBvcmlnaW5hbCIsbD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGg9ITE7ZS5leHBvcnRzPXIsZS5leHBvcnRzLndyYXBGdW5jdGlvbj1zLGUuZXhwb3J0cy53cmFwSW5QbGFjZT1jLGUuZXhwb3J0cy5hcmdzVG9BcnJheT1mfSx7fV19LHt9LFsibG9hZGVyIiwyLDE3LDUsMyw0XSk7PC9zY3JpcHQ+PHNjcmlwdD4KCQkJZnVuY3Rpb24gRGVmZXJKUyhzcmMpIHsKCQkJZnVuY3Rpb24gZG93bmxvYWRKU0F0T25sb2FkKCkgewoJCQl2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwoJCQllbGVtZW50LnNyYyA9IHNyYzsKCQkJZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTsKCQkJfQoJCQlpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpCgkJCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJsb2FkIiwgZG93bmxvYWRKU0F0T25sb2FkLCBmYWxzZSk7CgkJCWVsc2UgaWYgKHdpbmRvdy5hdHRhY2hFdmVudCkKCQkJd2luZG93LmF0dGFjaEV2ZW50KCJvbmxvYWQiLCBkb3dubG9hZEpTQXRPbmxvYWQpOwoJCQllbHNlIHdpbmRvdy5vbmxvYWQgPSBkb3dubG9hZEpTQXRPbmxvYWQ7CgkJCX0KCQk8L3NjcmlwdD4KCQk8c2NyaXB0PgoJCQkJRGVmZXJKUygiaHR0cHM6Ly9kMWJ4aDh1YXMxbW53Ny5jbG91ZGZyb250Lm5ldC9hc3NldHMvZW1iZWQuanMiKTsKCQkJPC9zY3JpcHQ+CgkJPHNjcmlwdD4KCQkJCURlZmVySlMoImh0dHBzOi8vZDFieGg4dWFzMW1udzcuY2xvdWRmcm9udC5uZXQvYXNzZXRzL2VtYmVkLmpzIik7CgkJCTwvc2NyaXB0PgoJCTxzY3JpcHQ+CgkJCQlEZWZlckpTKCJodHRwczovL2JhZGdlLmRpbWVuc2lvbnMuYWkvYmFkZ2UuanMiKTsKCQkJPC9zY3JpcHQ+CgkJPHNjcmlwdD4KCQkJCURlZmVySlMoImh0dHBzOi8vYmFkZ2UuZGltZW5zaW9ucy5haS9iYWRnZS5qcyIpOwoJCQk8L3NjcmlwdD4KCQk8c2NyaXB0PgoJCQkJRGVmZXJKUygiaHR0cHM6Ly9iYWRnZS5kaW1lbnNpb25zLmFpL2JhZGdlLmpzIik7CgkJCTwvc2NyaXB0PgoJCTxzY3JpcHQ+CgkJCXZhciBfdXJjb25maWcgPSB7IHNpZDogImRlZmMzYTdkLTRiMzQtNGI2Zi1hZDFjLTA3MTZlMGEwNWE2NSIsIGFpcDogMCwgdXNlUGFnZVByb3RvY29sOiBmYWxzZSB9OwoJCQkoZnVuY3Rpb24gKGQsIHMpCgkJCQoJCQl7IHZhciBqcyA9IGQuY3JlYXRlRWxlbWVudChzKSwgc2MgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdOyBqcy5zcmMgPSAiaHR0cHM6Ly9oaXQudXB0cmVuZHNkYXRhLmNvbS9ydW0ubWluLmpzIjsganMuYXN5bmMgPSAiYXN5bmMiOyBzYy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcywgc2MpOyB9CgkJCShkb2N1bWVudCwgInNjcmlwdCIpKTsKCQk8L3NjcmlwdD4KCQk8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CgkJPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KCQk8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im5vYXJjaGl2ZSI+CgkJPHRpdGxlPk1ldHJvbG9naWEsIFZvbHVtZSAzMCwgTnVtYmVyIDQsIEphbnVhcnkgMTk5MywgMTk5MyAtIElPUHNjaWVuY2U8L3RpdGxlPgoJCQk8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIG1pbmltdW0tc2NhbGU9MS4wIj4KCQk8IS0tIE5vdGUgR3JpZHNldCByZWYgMzUwODkgLS0+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi45NC4wL2Nzcy9jcml0aWNhbC1zdHlsZXMubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIC8+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi45NC4wL2Nzcy9tYWluLXN0eWxlcy5taW4uY3NzIiBtZWRpYT0icHJpbnQiIG9ubG9hZD0idGhpcy5tZWRpYT0nYWxsJyI+Cgo8IS0tW2lmIGx0ZSBJRSAxMF0+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi45NC4wL2Nzcy9ncmlkc2V0LWllLWx0ZTguY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KPCFbZW5kaWZdLS0+CjwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgKGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goCiAgICAgICAgeydndG0uc3RhcnQnOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30KICAgICAgICApO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgICAgaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9CiAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwogICAgICAgIH0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLU03M1o0VycpOwogICAgPC9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT48c2NyaXB0PgoJCS8qICBDdXR0aW5nIHRoZSBtdXN0YXJkIC0gaHR0cDovL3Jlc3BvbnNpdmVuZXdzLmNvLnVrL3Bvc3QvMTg5NDg0NjYzOTkvY3V0dGluZy10aGUtbXVzdGFyZCAqLwoJCQoJCS8qIEJlbG93IGlzIHRoZSBvcmlnaW5hbCBpZiBzdGF0ZW1lbnQsIGZyb20gdGhlIGxpbmsgYWJvdmUuIEkgaGF2ZSBhbWVuZGVkIGl0IHRvIHR1cm4gb2YgSlMgb24gYWxsIElFIGJyb3dzZXJzIGxlc3MgdGhhbiAxMC4KCQlUaGlzIGlzIGR1ZSB0byBhIGZ1bmN0aW9uIGluIHRoZSBpb3AuanF1ZXJ5LnRvb2xiYXIgbGluZSAzNS8zNi4gVXNlcyAucmVtb3ZlIHdoaWNoIGlzIG5vdCBuYXRpdmUganMgc3VwcG9ydGVkIGluIElFOSBvciBsb3dlciAqLwoJCS8qaWYoJ3F1ZXJ5U2VsZWN0b3InIGluIGRvY3VtZW50CgkJJiYgJ2xvY2FsU3RvcmFnZScgaW4gd2luZG93CgkJJiYgJ2FkZEV2ZW50TGlzdGVuZXInIGluIHdpbmRvdykqLwoJCQoJCS8qIFRoaXMgaXMgdGhlIHVwZGF0ZWQgc2VsZWN0b3IsIHRha2VuIGZyb206IGh0dHBzOi8vanVzdG1hcmt1cC5jb20vbG9nLzIwMTUvMDIvMjYvY3V0LXRoZS1tdXN0YXJkLXJldmlzaXRlZC8gKi8KCQlpZigndmlzaWJpbGl0eVN0YXRlJyBpbiBkb2N1bWVudCkgewoJCQoJCS8qISBsb2FkSlM6IGxvYWQgYSBKUy4gV2UgYXJlIGxvYWRpbmcgdGhpcyBjb21tYW5kIHN0cmFpZ2h0IGF3YXksIGJlZm9yZSB0aGUgYm9keSBsb2Fkcywgc28gdGhhdCBJRiBhIHVzZXIgaGFzIEpTIGVuYWJsZWQsIHRoZWlyIHNob3cgaGlkZSBwYW5lbHMgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGNsb3NlZC4gKi8KCQkvKiBJZiB0aGlzIGlzbid0IGhlcmUsIHRoZW4gdGhlc2UgcGFuZWxzIGFwcGVhciBvcGVuIHdoaWxlIHRoZSBwYWdlIGlzIGxvYWRpbmcsIHRoZW4gd2hlbiB0aGUganMgbG9hZHMgYXQgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZSwgdGhleSBhcmUgc2h1dC4gU28gdGhlIHVzZXJzIHNlZXMgb3BlbiBjb250ZW50LCB0aGVuIGhpZGRlbiBhZnRlciBhIHNlY29uZCBvciAyIHdoZW4gdGhlIGpzIGlzIGxvYWRlZC4gTm90IG5pY2UgKi8KCQlkb2N1bWVudC53cml0ZSgiPHN0eWxlPi5yZXZlYWwtY29udGVudHtkaXNwbGF5Om5vbmU7fS5zZWFyY2gtcmVzLWZpbHRlciAucmV2ZWFsLWNvbnRlbnR7ZGlzcGxheTpibG9jazt9PC9zdHlsZT4iKTsKCQl9CgkJPC9zY3JpcHQ+CgkJPHNjcmlwdD52YXIgX191emRibV8xID0gImI0ODNkYTg2LWQ4OWItNDJmOS04MGY5LTRlMDc4YWJiNDY1ZSI7dmFyIF9fdXpkYm1fMiA9ICJOR1psTlRFek9UVXRPRFF5TnkwME5HRmhMVGxrTTJFdE1HVmlNV0UyWW1NNE1UVXpKREUzTWk0M01pNHhNemt1TVRBMCI7PC9zY3JpcHQ+IDxzY3JpcHQ+KGZ1bmN0aW9uKHcsIGQsIGUsIHUsIGMsIGcsIGEsIGIpeyB3WyJTU0pTQ29ubmVjdG9yT2JqIl0gPSB7c3NfY2lkIDogYywgZG9tYWluX2luZm86ICJhdXRvIn07IGEgPSBkLmNyZWF0ZUVsZW1lbnQoZSk7IGEuYXN5bmMgPSB0cnVlOyBhLnNyYyA9IHU7IGIgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpWzBdOyBiLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsIGIpOyB9KSh3aW5kb3csZG9jdW1lbnQsInNjcmlwdCIsImh0dHBzOi8vY2RuLnBlcmZkcml2ZS5jb20vYXBlcnR1cmUvYXBlcnR1cmUuanMiLCJhMWMzIiwic3NDb25mIik7PC9zY3JpcHQ+PC9oZWFkPgoJPGJvZHkgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iIGNsYXNzPSJpc3NuLTAwMjYtMTM5NCI+CiAgICA8YSBpZD0iYmFjay10by10b3AtdGFyZ2V0IiB0YWJpbmRleD0iLTEiPjwvYT4KICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tTTczWjRXIgogICAgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+PGRpdiBjbGFzcz0iY29va2llcy1iYW5uZXItd3JhcCIgaWQ9ImNvb2tpZUJhbm5lciI+CiAgICA8ZGl2IGNsYXNzPSJjb29raWVzLWJhbm5lciBjZiI+CiAgICAgICAgVGhpcyBzaXRlIHVzZXMgY29va2llcy4gQnkgY29udGludWluZyB0byB1c2UgdGhpcyBzaXRlIHlvdSBhZ3JlZSB0byBvdXIgdXNlIG9mIGNvb2tpZXMuIFRvIGZpbmQgb3V0IG1vcmUsIHNlZSBvdXIKICAgICAgICA8YSBocmVmPSJodHRwOi8vaW9wcHVibGlzaGluZy5vcmcvcHJpdmFjeVBvbGljeSI+UHJpdmFjeSBhbmQgQ29va2llczwvYT4gcG9saWN5LgogICAgICAgIDxzcGFuIHJvbGU9ImJ1dHRvbiIgdGFiaW5kZXg9IjAiIGNsYXNzPSJmYS1pY29uIGNvb2tpZXMtYmFubmVyLWNsb3NlIj48c3ZnIGFyaWEtaGlkZGVuPSJ0cnVlIiBmb2N1c2FibGU9ImZhbHNlIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1MTIgNTEyIj48cGF0aCBkPSJNMjU2IDhDMTE5IDggOCAxMTkgOCAyNTZzMTExIDI0OCAyNDggMjQ4IDI0OC0xMTEgMjQ4LTI0OFMzOTMgOCAyNTYgOHptMTIxLjYgMzEzLjFjNC43IDQuNyA0LjcgMTIuMyAwIDE3TDMzOCAzNzcuNmMtNC43IDQuNy0xMi4zIDQuNy0xNyAwTDI1NiAzMTJsLTY1LjEgNjUuNmMtNC43IDQuNy0xMi4zIDQuNy0xNyAwTDEzNC40IDMzOGMtNC43LTQuNy00LjctMTIuMyAwLTE3bDY1LjYtNjUtNjUuNi02NS4xYy00LjctNC43LTQuNy0xMi4zIDAtMTdsMzkuNi0zOS42YzQuNy00LjcgMTIuMy00LjcgMTcgMGw2NSA2NS43IDY1LjEtNjUuNmM0LjctNC43IDEyLjMtNC43IDE3IDBsMzkuNiAzOS42YzQuNyA0LjcgNC43IDEyLjMgMCAxN0wzMTIgMjU2bDY1LjYgNjUuMXoiPjwvcGF0aD48L3N2Zz48c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+Q2xvc2UgdGhpcyBub3RpZmljYXRpb248L3NwYW4+PC9zcGFuPgogICAgPC9kaXY+CjwvZGl2PjwhLS0gU3RhcnQgUHJvZHVjdGlvbiB0b29sYmFyIC0tPgo8IS0tIEVuZCBQcm9kdWN0aW9uIHRvb2xiYXIgLS0+PCEtLSBTdGFydCBEb3dudGltZSBCYW5uZXIgLS0+CjwhLS0gRW5kIERvd250aW1lIEJhbm5lciAtLT48IS0tIEhlYWRlciB0aWxlIHN0YXJ0cyAtLT4KPGhlYWRlciByb2xlPSJiYW5uZXIiIGRhdGEtbmF2LWdyb3VwPgoJPGRpdiBjbGFzcz0iYWNjZXNzaWJpbGl0eSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KCSAgICA8cD48c3Ryb25nPkFjY2Vzc2liaWxpdHkgTGlua3M8L3N0cm9uZz48L3A+CgkgICAgPHVsPgoJICAgICAgICA8bGk+PGEgaHJlZj0iI3BhZ2UtY29udGVudCI+U2tpcCB0byBjb250ZW50PC9hPjwvbGk+CgkgICAgICAgIDxsaT48YSBocmVmPSIvc2VhcmNoI2NvbnRlbnRDb2wiPlNraXAgdG8gc2VhcmNoIElPUHNjaWVuY2U8L2E+PC9saT4KCSAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb3VybmFscyNjb250ZW50Q29sIj5Ta2lwIHRvIEpvdXJuYWxzIGxpc3Q8L2E+PC9saT4KCSAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYWdlL2FjY2Vzc2liaWxpdHkjY29udGVudENvbCI+QWNjZXNzaWJpbGl0eSBoZWxwPC9hPjwvbGk+CgkgICAgPC91bD4KCTwvZGl2PgogICAgPGRpdiBjbGFzcz0id3JhcHBlciBkZ2gtc2hvd2dyaWQgdGdoLXNob3dncmlkIGNmIiBuYW1lPSJjb250ZW50Q29sIj4KCiAgICAgICAgPGRpdiBpZD0ibW9iaWxlLWhlYWRlciIgY2xhc3M9InRhLWhpZGUgZGEtaGlkZSB3ZC1tb2JpbGUtbmF2Ij4KICAgICAgICAgICAgPGEgdGl0bGU9Ik1lbnUiIGhyZWY9IiNzaWRyLW1haW4iIGlkPSJzaW1wbGUtbWVudSIgY2xhc3M9Imljb24tbWVudSI+PC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8YSBocmVmPSIvIiBpdGVtcHJvcD0idXJsIiBjbGFzcz0iaGVhZGVyLWxvZ28gd2QtaGVhZGVyLWdyYXBoaWMiPgogICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0ibmFtZSIgY29udGVudD0iSU9Qc2NpZW5jZSI+CiAgICAgICAgICAgIDxzdmcgaGVpZ2h0PSIxNSIgd2lkdGg9IjEwMCI+CiAgICAgICAgICAgICAgICA8aW1hZ2UgeGxpbms6aHJlZj0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi45NC4wL2ltZy9pb3BzLWxvZ28uc3ZnIiBzcmM9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuOTQuMC9pbWcvaW9wcy1sb2dvLnBuZyIgaGVpZ2h0PSIxNSIgd2lkdGg9IjEwMCIgYm9yZGVyPSIwIiBpdGVtcHJvcD0ibG9nbyIgLz4KICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5JT1AgU2NpZW5jZSBob21lPC9zcGFuPgogICAgICAgIDwvYT4KCiAgICAgICAgPHNlY3Rpb24gcm9sZT0icmVnaW9uIiBhcmlhLWxhYmVsPSJBY2Nlc3NpYmlsaXR5IGxpbmtzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWNjZXNzaWJpbGl0eS1za2lwLWxpbmtzIj4KICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIGhyZWY9IiNza2lwLXRvLWNvbnRlbnQtbGluay10YXJnZXQiPlNraXAgdG8gY29udGVudDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgaWQ9ImFjY2Vzc2liaWxpdHktaGVscCIgaHJlZj0iL3BhZ2UvYWNjZXNzaWJpbGl0eSNza2lwLXRvLWNvbnRlbnQtbGluay10YXJnZXQiPkFjY2Vzc2liaWxpdHkgSGVscDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICA8bmF2IHJvbGU9Im5hdmlnYXRpb24iIGlkPSJzaWRyIiBjbGFzcz0ibS1oaWRlIHdkLW1haW4tbmF2IiBhcmlhLWxhYmVsPSJTaXRlIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibmF2LXRvcC1saW5rLWRyb3AtZG93biBuYXYtaXRlbSBuYXYtc2VhcmNoIiBkYXRhLW5hdi10cmlnZ2VyPSJhcnRpY2xlbG9va3VwIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0ibmF2LWRyb3Bkb3duLWFydGljbGVsb29rdXAiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuOTQuMC9pbWcvaWNvbi1zZWFyY2guc3ZnIiBhbHQ9IiI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+U2VhcmNoPC9zcGFuPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWpvdXJuYWxzIG5hdi1pdGVtIHdkLW5hdi1qb3VybmFsIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtdG9wLWxpbmstZHJvcC1kb3duIiBocmVmPSIvam91cm5hbHMiIGRhdGEtbmF2LXRyaWdnZXI9ImpvdXJuYWxzIj5Kb3VybmFsczxzcGFuIGNsYXNzPSJpY29uLWFycm93LWRvd24iPjwvc3Bhbj48L2E+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWRyb3AtZG93biB3ZC1uYXYtam91cm5hbC1kZCIgZGF0YS1uYXYtaXRlbT0iam91cm5hbHMiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9qb3VybmFscyI+CiAgICAgICAgICAgICAgICAgICAgICAgIEpvdXJuYWxzIGxpc3QKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibS1oaWRlIj5Ccm93c2UgbW9yZSB0aGFuIDEwMCBzY2llbmNlIGpvdXJuYWwgdGl0bGVzPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcGFnZS9zdWJqZWN0cyI+CiAgICAgICAgICAgICAgICAgICAgICAgIFN1YmplY3QgY29sbGVjdGlvbnMKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibS1oaWRlIj5SZWFkIHRoZSB2ZXJ5IGJlc3QgcmVzZWFyY2ggcHVibGlzaGVkIGluIElPUCBqb3VybmFsczwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2pvdXJuYWxzP3R5cGU9cGFydG5lciNqcy10YWItcHVicGFydCI+CiAgICAgICAgICAgICAgICAgICAgICAgIFB1Ymxpc2hpbmcgcGFydG5lcnMKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibS1oaWRlIj5QYXJ0bmVyIG9yZ2FuaXNhdGlvbnMgYW5kIHB1YmxpY2F0aW9uczwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2luZm8vcGFnZS9vcGVuYWNjZXNzIj4KICAgICAgICAgICAgICAgICAgICAgICAgT3BlbiBhY2Nlc3MKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibS1oaWRlIj5JT1AgUHVibGlzaGluZyBvcGVuIGFjY2VzcyBwb2xpY3kgZ3VpZGU8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jb25mZXJlbmNlLXNlcmllcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIElPUCBDb25mZXJlbmNlIFNlcmllcwogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLWhpZGUiPlJlYWQgb3BlbiBhY2Nlc3MgcHJvY2VlZGluZ3MgZnJvbSBzY2llbmNlIGNvbmZlcmVuY2VzIHdvcmxkd2lkZTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1ib29rcyBuYXYtaXRlbSB3ZC1uYXYtYm9va3MiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2Jvb2tzIiBjbGFzcz0ibmF2LXRvcC1saW5rIj5Cb29rczwvYT4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtcHVibGlzaGluZy1zdXBwb3J0IG5hdi1pdGVtIHdkLXB1Ymxpc2hpbmctc3VwcG9ydCI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wdWJsaXNoaW5nc3VwcG9ydC5pb3BzY2llbmNlLmlvcC5vcmciIGNsYXNzPSJuYXYtdG9wLWxpbmsiPlB1Ymxpc2hpbmcgU3VwcG9ydDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8IS0tIEhlYWRlciBMb2dpbiB0aWxlIHN0YXJ0cyBoZXJlIC0tPgogICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1sb2dpbiBuYXYtaXRlbSB3ZC1uYXYtbG9naW4iPgo8YSBjbGFzcz0ibmF2LXRvcC1saW5rLWRyb3AtZG93biIgaWQ9ImxvZ2luLWRyb3AtZG93bi11c2VyIiBocmVmPSJodHRwczovL215aW9wc2NpZW5jZS5pb3Aub3JnL3NpZ25pbj9vcmlnaW49YTAmcmV0dXJuPWh0dHBzJTNBJTJGJTJGaW9wc2NpZW5jZS5pb3Aub3JnJTJGaXNzdWUlMkYwMDI2LTEzOTQlMkYzMCUyRjQiIGRhdGEtbmF2LXRyaWdnZXI9ImxvZ2luIj48c3BhbiBjbGFzcz0ibmF2LXRvcC11c2VybmFtZSI+PHNwYW4gY2xhc3M9ImZhLWljb24iPjxzdmcgYXJpYS1oaWRkZW49InRydWUiIGZvY3VzYWJsZT0iZmFsc2UiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDQ5NiA1MTIiPjxwYXRoIGQ9Ik0yNDggOEMxMTEgOCAwIDExOSAwIDI1NnMxMTEgMjQ4IDI0OCAyNDggMjQ4LTExMSAyNDgtMjQ4UzM4NSA4IDI0OCA4em0wIDk2YzQ4LjYgMCA4OCAzOS40IDg4IDg4cy0zOS40IDg4LTg4IDg4LTg4LTM5LjQtODgtODggMzkuNC04OCA4OC04OHptMCAzNDRjLTU4LjcgMC0xMTEuMy0yNi42LTE0Ni41LTY4LjIgMTguOC0zNS40IDU1LjYtNTkuOCA5OC41LTU5LjggMi40IDAgNC44LjQgNy4xIDEuMSAxMyA0LjIgMjYuNiA2LjkgNDAuOSA2LjkgMTQuMyAwIDI4LTIuNyA0MC45LTYuOSAyLjMtLjcgNC43LTEuMSA3LjEtMS4xIDQyLjkgMCA3OS43IDI0LjQgOTguNSA1OS44QzM1OS4zIDQyMS40IDMwNi43IDQ0OCAyNDggNDQ4eiI+PC9wYXRoPjwvc3ZnPjwvc3Bhbj5Mb2dpbjwvc3Bhbj48c3BhbiBjbGFzcz0iaWNvbi1hcnJvdy1kb3duIj48L3NwYW4+PC9hPgogICAgICAgIDxkaXYgY2xhc3M9Im5hdi1kcm9wLWRvd24gd2QtbmF2LWxvZ2luLWRkIiBkYXRhLW5hdi1pdGVtPSJsb2dpbiI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbXlpb3BzY2llbmNlLmlvcC5vcmcvc2lnbmluP29yaWdpbj1hMCZyZXR1cm49aHR0cHMlM0ElMkYlMkZpb3BzY2llbmNlLmlvcC5vcmclMkZpc3N1ZSUyRjAwMjYtMTM5NCUyRjMwJTJGNCIgaWQ9IndkLWxvZ2luLWxpbmsiPklPUHNjaWVuY2UgbG9naW4gLyBTaWduIFVwPC9hPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+PCEtLSBIZWFkZXIgTG9naW4gdGlsZSBlbmRzIGhlcmUgLS0+CiAgICAgICAgICAgIDwvbmF2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iYXJ0LWxvb2t1cC1wYW5lbCBtLWhpZGUgbmF2LWRyb3AtZG93biIgZGF0YS1uYXYtaXRlbT0iYXJ0aWNsZWxvb2t1cCI+CiAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIHdyYXBwZXItLXNlYXJjaCBjZiI+CiAgICAgICAgPGEgdGl0bGU9IkNsb3NlIiBjbGFzcz0iY2xvc2UtaWNvbiBhcnQtbG9va3VwX19jbG9zZSIgdGFiaW5kZXg9IjAiIHJvbGU9ImJ1dHRvbiIgYXJpYS1kZXNjcmliZWRieT0iY2xvc2Utc2VhcmNoLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tY2xvc2UiPjwvc3Bhbj4KICAgICAgICA8L2E+CiAgICAgICAgPHAgaWQ9ImNsb3NlLXNlYXJjaC1kZXNjcmlwdGlvbiIgY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPkNsaWNrIGhlcmUgdG8gY2xvc2UgdGhpcyBwYW5lbC48L3A+CgogICAgICAgIDxkaXYgaWQ9InNlYXJjaCIgY2xhc3M9IndkLWhlYWRlci1zZWFyY2ggYXJ0LWxvb2t1cF9fc2VhcmNoIj4KICAgIDxmb3JtIGFjY2VwdC1jaGFyc2V0PSJ1dGYtOCxpc28tODg1OS0xIiBjbGFzcz0icHJpbWFyeS1zZWFyY2giIG1ldGhvZD0iZ2V0IiBhY3Rpb249Ii9uc2VhcmNoIiByb2xlPSJzZWFyY2giPgogICAgICAgIDxmaWVsZHNldCBhcmlhLWxhYmVsbGVkYnk9InNlYXJjaC1sZWdlbmQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbG9va3VwX19maWVsZHMtd3JhcHBlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzZWFyY2gtbGVnZW5kIiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+UHJpbWFyeSBzZWFyY2g8L2Rpdj4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InF1aWNrU2VhcmNoIj5TZWFyY2ggYWxsIElPUHNjaWVuY2UgY29udGVudDwvbGFiZWw+CgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgeC13ZWJraXQtc3BlZWNoPSIiIG5hbWU9InRlcm1zIiBpZD0icXVpY2tTZWFyY2giIGNsYXNzPSJhcnQtbG9va3VwX19maWVsZC0tZ3JvdyIKICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJTZWFyY2ggYWxsIElPUHNjaWVuY2UgY29udGVudCIgdmFsdWU9IiIvPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB4LXdlYmtpdC1zcGVlY2g9IiIgdmFsdWU9IlNlYXJjaCIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBoZHItc2VhcmNoLWJ0biBiZC0wIGFydC1sb29rdXBfX3N1Ym1pdCI+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ZpZWxkc2V0PgogICAgPC9mb3JtPgo8L2Rpdj4KPGRpdiBpZD0id2QtY29udGVudC1maW5kZXIiIGNsYXNzPSJhcnQtbG9va3VwX19jb250ZW50LWZpbmRlciI+CiAgICAgICAgICAgIDxmb3JtIGFjY2VwdC1jaGFyc2V0PSJ1dGYtOCxpc28tODg1OS0xIiBtZXRob2Q9ImdldCIgYWN0aW9uPSIvZmluZGNvbnRlbnQiIG5hbWU9ImNvbnRlbnRGaW5kZXJGb3JtIgogICAgICBpZD0id2QtZmluZC1hcnQtZm9ybSIgY2xhc3M9ImNmIGZpbmQtYXJ0aWNsZS1pc3N1ZS1kaXNwbGF5IiBhdXRvY29tcGxldGU9Ik9GRiI+CiAgICA8ZmllbGRzZXQgYXJpYS1sYWJlbGxlZGJ5PSJjb250ZW50LWZpbmRlci1sZWdlbmQiPgogICAgICAgIDxkaXYgaWQ9ImNvbnRlbnQtZmluZGVyLWxlZ2VuZCIgY2xhc3M9ImV5ZWJyb3cgZXllYnJvdy0tYmx1ZSI+QXJ0aWNsZSBMb29rdXA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbG9va3VwX19maWVsZHMtd3JhcHBlciI+CgogICAgICAgICAgICA8bGFiZWwgZm9yPSJDRl9KT1VSTkFMIiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+U2VsZWN0IGpvdXJuYWwgKHJlcXVpcmVkKTwvbGFiZWw+CiAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0iQ0ZfSk9VUk5BTCIKICAgICAgICBpZD0iQ0ZfSk9VUk5BTCJjbGFzcz0iZmluZC1hcnRpY2xlLXNlbGVjdCBhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZCBhcnQtbG9va3VwX19maWVsZC0tZ3JvdyBhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZC0tZmlyc3QiID4KICAgIDxvcHRpb24gdmFsdWU9Im5vbmUiICBoaWRkZW4gZGlzYWJsZWQ+U2VsZWN0IGpvdXJuYWwgKHJlcXVpcmVkKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDUzLTE1ODMiICAgPjJEIE1hdGVyLiAoMjAxNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwMDQtNDIzWCIgICA+QWN0YSBQaHlzLiBTaW4uIChPdmVyc2VhcyBFZG4pICgxOTkyIC0gMTk5OSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA0My02MjYyIiAgID5BZHYuIE5hdC4gU2NpOiBOYW5vc2NpLiBOYW5vdGVjaG5vbC4gKDIwMTAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxODgyLTA3ODYiICAgPkFwcGwuIFBoeXMuIEV4cHJlc3MgKDIwMDggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzU4LTUwOTAiICAgPkJpb2ZhYnJpY2F0aW9uICgyMDA5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0OC0zMTkwIiAgID5CaW9pbnNwaXIuIEJpb21pbS4gKDIwMDYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzQ4LTYwNVgiICAgPkJpb21lZC4gTWF0ZXIuICgyMDA2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1Ny0xOTc2IiAgID5CaW9tZWQuIFBoeXMuIEVuZy4gRXhwcmVzcyAoMjAxNSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA1MDgtMzQ0MyIgICA+QnIuIEouIEFwcGwuIFBoeXMuICgxOTUwIC0gMTk2Nyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAwOS05MjcxIiAgID5DaGluLiBKLiBBc3Ryb24uIEFzdHJvcGh5cy4gKDIwMDEgLSAyMDA4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDAzLTc3MTMiICAgPkNoaW4uIEouIENoZW0uIFBoeXMuICgxOTg3IC0gMjAwNyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTY3NC0wMDY4IiAgID5DaGluLiBKLiBDaGVtLiBQaHlzLiAoMjAwOCAtIDIwMTIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwMDktMTk2MyIgICA+Q2hpbmVzZSBQaHlzLiAoMjAwMCAtIDIwMDcpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2NzQtMTA1NiIgICA+Q2hpbmVzZSBQaHlzLiBCICgyMDA4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTY3NC0xMTM3IiAgID5DaGluZXNlIFBoeXMuIEMgKDIwMDggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMjU2LTMwN1giICAgPkNoaW5lc2UgUGh5cy4gTGV0dC4gKDE5ODQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMjY0LTkzODEiICAgPkNsYXNzLiBRdWFudHVtIEdyYXYuICgxOTg0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDE0My0wODE1IiAgID5DbGluLiBQaHlzLiBQaHlzaW9sLiBNZWFzLiAoMTk4MCAtIDE5OTIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNjQtNzgzMCIgICA+Q29tYnVzdC4gVGhlb3J5IE1vZGVsbGluZyAoMTk5NyAtIDIwMDQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAyNTMtNjEwMiIgICA+Q29tbXVuLiBUaGVvci4gUGh5cy4gKDE5ODIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzQ5LTQ2OTkiICAgPkNvbXB1dC4gU2NpLiBEaXNjLiAoMjAwOCAtIDIwMTUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTctMTczOSIgICA+Q29udmVyZy4gU2NpLiBQaHlzLiBPbmNvbC4gKDIwMTUgLSAyMDE4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTY3LTE4NDYiICAgPkRpc3RyaWIuIFN5c3QuIEVuZ25nLiAoMTk5MyAtIDE5OTkpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI3NTQtMjczNCIgICA+RUNTIEFkdi4gKDIwMjIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMTYyLTg3MzQiICAgPkVDUyBFbGVjdHJvY2hlbS4gTGV0dC4gKDIwMTIgLSAyMDE1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMTYyLTg3NzciICAgPkVDUyBKLiBTb2xpZCBTdGF0ZSBTY2kuIFRlY2hub2wuICgyMDEyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjc1NC0yNzI2IiAgID5FQ1MgU2Vucy4gUGx1cyAoMjAyMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIxNjItODc1MCIgICA+RUNTIFNvbGlkIFN0YXRlIExldHQuICgyMDEyIC0gMjAxNSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTkzOC01ODYyIiAgID5FQ1MgVHJhbnMuICgyMDA1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDI5NS01MDc1IiAgID5FUEwgKDE5ODYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxOTQ0LTg3ODMiICAgPkVsZWN0cm9jaGVtLiBTb2MuIEludGVyZmFjZSAoMTk5MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE5NDQtODc3NSIgICA+RWxlY3Ryb2NoZW0uIFNvbGlkLVN0YXRlIExldHQuICgxOTk4IC0gMjAxMik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjUxNi0xMDc1IiAgID5FbGVjdHJvbi4gU3RydWN0LiAoMjAxOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzEtODY5NSIgICA+RW5nLiBSZXMuIEV4cHJlc3MgKDIwMTkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE1LTc2MjAiICAgPkVudmlyb24uIFJlcy4gQ29tbXVuLiAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDgtOTMyNiIgICA+RW52aXJvbi4gUmVzLiBMZXR0LiAoMjAwNiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI3NTItNTI5NSIgICA+RW52aXJvbi4gUmVzLjogQ2xpbWF0ZSAoMjAyMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI3NTItNjY0WCIgICA+RW52aXJvbi4gUmVzLjogRWNvbC4gKDIwMjIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNzUyLTUzMDkiICAgPkVudmlyb24uIFJlcy46IEhlYWx0aCAoMjAyMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzQtNDUwNSIgICA+RW52aXJvbi4gUmVzLjogSW5mcmFzdHJ1Y3QuIFN1c3RhaW4uICgyMDIxIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDE0My0wODA3IiAgID5FdXIuIEouIFBoeXMuICgxOTgwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1OC04NTg1IiAgID5GbGV4LiBQcmludC4gRWxlY3Ryb24uICgyMDE1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTg3My03MDA1IiAgID5GbHVpZCBEeW4uIFJlcy4gKDE5ODYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMxLTYzMzEiICAgPkZ1bmN0LiBDb21wb3MuIFN0cnVjdC4gKDIwMTggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzU1LTEzMTUiICAgPklPUCBDb25mLiBTZXIuOiBFYXJ0aCBFbnZpcm9uLiBTY2kuICgyMDA4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc1Ny04OTlYIiAgID5JT1AgQ29uZi4gU2VyLjogTWF0ZXIuIFNjaS4gRW5nLiAoMjAwOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzMtMTM1NyIgICA+SU9QIFNjaU5vdGVzICgyMDIwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMS03OTkwIiAgID5JbnQuIEouIEV4dHJlbS4gTWFudWYuICgyMDE5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDI2Ni01NjExIiAgID5JbnZlcnNlIFByb2JsZW1zICgxOTg1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTA2NC01NjMyIiAgID5JenYuIE1hdGguICgxOTk1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc1Mi03MTYzIiAgID5KLiBCcmVhdGggUmVzLiAoMjAwNyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NzUtNzUxNiIgICA+Si4gQ29zbW9sLiBBc3Ryb3BhcnQuIFBoeXMuICgyMDAzIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTk0NS03MTExIiAgID5KLiBFbGVjdHJvY2hlbS4gU29jLiAoMTkwMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDItMjE0MCIgICA+Si4gR2VvcGh5cy4gRW5nLiAoMjAwNCAtIDIwMTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjExMjYtNjcwOCIgICA+Si4gSGlnaCBFbmVyZ3kgUGh5cy4gKDE5OTcgLSAyMDA5KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzQ4LTAyMjEiICAgPkouIEluc3QuICgyMDA2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2MC0xMzE3IiAgID5KLiBNaWNyb21lY2guIE1pY3JvZW5nLiAoMTk5MSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDEtMjU1MiIgICA+Si4gTmV1cmFsIEVuZy4gKDIwMDQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMzY4LTMyODEiICAgPkouIE51Y2wuIEVuZXJneSwgUGFydCBDIFBsYXNtYSBQaHlzLiAoMTk1OSAtIDE5NjYpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAxNTAtNTM2WCIgICA+Si4gT3B0LiAoMTk3NyAtIDE5OTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNDAtODk4NiIgICA+Si4gT3B0LiAoMjAxMCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjQtNDI1OCIgICA+Si4gT3B0LiBBOiBQdXJlIEFwcGwuIE9wdC4gKDE5OTkgLSAyMDA5KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDY0LTQyNjYiICAgPkouIE9wdC4gQjogUXVhbnR1bSBTZW1pY2xhc3MuIE9wdC4gKDE5OTkgLSAyMDA1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDIyLTM2ODkiICAgPkouIFBoeXMuIEE6IEdlbi4gUGh5cy4gKDE5NjggLSAxOTcyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMzA1LTQ0NzAiICAgPkouIFBoeXMuIEE6IE1hdGguIEdlbi4gKDE5NzUgLSAyMDA2KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMzAxLTAwMTUiICAgPkouIFBoeXMuIEE6IE1hdGguIE51Y2wuIEdlbi4gKDE5NzMgLSAxOTc0KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzUxLTgxMjEiICAgPkouIFBoeXMuIEE6IE1hdGguIFRoZW9yLiAoMjAwNyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTMtNDA3NSIgICA+Si4gUGh5cy4gQjogQXQuIE1vbC4gT3B0LiBQaHlzLiAoMTk4OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjItMzcwMCIgICA+Si4gUGh5cy4gQjogQXQuIE1vbC4gUGh5cy4gKDE5NjggLSAxOTg3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDIyLTM3MTkiICAgPkouIFBoeXMuIEM6IFNvbGlkIFN0YXRlIFBoeXMuICgxOTY4IC0gMTk4OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjM5OS02NTI4IiAgID5KLiBQaHlzLiBDb21tdW4uICgyMDE3IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMi0wNzJYIiAgID5KLiBQaHlzLiBDb21wbGV4LiAoMjAxOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjItMzcyNyIgICA+Si4gUGh5cy4gRDogQXBwbC4gUGh5cy4gKDE5NjggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDIyLTM3MzUiICAgPkouIFBoeXMuIEU6IFNjaS4gSW5zdHJ1bS4gKDE5NjggLSAxOTg5KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE1LTc2NTUiICAgPkouIFBoeXMuIEVuZXJneSAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMDUtNDYwOCIgICA+Si4gUGh5cy4gRjogTWV0LiBQaHlzLiAoMTk3MSAtIDE5ODgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTQtMzg5OSIgICA+Si4gUGh5cy4gRzogTnVjbC4gUGFydC4gUGh5cy4gKDE5ODkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMzA1LTQ2MTYiICAgPkouIFBoeXMuIEc6IE51Y2wuIFBoeXMuICgxOTc1IC0gMTk4OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjUxNS03NjM5IiAgID5KLiBQaHlzLiBNYXRlci4gKDIwMTggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE1LTc2NDciICAgPkouIFBoeXMuIFBob3RvbmljcyAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTMtODk4NCIgICA+Si4gUGh5cy46IENvbmRlbnMuIE1hdHRlciAoMTk4OSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDItNjU5NiIgICA+Si4gUGh5cy46IENvbmYuIFNlci4gKDIwMDQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTUyLTQ3NDYiICAgPkouIFJhZGlvbC4gUHJvdC4gKDE5ODggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTUwLTc2NzEiICAgPkouIFNjaS4gSW5zdHJ1bS4gKDE5MjMgLSAxOTY3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjc0LTQ5MjYiICAgPkouIFNlbWljb25kLiAoMjAwOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAyNjAtMjgxNCIgICA+Si4gU29jLiBSYWRpb2wuIFByb3QuICgxOTgxIC0gMTk4Nyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0Mi01NDY4IiAgID5KLiBTdGF0LiBNZWNoLiAoMjAwNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjgtNTI0OCIgICA+Si4gVHVyYnVsZW5jZSAoMjAwMCAtIDIwMDQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNDctNDA2NSIgICA+SnBuLiBKLiBBcHBsLiBQaHlzLiAoMTk2MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1NTUtNjYxMSIgICA+TGFzZXIgUGh5cy4gKDIwMTMgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjEyLTIwMlgiICAgPkxhc2VyIFBoeXMuIExldHQuICgyMDA0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMi0yMTUzIiAgID5NYWNoLiBMZWFybi46IFNjaS4gVGVjaG5vbC4gKDIwMTkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNzUyLTU3MjQiICAgPk1hdGVyLiBGdXR1cmVzICgyMDIyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMy00MzU2IiAgID5NYXRlci4gUXVhbnR1bSBUZWNobm9sLiAoMjAyMCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTMtMTU5MSIgICA+TWF0ZXIuIFJlcy4gRXhwcmVzcyAoMjAxNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjUtNTcyNiIgICA+TWF0aC4gVVNTUiBJenYuICgxOTY3IC0gMTk5Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyNS01NzM0IiAgID5NYXRoLiBVU1NSIFNiLiAoMTk2NyAtIDE5OTMpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTctMDIzMyIgICA+TWVhcy4gU2NpLiBUZWNobm9sLiAoMTk5MCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIxNTEtMjA0MyIgICA+TWVldC4gQWJzdHIuICgyMDAyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1MC02MTIwIiAgID5NZXRob2RzIEFwcGwuIEZsdW9yZXNjLiAoMjAxMyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjYtMTM5NCIgc2VsZWN0ZWQgID5NZXRyb2xvZ2lhICgxOTY1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2NS0wMzkzIiAgID5Nb2RlbGxpbmcgU2ltdWwuIE1hdGVyLiBTY2kuIEVuZy4gKDE5OTIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMzk5LTc1MzIiICAgPk11bHRpZnVuY3QuIE1hdGVyLiAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzItOTU5WCIgICA+TmFubyBFeHByZXNzICgyMDIwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjM5OS0xOTg0IiAgID5OYW5vIEZ1dHVyZXMgKDIwMTcgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTU3LTQ0ODQiICAgPk5hbm90ZWNobm9sb2d5ICgxOTkwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1NC04OThYIiAgID5OZXR3b3JrOiBDb21wdXQuIE5ldXJhbCBTeXN0LiAoMTk5MCAtIDIwMDQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzQtNDM4NiIgICA+TmV1cm9tb3JwaC4gQ29tcHV0LiBFbmcuICgyMDIxIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTM2Ny0yNjMwIiAgID5OZXcgSi4gUGh5cy4gKDE5OTggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTUxLTc3MTUiICAgPk5vbmxpbmVhcml0eSAoMTk4OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMzUtNzM2OCIgICA+Tm91dmVsbGUgUmV2dWUgZCdPcHRpcXVlICgxOTczIC0gMTk3Nik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyOS00NzgwIiAgID5Ob3V2ZWxsZSBSZXZ1ZSBkJ09wdGlxdWUgQXBwbGlxdcOpZSAoMTk3MCAtIDE5NzIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjktNTUxNSIgICA+TnVjbC4gRnVzaW9uICgxOTYwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTUzOC0zODczIiAgID5QQVNQICgxODg5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ3OC0zOTc1IiAgID5QaHlzLiBCaW9sLiAoMjAwNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzEtOTExMiIgICA+UGh5cy4gQnVsbC4gKDE5NTAgLSAxOTg4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDMxLTkxMjAiICAgPlBoeXMuIEVkdWMuICgxOTY2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzMS05MTU1IiAgID5QaHlzLiBNZWQuIEJpb2wuICgxOTU2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQwMi00ODk2IiAgID5QaHlzLiBTY3IuICgxOTcwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1OC03MDU4IiAgID5QaHlzLiBXb3JsZCAoMTk4OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwNjMtNzg2OSIgICA+UGh5cy4tVXNwLiAoMTk5MyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMDUtNDYyNCIgICA+UGh5c2ljcyBpbiBUZWNobm9sb2d5ICgxOTczIC0gMTk4OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2Ny0zMzM0IiAgID5QaHlzaW9sLiBNZWFzLiAoMTk5MyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzItMTAyOCIgICA+UGxhc21hIFBoeXMuICgxOTY3IC0gMTk4Myk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDc0MS0zMzM1IiAgID5QbGFzbWEgUGh5cy4gQ29udHJvbC4gRnVzaW9uICgxOTg0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjUxNi0xMDY3IiAgID5QbGFzbWEgUmVzLiBFeHByZXNzICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAwOS0wNjMwIiAgID5QbGFzbWEgU2NpLiBUZWNobm9sLiAoMTk5OSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NjMtMDI1MiIgICA+UGxhc21hIFNvdXJjZXMgU2NpLiBUZWNobm9sLiAoMTk5MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI1NzYtMTU3OSIgICA+UHJvYy4gLSBFbGVjdHJvY2hlbS4gU29jLiAoMTk2NyAtIDIwMDUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTktNTMwOSIgICA+UHJvYy4gUGh5cy4gU29jLiAoMTkyNiAtIDE5NDgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzNzAtMTMyOCIgICA+UHJvYy4gUGh5cy4gU29jLiAoMTk1OCAtIDE5NjcpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzNzAtMTI5OCIgICA+UHJvYy4gUGh5cy4gU29jLiBBICgxOTQ5IC0gMTk1Nyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDM3MC0xMzAxIiAgID5Qcm9jLiBQaHlzLiBTb2MuIEIgKDE5NDkgLSAxOTU3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDc4LTc4MTQiICAgPlByb2MuIFBoeXMuIFNvYy4gTG9uZG9uICgxODc0IC0gMTkyNSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjUxNi0xMDkxIiAgID5Qcm9nLiBCaW9tZWQuIEVuZy4gKDIwMTggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE2LTEwODMiICAgPlByb2cuIEVuZXJneSAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NjMtNjYyNSIgICA+UHVibGljIFVuZGVyc3RhbmQuIFNjaS4gKDE5OTIgLSAyMDAyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTYzLTk2NTkiICAgPlB1cmUgQXBwbC4gT3B0LiAoMTk5MiAtIDE5OTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjktNzY4OCIgICA+UXVhbnRpdGF0aXZlIEZpbmFuY2UgKDIwMDEgLSAyMDA0KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDYzLTc4MTgiICAgPlF1YW50dW0gRWxlY3Ryb24uICgxOTkzIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1NC04OTk4IiAgID5RdWFudHVtIE9wdC4gKDE5ODkgLSAxOTk0KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDU4LTk1NjUiICAgPlF1YW50dW0gU2NpLiBUZWNobm9sLiAoMjAxNSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNTUtNTExMSIgICA+UXVhbnR1bSBTZW1pY2xhc3MuIE9wdC4gKDE5OTUgLSAxOTk4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDM0LTQ4ODUiICAgPlJlcC4gUHJvZy4gUGh5cy4gKDE5MzQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjc0LTQ1MjciICAgPlJlcy4gQXN0cm9uLiBBc3Ryb3BoeXMuICgyMDA5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjUxNS01MTcyIiAgID5SZXNlYXJjaCBOb3RlcyBvZiB0aGUgQUFTICgyMDE3IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzNC02NjgzIiAgID5SZXZpZXcgb2YgUGh5c2ljcyBpbiBUZWNobm9sb2d5ICgxOTcwIC0gMTk3Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ2OC00ODAyIiAgID5SdXNzLiBBY2FkLiBTY2kuIFNiLiBNYXRoLiAoMTk5MyAtIDE5OTUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzYtMDIxWCIgICA+UnVzcy4gQ2hlbS4gUmV2LiAoMTk2MCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzYtMDI3OSIgICA+UnVzcy4gTWF0aC4gU3Vydi4gKDE5NjAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDY4LTQ4MTAiICAgPlJ1c3NpYW4gQWNhZC4gU2NpLiBJenYuIE1hdGguICgxOTkzIC0gMTk5NSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTA2NC01NjE2IiAgID5TYi4gTWF0aC4gKDE5OTUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDY4LTY5OTYiICAgPlNjaS4gVGVjaG5vbC4gQWR2LiBNYXRlci4gKDIwMDAgLSAyMDE1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMjY4LTEyNDIiICAgPlNlbWljb25kLiBTY2kuIFRlY2hub2wuICgxOTg2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2NC0xNzI2IiAgID5TbWFydCBNYXRlci4gU3RydWN0LiAoMTk5MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwNDktMTc0OCIgICA+U292LiBKLiBRdWFudHVtIEVsZWN0cm9uLiAoMTk3MSAtIDE5OTIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzgtNTY3MCIgICA+U292LiBQaHlzLiBVc3AuICgxOTU4IC0gMTk5Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1My0yMDQ4IiAgID5TdXBlcmNvbmQuIFNjaS4gVGVjaG5vbC4gKDE5ODggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDUxLTY3MlgiICAgPlN1cmYuIFRvcG9nci46IE1ldHJvbC4gUHJvcC4gKDIwMTMgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTM4LTM4ODEiICAgPlRoZSBBc3Ryb25vbWljYWwgSm91cm5hbCAoMTg0OSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDQtNjM3WCIgICA+VGhlIEFzdHJvcGh5c2ljYWwgSm91cm5hbCAoMTk5NiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1MzgtNDM1NyIgICA+VGhlIEFzdHJvcGh5c2ljYWwgSm91cm5hbCBMZXR0ZXJzICgxOTk1IC0gMjAwOSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA0MS04MjA1IiAgID5UaGUgQXN0cm9waHlzaWNhbCBKb3VybmFsIExldHRlcnMgKDIwMTAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDY3LTAwNDkiICAgPlRoZSBBc3Ryb3BoeXNpY2FsIEpvdXJuYWwgU3VwcGxlbWVudCBTZXJpZXMgKDE5OTYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMyLTMzMzgiICAgPlRoZSBQbGFuZXRhcnkgU2NpZW5jZSBKb3VybmFsICgyMDIwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjE1Ni03Mzk1IiAgID5UcmFucy4gQW0uIEVsZWN0cm9jaGVtLiBTb2MuICgxOTMwIC0gMTkzMCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTk0NS02ODU5IiAgID5UcmFucy4gRWxlY3Ryb2NoZW0uIFNvYy4gKDE5MzEgLSAxOTQ4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDc1LTQ4NzgiICAgPlRyYW5zLiBPcHQuIFNvYy4gKDE4OTkgLSAxOTMyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDUzLTE2MTMiICAgPlRyYW5zbC4gTWF0ZXIuIFJlcy4gKDIwMTQgLSAyMDE4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTU5LTcxNzQiICAgPldhdmVzIFJhbmRvbSBNZWRpYSAoMTk5MSAtIDIwMDQpPC9vcHRpb24+Cjwvc2VsZWN0Pgo8bGFiZWwgZm9yPSJDRl9WT0xVTUUiIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5Wb2x1bWUgbnVtYmVyOjwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJDRl9WT0xVTUUiIGlkPSJDRl9WT0xVTUUiIGNsYXNzPSJhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZCIgcGxhY2Vob2xkZXI9IlZvbHVtZSIgeC13ZWJraXQtc3BlZWNoPSIiPgogICAgICAgICAgICA8bGFiZWwgZm9yPSJDRl9JU1NVRSIgY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPklzc3VlIG51bWJlciAoaWYga25vd24pOjwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJDRl9JU1NVRSIgaWQ9IkNGX0lTU1VFIiBjbGFzcz0iYXJ0LWxvb2t1cF9fY29udGVudC1maW5kZXItZmllbGQiIHBsYWNlaG9sZGVyPSJJc3N1ZSIgeC13ZWJraXQtc3BlZWNoPSIiPgogICAgICAgICAgICA8bGFiZWwgZm9yPSJDRl9QQUdFIiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+QXJ0aWNsZSBvciBwYWdlIG51bWJlcjo8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iQ0ZfUEFHRSIgaWQ9IkNGX1BBR0UiIGNsYXNzPSJhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZCBhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZC0tbGFzdCIgcGxhY2Vob2xkZXI9IkFydGljbGUgb3IgcGFnZSIgeC13ZWJraXQtc3BlZWNoPSIiPgoKICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBhcnQtbG9va3VwX19zdWJtaXQiIHZhbHVlPSJMb29rdXAiIG5hbWU9InN1Ym1pdCI+CiAgICAgICAgPC9kaXY+CiAgICA8L2ZpZWxkc2V0Pgo8L2Zvcm0+PC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+PC9oZWFkZXI+CjwhLS0gSGVhZGVyIHRpbGUgZW5kcyAtLT4KPGRpdiBjbGFzcz0icGFnZS1ib2R5IiA+CiAgICAgICAgPGEgbmFtZT0iIiBpZD0ic2tpcC10by1jb250ZW50LWxpbmstdGFyZ2V0IiB0YWJpbmRleD0iLTEiPjwvYT4KICAgICAgICA8IS0tIFN0YXJ0IHR3byBjb2x1bW4gbGF5b3V0IC0tPgo8ZGl2IGNsYXNzPSJ3cmFwcGVyIGdyaWQtMi1jb2wgZGItc2hvd2dyaWQgdGItc2hvd2dyaWQgY2YiPgogICAgICAgICAgICA8bWFpbiByb2xlPSJtYWluIj4KICAgICAgICAgICAgICAgIDwhLS0gU2Vjb25kYXJ5IGhlYWRlciBzdGFydHMgLS0+CjxkaXYgY2xhc3M9InNlY29uZGFyeS1oZWFkZXIgY2YiIGlkPSJ3ZC1zZWNvbmRhcnktaGVhZGVyIj4KICAgIDwhLS0gQnJhbmRlZCBqb3VybmFsIGhlYWRlciBzdGFydHMgLS0+CjxkaXYgY2xhc3M9ImJyYW5kZWQiPgoKICAgIDxkaXYgY2xhc3M9InB1YmxpY2F0aW9uLW5hbWUiIGlkPSJ3ZC1wdWItbmFtZSI+Cgk8ZGl2IGNsYXNzPSJwdWJsaWNhdGlvbi10aXRsZSIgaXRlbXByb3A9Im5hbWUiIGl0ZW1pZD0icGVyaW9kaWNhbCI+CgkJCQk8YSBocmVmPSIvam91cm5hbC8wMDI2LTEzOTQiIGl0ZW1wcm9wPSJ1cmwiID5NZXRyb2xvZ2lhPC9hPgoJPC9kaXY+CgkJPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJwYXJ0bmVyLWxvZ29zIG0taGlkZSIgaWQ9IndkLXBhcnRuZXItbG9nb3MiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJ0bmVyLWxvZ28tYWxpZ25tZW50Ij4KICAgICAgICAgICAgICAgIDwhLS0gUGFydG5lciBsb2dvIHRpbGUgc3RhcnRzIC0tPgo8YnV0dG9uIGNsYXNzPSJvdmVybGF5LWxhdW5jaCBwYXJ0bmVyLWxvZ28iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgIDxpbWcgYm9yZGVyPSIwIiBzcmM9Imh0dHBzOi8vY21zLmlvcHNjaWVuY2Uub3JnLzVmNmE1OTdiLWEyNTAtMTFkYi05MWQxLTQzY2JjMDI0MTE0YS9iaXBtLmdpZj9ndWVzdD10cnVlIiBhbHQ9IkludGVybmF0aW9uYWwgQnVyZWF1IG9mIFdlaWdodHMgYW5kIE1lYXN1cmVzIChCSVBNKSwgZmluZCBvdXQgbW9yZSI+CjwvYnV0dG9uPgo8c3BhbiBjbGFzcz0ib3ZlcmxheS1zZXQiPgogICAgPGRpdiBjbGFzcz0idGludC1zY3JlZW4iPjwvZGl2PgogICAgPGRpdiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWw9IkludGVybmF0aW9uYWwgQnVyZWF1IG9mIFdlaWdodHMgYW5kIE1lYXN1cmVzIChCSVBNKSwgZmluZCBvdXQgbW9yZSIgYXJpYS1tb2RhbD0idHJ1ZSIgY2xhc3M9Im92ZXJsYXktcGFuZWwiPgogICAgICAgIDxidXR0b24gY2xhc3M9ImNsb3NlLWljb24gY2xvc2Utb3ZlcmxheSIgYXJpYS1sYWJlbD0iQ2xvc2UiPjxzcGFuIGNsYXNzPSJpY29uLWNsb3NlIj48L3NwYW4+PC9idXR0b24+CiAgICAgICAgPGRpdiBjbGFzcz0ib3ZlcmxheS1pbWciPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmJpcG0ub3JnLyI+CiAgICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgc3JjPSJodHRwczovL2Ntcy5pb3BzY2llbmNlLm9yZy81ZjZhNTk3Yi1hMjUwLTExZGItOTFkMS00M2NiYzAyNDExNGEvYmlwbS5naWY/Z3Vlc3Q9dHJ1ZSIgYWx0PSJJbnRlcm5hdGlvbmFsIEJ1cmVhdSBvZiBXZWlnaHRzIGFuZCBNZWFzdXJlcyAoQklQTSksIGZpbmQgb3V0IG1vcmUiPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ib3ZlcmxheS10ZXh0Ij4KICAgICAgICAgICAgPHA+VGhlIEludGVybmF0aW9uYWwgQnVyZWF1IG9mIFdlaWdodHMgYW5kIE1lYXN1cmVzIChCSVBNKSB3YXMgc2V0IHVwIGJ5IHRoZSBNZXRyZSBDb252ZW50aW9uIGFuZCBoYXMgaXRzIGhlYWRxdWFydGVycyBuZWFyIFBhcmlzLCBGcmFuY2UuIEl0IGlzIGZpbmFuY2VkIGpvaW50bHkgYnkgaXRzIE1lbWJlciBTdGF0ZXMgYW5kIG9wZXJhdGVzIHVuZGVyIHRoZSBleGNsdXNpdmUgc3VwZXJ2aXNpb24gb2YgdGhlIENJUE0uPC9wPiA8cD5JdHMgbWFuZGF0ZSBpcyB0byBwcm92aWRlIHRoZSBiYXNpcyBmb3IgYSBzaW5nbGUsIGNvaGVyZW50IHN5c3RlbSBvZiBtZWFzdXJlbWVudHMgdGhyb3VnaG91dCB0aGUgd29ybGQsIHRyYWNlYWJsZSB0byB0aGUgSW50ZXJuYXRpb25hbCBTeXN0ZW0gb2YgVW5pdHMgKFNJKS4gVGhpcyB0YXNrIHRha2VzIG1hbnkgZm9ybXMsIGZyb20gZGlyZWN0IGRpc3NlbWluYXRpb24gb2YgdW5pdHMgKGFzIGluIHRoZSBjYXNlIG9mIG1hc3MgYW5kIHRpbWUpIHRvIGNvb3JkaW5hdGlvbiB0aHJvdWdoIGludGVybmF0aW9uYWwgY29tcGFyaXNvbnMgb2YgbmF0aW9uYWwgbWVhc3VyZW1lbnQgc3RhbmRhcmRzIChhcyBpbiBlbGVjdHJpY2l0eSBhbmQgaW9uaXppbmcgcmFkaWF0aW9uKS48L3A+IDxwPlRoZSBCSVBNIGhhcyBhbiBpbnRlcm5hdGlvbmFsIHN0YWZmIG9mIG92ZXIgNzAgYW5kIGl0cyBzdGF0dXMgdmlzLSZhZ3JhdmU7LXZpcyB0aGUgRnJlbmNoIEdvdmVybm1lbnQgaXMgc2ltaWxhciB0byB0aGF0IG9mIG90aGVyIGludGVyZ292ZXJubWVudGFsIG9yZ2FuaXphdGlvbnMgYmFzZWQgaW4gUGFyaXMuPC9wPjwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJ0YS1jIG10LTEgbWItMiI+PGEgaHJlZj0iaHR0cDovL3d3dy5iaXBtLm9yZy8iPmh0dHA6Ly93d3cuYmlwbS5vcmcvPC9hPjwvcD4KICAgIDwvZGl2Pgo8L3NwYW4+CjwhLS0gUGFydG5lciBsb2dvIHRpbGUgZW5kcyAtLT4KCjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwhLS0gQnJhbmRlZCBqb3VybmFsIGhlYWRlciBlbmRzIC0tPgo8L2Rpdj4gPCEtLSBlbmQgc2Vjb25kYXJ5LWhlYWRlciAtLT4KPCEtLSBTZWNvbmRhcnkgaGVhZGVyIGVuZHMgLS0+PGRpdiBjbGFzcz0iZGIxIHRiMSI+CiAgICAgICAgICAgICAgICAgICAgPCEtLSBTdGFydCBpc3N1ZSBwYWdlIHRpbGUgLS0+CjxkaXYgaXRlbXByb3A9Imhhc1BhcnQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHVibGljYXRpb25Jc3N1ZSI+CiAgICA8IS0tIFN0YXJ0IElzc3VlIHRpdGxlcyAtLT4KPGgxPlRhYmxlIG9mIGNvbnRlbnRzPC9oMT4KPGRpdiBjbGFzcz0iYm94b3V0IiBpZD0id2Qtam5sLWlzc3VlLXRpdGxlIj4KICAgIDxoMj48YSBocmVmPSIvdm9sdW1lLzAwMjYtMTM5NC8zMCI+Vm9sdW1lIDMwPC9hPjwvaDI+CiAgICA8cCBjbGFzcz0icmVwbGljYS1oMyBtYi0wNSBtdC0wIiBpdGVtcHJvcD0iaXNzdWVOdW1iZXIiPk51bWJlciA0LCBKYW51YXJ5IDE5OTM8L3A+CiAgICA8cCBjbGFzcz0ibWItMDUiPgogICAgICAgIDxhIGhyZWY9Ii9pc3N1ZS8wMDI2LTEzOTQvMzAvMyIgY2xhc3M9Im1yLTEiPjxzcGFuIGNsYXNzPSJpY29uLWFycm93LWxlZnQgcHItMCI+PC9zcGFuPlByZXZpb3VzIGlzc3VlPC9hPjxhIGhyZWY9Ii9pc3N1ZS8wMDI2LTEzOTQvMzAvNSIgY2xhc3M9Im1sLTEiPk5leHQgaXNzdWU8c3BhbiBjbGFzcz0iaWNvbi1hcnJvdy1yaWdodCI+PC9zcGFuPjwvYT48L3A+CiAgICA8aDQgY2xhc3M9Im1iLTA1Ij5QUk9DRUVESU5HUyBPRiBUSEUgTkVXIERFVkVMT1BNRU5UUyBBTkQgQVBQTElDQVRJT05TIElOIE9QVElDQUwgUkFESU9NRVRSWSBJViAoTkVXUkFEICc5MikgQ09ORkVSRU5DRSA14oCTNyBPY3RvYmVyIDE5OTIsIEJhbHRpbW9yZSwgTWFyeWxhbmQsIFVTQTwvaDQ+CiAgICA8L2Rpdj4KCjwhLS0gRW5kIElzc3VlIHRpdGxlcyAtLT4KPCEtLSBTdGFydCBJc3N1ZSBkaXNwbGF5IGxpbmtzIC0tPgo8cCBpZD0iam5sLWlzc3VlLWRpc3AtbGlua3MiIGNsYXNzPSJjZiI+CiAgICA8YSBocmVmPSIiIGRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWxsIGFic3RyYWN0cyIgY2xhc3M9InJldmVhbC1hbGwtdHJpZ2dlciBtci0yIHNtYWxsIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFsbCBhYnN0cmFjdHMiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iaW4gdGhpcyBpc3N1ZSIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49ImluIHRoaXMgaXNzdWUiPk9wZW4gYWxsIGFic3RyYWN0czxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7aW4gdGhpcyBpc3N1ZTwvc3Bhbj48L2E+CiAgICA8L3A+CjwhLS0gRW5kIElzc3VlIGRpc3BsYXkgbGlua3MgLS0+PCEtLSBTdGFydCBJc3N1ZSBUb2MgRWxlbWVudCBMaXN0aW5nIC0tPgo8Zm9ybSBpZD0iYXJ0aWNsZXMiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIiIGNsYXNzPSJhcnRpY2xlLWxpc3QtZm9ybSI+Cgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJpc3NuIiB2YWx1ZT0iMDAyNi0xMzk0IiAvPgoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idm9sdW1lIiB2YWx1ZT0iMzAiIC8+Cgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJpc3N1ZSIgdmFsdWU9IjQiIC8+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdCIgaWQ9IndkLWpubC1pc3N1ZS1hcnQtbGlzdCI+CgkJPGgzIGNsYXNzPSJiZHQtNiBiZC1ncmV5LXRpbnQgbWItMSI+Rk9SRVdPUkQ8L2gzPgogICAgICAgIDxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjIwNTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+VGhlIGZvbGxvd2luZyBhcnRpY2xlIGlzIDwvc3Bhbj48c3BhbiBjbGFzcz0icmVkLXRleHQgd2Qtam5sLWFydC1jb2xsZWN0aW9uLWxhYmVsIj5GcmVlIGFydGljbGU8L3NwYW4+CiAgICAgICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC9FMDEiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlOZXcgRGV2ZWxvcG1lbnRzIGFuZCBBcHBsaWNhdGlvbnMgaW4gT3B0aWNhbCBSYWRpb21ldHJ5IElWPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBCIEd1ZW50aGVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9Ik5ldyBEZXZlbG9wbWVudHMgYW5kIEFwcGxpY2F0aW9ucyBpbiBPcHRpY2FsIFJhZGlvbWV0cnkgSVYiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJOZXcgRGV2ZWxvcG1lbnRzIGFuZCBBcHBsaWNhdGlvbnMgaW4gT3B0aWNhbCBSYWRpb21ldHJ5IElWIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80L0UwMS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtOZXcgRGV2ZWxvcG1lbnRzIGFuZCBBcHBsaWNhdGlvbnMgaW4gT3B0aWNhbCBSYWRpb21ldHJ5IElWPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgUHJvY2VlZGluZ3MgcHVibGlzaGVkIGluIHRoaXMgc3BlY2lhbCBpc3N1ZSBvZiAgPGk+TWV0cm9sb2dpYTwvaT4gYXJlIGZyb20gTmV3IERldmVsb3BtZW50cyBhbmQgQXBwbGljYXRpb25zIGluIE9wdGljYWwgUmFkaW9tZXRyeSBJViwgYWxzbyBrbm93biBhcyB0aGUgTkVXUkFEICc5MiBDb25mZXJlbmNlLiBUaGUgY29uZmVyZW5jZSB3YXMgaGVsZCBmcm9tIDXigJM3IE9jdG9iZXIgMTk5MiBpbiBCYWx0aW1vcmUsIE1hcnlsYW5kLCBVU0EsIGFuZCB3YXMgb3JnYW5pemVkIHRocm91Z2ggdGhlIE5hdGlvbmFsIEFlcm9uYXV0aWNzIGFuZCBTcGFjZSBBZG1pbmlzdHJhdGlvbiAoTkFTQSkgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyIGluIEdyZWVuYmVsdCwgTWFyeWxhbmQuIFRoZSAxOTkyIENvbmZlcmVuY2Ugd2FzIHRoZSBmb3VydGggaW4gYSBzZXJpZXMgb2Ygb2NjYXNpb25hbCBpbnRlcm5hdGlvbmFsIG1lZXRpbmdzIGhlbGQgdG8gaW50ZWdyYXRlIHRoZSBhY3Rpdml0aWVzIG9mIHRoZSBzcGFjZSByYWRpb21ldHJ5IGNvbW11bml0eSB3aXRoIHRob3NlIG9mIHRoZSBsYWJvcmF0b3J5IG1ldHJvbG9neSBjb21tdW5pdHkuPC9wPjxwPlRoZSBsb2NhdGlvbiBvZiBNYXJ5bGFuZCB3YXMgY2hvc2VuIHRvIGJyaW5nIHRoZSBtZWV0aW5nIGJhY2sgdG8gdGhlIGhlbWlzcGhlcmUgb2YgdGhlIEFtZXJpY2FzIHdoZXJlIHRoZSBmaXJzdCBvZiB0aGUgc2VyaWVzIHdhcyBoZWxkLiBOQVNBL0dvZGRhcmQgd2FzIGNob3NlbiBhcyB0aGUgc3BvbnNvcmluZyBvcmdhbml6YXRpb24gZm9yIHRoaXMgbWVldGluZyBiZWNhdXNlIG9mIHRoZSBudW1iZXIgYW5kIGRpdmVyc2l0eSBvZiBzcGFjZSBtZWFzdXJlbWVudCBwcm9ncmFtbWVzIHdoaWNoIGFyZSBtYW5hZ2VkIHRoZXJlLCBhbmQgYmVjYXVzZSBvZiBpdHMgcHJveGltaXR5IHRvIHRoZSBVbml0ZWQgU3RhdGVzIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3kuPC9wPjxwPlRoZSBnZW5lcmFsIG9yZ2FuaXphdGlvbiBvZiB0aGUgbWVldGluZyBpbmNsdWRlZCBzZXNzaW9ucyBvbiB0aGUgRWFydGggT2JzZXJ2aW5nIFN5c3RlbSAod2hpY2ggSSBjaGFpcmVkKSwgdGhlIFNodXR0bGUgQXRsYXMgSSBNaXNzaW9uIGFuZCBVViBDYWxpYnJhdGlvbnMgKGNoYWlyZWQgYnkgRSBIaWxzZW5yYXRoLCBOQVNBL0dvZGRhcmQpLCBDcnlvZ2VuaWMgUmFkaW9tZXRyeSAoTiBGb3gsIE5QTCksIERldGVjdG9yIFJhZGlvbWV0cnkgKFQgUXVpbm4sIEJJUE0pLCBTcGFjZS1iYXNlZCBBcHBsaWNhdGlvbnMgKEogTWV0emRvcmYsIFBUQikgYW5kIEdyb3VuZC1iYXNlZCBBcHBsaWNhdGlvbnMgKEMgQ3JvbWVyLCBOSVNUKS4gVGhpcnR5LWVpZ2h0IHBhcGVycyB3ZXJlIHByZXNlbnRlZCBvcmFsbHksIGFuZCBwb3N0ZXIgc2Vzc2lvbnMgd2VyZSBhbHNvIHByb3ZpZGVkLiBNb3N0IG9mIHRoZSBwcmVzZW50YXRpb25zIGFyZSByZXByZXNlbnRlZCBpbiB0aGVzZSBQcm9jZWVkaW5ncy4gVGhlIGZpZnRoIG1lZXRpbmcgaW4gdGhpcyBvY2Nhc2lvbmFsIHNlcmllcyBpcyBzY2hlZHVsZWQgZm9yIDE54oCTMjEgU2VwdGVtYmVyIDE5OTQgaW4gQmVybGluLiBUaGUgQ29uZmVyZW5jZSBpbnN0aXR1dGlvbmFsIGhvc3QgaXMgdGhlIFBUQiwgYW5kIHRoZSBjb252ZW5lciBpcyBEciBKb2FjaGltIEZpc2NoZXIsIFNlY3JldGFyeS48L3A+PHA+VGhlIHN1Y2Nlc3Mgb2YgdGhlIG1lZXRpbmcgZGVyaXZlZCBwcmluY2lwYWxseSBmcm9tIHRoZSBpbmRpdmlkdWFsIGNvbnRyaWJ1dGlvbnMgb2YgdGhlIHByZXNlbnRlcnMgYW5kIHRoZSBpbnRlcmVzdCBhbmQgYXR0ZW50aW9uIG9mIGFsbCB0aGUgcGFydGljaXBhbnRzLiBUaGUgc3VjY2VzcyBvZiB0aGVzZSBQcm9jZWVkaW5ncyBpcyBhdHRyaWJ1dGFibGUgdG8gdGhlIGluZGl2aWR1YWwgYXV0aG9ycywgdGhlIGd1ZXN0IGVkaXRvcnMgYW5kIHRoZSByZWZlcmVlcyBvZiB0aGUgcGFwZXJzLiBFYWNoIHBhcGVyIHdhcyBzdWJqZWN0ZWQgdG8gYSBjcml0aWNhbCByZXZpZXcgd2hpY2ggd2FzIG9yZ2FuaXplZCBieSB0aGUgY2hhaXJtYW4gb2YgdGhlIHNlc3Npb24gaW4gd2hpY2ggdGhlIHBhcGVyIHdhcyBwcmVzZW50ZWQuIFRoZSB3b3JrIG9mIHRoZSBndWVzdCBlZGl0b3JzIGFuZCByZWZlcmVlcyBpcyBncmF0ZWZ1bGx5IGFja25vd2xlZGdlZC48L3A+PHA+VGhlIGRyYXdpbmcgdG9nZXRoZXIgb2YgdGhlIHBhcGVycyBpbiAgPGk+TWV0cm9sb2dpYTwvaT4gZm9ybWF0IHdhcyBjYXJyaWVkIG91dCBtb3N0IGNhcGFibHkgYnkgRHIgRGF2aWQgQmxhY2tidXJuIGFuZCBoaXMgc3RhZmYuIFdpdGhvdXQgaGlzIGhlbHAgYW5kIGVuY291cmFnZW1lbnQgdGhlIHJldmlldyBwcm9jZXNzIG1heSBuZXZlciBoYXZlIGNvbnZlcmdlZCB0byBwcm9kdWNlIHRoaXMgcHVibGljYXRpb24uPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80L0UwMSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvRTAxPC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8aDMgY2xhc3M9ImJkdC02IGJkLWdyZXktdGludCBtYi0xIj5QQVBFUlM8L2gzPgogICAgICAgIDxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjIwNzwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUFuIEFuZWNkb3RhbCBSZXZpZXcgb2YgTkFTQSBFYXJ0aCBPYnNlcnZpbmcgU2F0ZWxsaXRlIFJlbW90ZSBTZW5zb3JzIGFuZCBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBNZXRob2RzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIE5pdGhpYW5hbmRhbTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEIgVyBHdWVudGhlcjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEwgSiBBbGxpc29uPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkFuIEFuZWNkb3RhbCBSZXZpZXcgb2YgTkFTQSBFYXJ0aCBPYnNlcnZpbmcgU2F0ZWxsaXRlIFJlbW90ZSBTZW5zb3JzIGFuZCBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBNZXRob2RzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQW4gQW5lY2RvdGFsIFJldmlldyBvZiBOQVNBIEVhcnRoIE9ic2VydmluZyBTYXRlbGxpdGUgUmVtb3RlIFNlbnNvcnMgYW5kIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIE1ldGhvZHMiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDAxL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0FuIEFuZWNkb3RhbCBSZXZpZXcgb2YgTkFTQSBFYXJ0aCBPYnNlcnZpbmcgU2F0ZWxsaXRlIFJlbW90ZSBTZW5zb3JzIGFuZCBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBNZXRob2RzPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDAxL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QW4gQW5lY2RvdGFsIFJldmlldyBvZiBOQVNBIEVhcnRoIE9ic2VydmluZyBTYXRlbGxpdGUgUmVtb3RlIFNlbnNvcnMgYW5kIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIE1ldGhvZHM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPkFuIGFuZWNkb3RhbCBoaXN0b3J5IG9mIHRoZSBldm9sdXRpb24gb2Ygc2F0ZWxsaXRlIHJlbW90ZSBzZW5zb3JzIGZvciBtYWtpbmcgRWFydGggb2JzZXJ2YXRpb25zIGluIHRoZSBpbmZyYXJlZCwgdmlzaWJsZSBhbmQgdWx0cmF2aW9sZXQgc3BlY3RyYWwgcmVnaW9ucyBkdXJpbmcgdGhlIHBhc3QgdGhyZWUgZGVjYWRlcyBhdCB0aGUgTmF0aW9uYWwgQWVyb25hdXRpY3MgYW5kIFNwYWNlIEFkbWluaXN0cmF0aW9uIChOQVNBKSBpcyBwcmVzZW50ZWQgdG9nZXRoZXIgd2l0aCBhbiBpbnRlcmNvbXBhcmlzb24gb2YgdGhlIGVhcmxpZXIgc2Nhbm5pbmcgcmVtb3RlIHNlbnNvcnMgYW5kIHRoZSBNb2RlcmF0ZSBSZXNvbHV0aW9uIEltYWdpbmcgU3BlY3Ryb3JhZGlvbWV0ZXIgKE1PRElTKSBvZiB0aGUgRWFydGggT2JzZXJ2aW5nIFN5c3RlbSAoRU9TKSBwcm9qZWN0LiBEZXZlbG9wbWVudHMgaW4gdGhlIHByZS1sYXVuY2ggYW5kIGluLWZsaWdodCByYWRpb21ldHJpYyBjYWxpYnJhdGlvbiBzeXN0ZW1zIGFuZCB0ZWNobmlxdWVzIGZvciB0aGVzZSBzYXRlbGxpdGUgcmVtb3RlIHNjYW5uZXJzLCBzb3VuZGVycyBhbmQgdGVsZXZpc2lvbiBpbWFnZXJzIGFyZSBoaWdobGlnaHRlZC48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDAxIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDE8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjIxMzwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUNhbGlicmF0aW9uIFBsYW5zIGZvciB0aGUgTXVsdGktYW5nbGUgSW1hZ2luZyBTcGVjdHJvUmFkaW9tZXRlciAoTUlTUik8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEMgSiBCcnVlZ2dlPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gViBHIER1dmFsPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTiBMIENocmllbjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEQgSiBEaW5lcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDYWxpYnJhdGlvbiBQbGFucyBmb3IgdGhlIE11bHRpLWFuZ2xlIEltYWdpbmcgU3BlY3Ryb1JhZGlvbWV0ZXIgKE1JU1IpIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQ2FsaWJyYXRpb24gUGxhbnMgZm9yIHRoZSBNdWx0aS1hbmdsZSBJbWFnaW5nIFNwZWN0cm9SYWRpb21ldGVyIChNSVNSKSIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDIvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q2FsaWJyYXRpb24gUGxhbnMgZm9yIHRoZSBNdWx0aS1hbmdsZSBJbWFnaW5nIFNwZWN0cm9SYWRpb21ldGVyIChNSVNSKTwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NhbGlicmF0aW9uIFBsYW5zIGZvciB0aGUgTXVsdGktYW5nbGUgSW1hZ2luZyBTcGVjdHJvUmFkaW9tZXRlciAoTUlTUik8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSBFT1MgTXVsdGktYW5nbGUgSW1hZ2luZyBTcGVjdHJvUmFkaW9tZXRlciAoTUlTUikgd2lsbCBzdHVkeSB0aGUgZWNvbG9neSBhbmQgY2xpbWF0ZSBvZiB0aGUgRWFydGggdGhyb3VnaCBhY3F1aXNpdGlvbiBvZiBnbG9iYWwgbXVsdGktYW5nbGUgaW1hZ2VyeS4gVGhlIE1JU1IgZW1wbG95cyBuaW5lIGRpc2NyZXRlIGNhbWVyYXMsIGVhY2ggYSBwdXNoLWJyb29tIGltYWdlci4gT2YgdGhlc2UsIGZvdXIgcG9pbnQgZm9yd2FyZCwgZm91ciBwb2ludCBhZnQgYW5kIG9uZSB2aWV3cyB0aGUgbmFkaXIuIEFic29sdXRlIHJhZGlvbWV0cmljIGNhbGlicmF0aW9uIHdpbGwgYmUgb2J0YWluZWQgcHJlLWZsaWdodCB1c2luZyBoaWdoIHF1YW50dW0gZWZmaWNpZW5jeSAoSFFFKSBkZXRlY3RvcnMgYW5kIGFuIGludGVncmF0aW5nIHNwaGVyZSBzb3VyY2UuIEFmdGVyIGxhdW5jaCwgaW5zdHJ1bWVudCBjYWxpYnJhdGlvbiB3aWxsIGJlIHByb3ZpZGVkIHVzaW5nIEhRRSBkZXRlY3RvcnMgaW4gY29uanVuY3Rpb24gd2l0aCBkZXBsb3lhYmxlIGRpZmZ1c2UgY2FsaWJyYXRpb24gcGFuZWxzLiBUaGUgcGFuZWxzIHdpbGwgYmUgZGVwbG95ZWQgYXQgdGltZSBpbnRlcnZhbHMgb2Ygb25lIG1vbnRoIGFuZCB1c2VkIHRvIGRpcmVjdCBzdW5saWdodCBpbnRvIHRoZSBjYW1lcmFzLCBmaWxsaW5nIHRoZWlyIGZpZWxkcy1vZi12aWV3IGFuZCBwcm92aWRpbmcgdGhyb3VnaC10aGUtb3B0aWNzIGNhbGlicmF0aW9uLiBBZGRpdGlvbmFsIHRlY2huaXF1ZXMgd2lsbCBiZSB1dGlsaXplZCB0byByZWR1Y2Ugc3lzdGVtYXRpYyBlcnJvcnMsIGFuZCBwcm92aWRlIGNvbnRpbnVpdHkgYXMgdGhlIG1ldGhvZG9sb2d5IGNoYW5nZXMgd2l0aCB0aW1lLiBGb3IgZXhhbXBsZSwgcmFkaWF0aW9uLXJlc2lzdGFudCBwaG90b2Rpb2RlcyB3aWxsIGFsc28gYmUgdXNlZCB0byBtb25pdG9yIHBhbmVsIHJhZGlhbnQgZXhpdGFuY2UuIFRoZXNlIGRhdGEgd2lsbCBiZSBhY3F1aXJlZCB0aHJvdWdob3V0IHRoZSBmaXZlLXllYXIgbWlzc2lvbiwgdG8gbWFpbnRhaW4gY2FsaWJyYXRpb24gaW4gdGhlIGxhdHRlciB5ZWFycyB3aGVuIGl0IGlzIGV4cGVjdGVkIHRoYXQgdGhlIEhRRSBkaW9kZXMgd2lsbCBoYXZlIGRlZ3JhZGVkLiBEdXJpbmcgdGhlIG1pc3Npb24sIGl0IGlzIHBsYW5uZWQgdGhhdCB0aGUgTUlTUiB3aWxsIGNvbmR1Y3Qgc2VtaS1hbm51YWwgZ3JvdW5kIGNhbGlicmF0aW9uIGNhbXBhaWducywgdXRpbGl6aW5nIGZpZWxkIG1lYXN1cmVtZW50cyBhbmQgaGlnaGVyIHJlc29sdXRpb24gc2Vuc29ycyAoYWJvYXJkIGFpcmNyYWZ0IG9yIGluLW9yYml0IHBsYXRmb3JtcykgdG8gcHJvdmlkZSBhIGNoZWNrIG9mIHRoZSBvbi1ib2FyZCBoYXJkd2FyZS4gVGhlc2UgZ3JvdW5kIGNhbGlicmF0aW9uIGNhbXBhaWducyBhcmUgbGltaXRlZCBpbiBudW1iZXIsIGJ1dCBhcmUgYmVsaWV2ZWQgdG8gYmUgdGhlIGtleSB0byB0aGUgbG9uZy10ZXJtIG1haW50ZW5hbmNlIG9mIE1JU1IgcmFkaW9tZXRyaWMgY2FsaWJyYXRpb24uPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMiI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDAyPC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4yMjM8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDMiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlDbG91ZHMgYW5kIHRoZSBFYXJ0aCdzIFJhZGlhbnQgRW5lcmd5IFN5c3RlbSAoQ0VSRVMpOiBMb25nLXdhdmUgQ2FsaWJyYXRpb24gUGxhbiBhbmQgUmFkaW9tZXRyaWMgVGVzdCBNb2RlbCAoUlRNKSBDYWxpYnJhdGlvbiBSZXN1bHRzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBQIEogSmFyZWNrZTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE0gQSBGb2xrbWFuPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gVCBSIEhlZG1hbjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE0gRSBGcmluazwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDbG91ZHMgYW5kIHRoZSBFYXJ0aCdzIFJhZGlhbnQgRW5lcmd5IFN5c3RlbSAoQ0VSRVMpOiBMb25nLXdhdmUgQ2FsaWJyYXRpb24gUGxhbiBhbmQgUmFkaW9tZXRyaWMgVGVzdCBNb2RlbCAoUlRNKSBDYWxpYnJhdGlvbiBSZXN1bHRzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQ2xvdWRzIGFuZCB0aGUgRWFydGgncyBSYWRpYW50IEVuZXJneSBTeXN0ZW0gKENFUkVTKTogTG9uZy13YXZlIENhbGlicmF0aW9uIFBsYW4gYW5kIFJhZGlvbWV0cmljIFRlc3QgTW9kZWwgKFJUTSkgQ2FsaWJyYXRpb24gUmVzdWx0cyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDMvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q2xvdWRzIGFuZCB0aGUgRWFydGgncyBSYWRpYW50IEVuZXJneSBTeXN0ZW0gKENFUkVTKTogTG9uZy13YXZlIENhbGlicmF0aW9uIFBsYW4gYW5kIFJhZGlvbWV0cmljIFRlc3QgTW9kZWwgKFJUTSkgQ2FsaWJyYXRpb24gUmVzdWx0czwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMy9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0Nsb3VkcyBhbmQgdGhlIEVhcnRoJ3MgUmFkaWFudCBFbmVyZ3kgU3lzdGVtIChDRVJFUyk6IExvbmctd2F2ZSBDYWxpYnJhdGlvbiBQbGFuIGFuZCBSYWRpb21ldHJpYyBUZXN0IE1vZGVsIChSVE0pIENhbGlicmF0aW9uIFJlc3VsdHM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSBDRVJFUyBpbnN0cnVtZW50IGhhcyB0aHJlZSByYWRpb21ldGVycyB3aGljaCBvcGVyYXRlIGluIHRoZSBzaG9ydC13YXZlICgwLDMgzrxtIHRvIDUgzrxtKSwgdGhlIGxvbmctd2F2ZSAoOCDOvG0gdG8gMTIgzrxtKSBhbmQgdG90YWwgYnJvYWRiYW5kICgwLDMgzrxtIHRvICZndDsyMDAgzrxtKSBzcGVjdHJhbCByZWdpb25zLiBUaGUgbG9uZy13YXZlIGNhbGlicmF0aW9uIHBsYW4gZm9yIENFUkVTIHByb3ZpZGVzIGZvciBhYnNvbHV0ZSByYWRpb21ldHJpYyBjYWxpYnJhdGlvbiBvZiB0aGUgdHdvIENFUkVTIHNlbnNvcnMgb3BlcmF0aW5nIGluIHRoZSBsb25nLXdhdmUgcG9ydGlvbiBvZiB0aGUgc3BlY3RydW0uIEdyb3VuZCBjYWxpYnJhdGlvbiBpcyBjYXJyaWVkIG91dCBpbiB0aGUgVFJXIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIEZhY2lsaXR5IChSQ0YpLCBhIGNyeW9nZW5pYyB2YWN1dW0gY2hhbWJlciB3aXRoIHRoZSBjYXBhYmlsaXR5IHRvIHNpbXVsYXRlIHJhZGlvbWV0cmljYWxseSBib3RoIGNvbGQgc3BhY2UgYW5kIEVhcnRoIHZpZXdpbmcgY29uZGl0aW9ucy4gQWJzb2x1dGUgY2FsaWJyYXRpb24gaXMgbWFkZSB1c2luZyBhIHRlbXBlcmF0dXJlLWJhc2VkIHJhZGlvbWV0cmljIHNjYWxlIGNyZWF0ZWQgYnkgYSBibGFjay1ib2R5IHJhZGlhbmNlIHN0YW5kYXJkIGNvbnRyb2xsZWQgYXQgdGVtcGVyYXR1cmVzIGZyb20gMjAwIEsgdG8gMzIwIEsuIEluIE1heSAxOTkyLCB0aGUgQ0VSRVMgcmFkaW9tZXRyaWMgdGVzdCBtb2RlbCAoUlRNKSwgYSBkZXZlbG9wbWVudGFsIGJ1dCBmdW5jdGlvbmFsbHkgZmxpZ2h0LWxpa2UgaW5zdHJ1bWVudCwgd2FzIGNhbGlicmF0ZWQgYXQgVFJXIGluIHRoZSBSQ0YuIFRoaXMgd2FzIHRoZSBmaXJzdCBlbmQtdG8tZW5kIGxvbmctd2F2ZSBjYWxpYnJhdGlvbiBvZiBhIENFUkVTIHNlbnNvciBhbmQgcHJvdmlkZWQgYSB0ZXN0IGFuZCBpbml0aWFsIHZhbGlkYXRpb24gb2YgdGhlIGxvbmctd2F2ZSBjYWxpYnJhdGlvbiBwbGFuIGFuZCBwcm9jZWR1cmVzLiBUaGUgZ2Fpbiwgb2Zmc2V0LCBvdXQtb2YtZmllbGQgcmVzcG9uc2UgYW5kIHNwZWN0cmFsIHJlc3BvbnNlIHdlcmUgZGV0ZXJtaW5lZCBmb3IgZWFjaCBzZW5zb3IuIFRoZSBlbmQtdG8tZW5kIGxvbmctd2F2ZSBjYWxpYnJhdGlvbiBwbGFuIGlzIGRlc2NyaWJlZCBhbmQgdGhlIFJUTSBjYWxpYnJhdGlvbiBhbmQgdmFsaWRhdGlvbiByZXN1bHRzIGFyZSBwcmVzZW50ZWQuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwMyI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDAzPC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4yMzE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDQiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiB0aGUgRU9TIEFTVEVSIEluc3RydW1lbnQ8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEYgU2FrdW1hPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQSBPbm88L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iUmFkaW9tZXRyaWMgQ2FsaWJyYXRpb24gb2YgdGhlIEVPUyBBU1RFUiBJbnN0cnVtZW50IiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iUmFkaW9tZXRyaWMgQ2FsaWJyYXRpb24gb2YgdGhlIEVPUyBBU1RFUiBJbnN0cnVtZW50IglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNC9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiB0aGUgRU9TIEFTVEVSIEluc3RydW1lbnQ8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDQvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiB0aGUgRU9TIEFTVEVSIEluc3RydW1lbnQ8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlByZS1mbGlnaHQgYW5kIGluLWZsaWdodCByYWRpb21ldHJpYyBjYWxpYnJhdGlvbiBwbGFucyBhcmUgZGVzY3JpYmVkIGZvciBhIG11bHRpc3BlY3RyYWwgb3B0aWNhbCBpbWFnZXIgb2YgaGlnaCBzcGF0aWFsIHJlc29sdXRpb24gZm9yIHJlbW90ZSBzZW5zaW5nIG9mIGxhbmQgc3VyZmFjZXMgYW5kIGNsb3VkcyBmcm9tIG9yYml0LCB3aGljaCB3aWxsIGJlIGxhdW5jaGVkIGluIDE5OTggb24gTkFTQSdzIEVPUy1BTTEgc3BhY2VjcmFmdC4gVGhlIGluc3RydW1lbnQgbmFtZWQgQVNURVIgY29uc2lzdHMgb2YgdGhyZWUgcmFkaW9tZXRlcnMgZm9yIHRocmVlIHNlcGFyYXRlIHNwZWN0cmFsIHJlZ2lvbnMsIHRoZSB2aXNpYmxlIGFuZCBuZWFyLWluZnJhcmVkIHJhZGlvbWV0ZXIgKFZOSVIpLCB0aGUgc2hvcnR3YXZlIGluZnJhcmVkIHJhZGlvbWV0ZXIgKFNXSVIpLCBhbmQgdGhlIHRoZXJtYWwgaW5mcmFyZWQgcmFkaW9tZXRlciAoVElSKS4gQWJzb2x1dGUgcmFkaW9tZXRyaWMgYWNjdXJhY3kgdG8gYmV0dGVyIHRoYW4gNCUgaXMgcmVxdWlyZWQgZm9yIHRoZSBWTklSIGFuZCBTV0lSIHJhZGlhbmNlIG1lYXN1cmVtZW50cywgYW5kIGZyb20gMSBLIHRvIDMgSywgZGVwZW5kaW5nIG9uIHRoZSB0ZW1wZXJhdHVyZSByZWdpb24sIGZyb20gMjAwIEsgdG8gMzcwIEsgZm9yIHRoZSBUSVIgdGVtcGVyYXR1cmUgbWVhc3VyZW1lbnRzLiBUaGUgYmFzaWMgYXBwcm9hY2ggdG8gaW4tZmxpZ2h0IGNhbGlicmF0aW9uIGlzIHRvIGludHJvZHVjZSBhIHJlZmVyZW5jZSBiZWFtIGF0IHRoZSBmcm9udCBlbmQgb2YgdGhlIHJhZGlvbWV0ZXIgdG8gY2FsaWJyYXRlIHRoZSB3aG9sZSBzeXN0ZW0gaW4gb3JiaXQuIFRodXMgdGhlIEFTVEVSIGluc3RydW1lbnQgaXMgaW5zdGFsbGVkIHdpdGggaW50ZXJuYWwgb24tYm9hcmQgY2FsaWJyYXRpb24gdW5pdHMgd2hpY2ggaW5jbHVkZSwgYXMgcmVmZXJlbmNlIHNvdXJjZXMsIGluY2FuZGVzY2VudCBsYW1wcyBmb3IgdGhlIFZOSVIgYW5kIFNXSVIgYW5kIGEgYmxhY2stYm9keSByYWRpYXRvciBmb3IgdGhlIFRJUi4gQ2FsaWJyYXRpb24gcmVsaWFiaWxpdHkgb2YgdGhlIFZOSVIgYW5kIFNXSVIgaXMgZW5oYW5jZWQgYnkgYSBkdWFsIHN5c3RlbSBvZiBvbi1ib2FyZCBjYWxpYnJhdGlvbiB1bml0cyBhbmQgaGlnaCBzdGFiaWxpdHkgaGFsb2dlbiBsYW1wcy4gQSBncm91bmQgY2FsaWJyYXRpb24gc3lzdGVtIG9mIHNwZWN0cmFsIHJhZGlhbmNlcyB0cmFjZWFibGUgdG8gZml4ZWQtcG9pbnQgYmxhY2sgYm9kaWVzIGlzIHVzZWQgZm9yIHRoZSBwcmUtZmxpZ2h0IFZOSVIgYW5kIFNXSVIgY2FsaWJyYXRpb25zLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDQiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNDwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MjQzPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA1IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQ2FsaWJyYXRpb24gYW5kIFJhZGlvbWV0cmljIFN0YWJpbGl0eSBvZiB0aGUgU2h1dHRsZSBTb2xhciBCYWNrc2NhdHRlciBVbHRyYXZpb2xldCAoU1NCVVYpIEV4cGVyaW1lbnQ8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEUgSGlsc2VucmF0aDwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEQgRSBXaWxsaWFtczwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgVCBDYWZmcmV5PC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUiBQIENlYnVsYTwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFMgSiBIeW5lczwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDYWxpYnJhdGlvbiBhbmQgUmFkaW9tZXRyaWMgU3RhYmlsaXR5IG9mIHRoZSBTaHV0dGxlIFNvbGFyIEJhY2tzY2F0dGVyIFVsdHJhdmlvbGV0IChTU0JVVikgRXhwZXJpbWVudCIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkNhbGlicmF0aW9uIGFuZCBSYWRpb21ldHJpYyBTdGFiaWxpdHkgb2YgdGhlIFNodXR0bGUgU29sYXIgQmFja3NjYXR0ZXIgVWx0cmF2aW9sZXQgKFNTQlVWKSBFeHBlcmltZW50IglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDYWxpYnJhdGlvbiBhbmQgUmFkaW9tZXRyaWMgU3RhYmlsaXR5IG9mIHRoZSBTaHV0dGxlIFNvbGFyIEJhY2tzY2F0dGVyIFVsdHJhdmlvbGV0IChTU0JVVikgRXhwZXJpbWVudDwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NhbGlicmF0aW9uIGFuZCBSYWRpb21ldHJpYyBTdGFiaWxpdHkgb2YgdGhlIFNodXR0bGUgU29sYXIgQmFja3NjYXR0ZXIgVWx0cmF2aW9sZXQgKFNTQlVWKSBFeHBlcmltZW50PC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgU1NCVVYgaXMgcGFydCBvZiB0aGUgTmF0aW9uYWwgUGxhbiBmb3IgbW9uaXRvcmluZyB0aGUgc3RyYXRvc3BoZXJlLiBPem9uZSBtb25pdG9yaW5nIGZyb20gc3BhY2UgZW1wbG95cyBiYWNrc2NhdHRlciB1bHRyYXZpb2xldC10eXBlIGluc3RydW1lbnRzIG9uIE5PQUEgb3BlcmF0aW9uYWwsIE5BU0EgcmVzZWFyY2ggYW5kIGZvcmVpZ24gZW52aXJvbm1lbnRhbCBzYXRlbGxpdGVzLiBUaGUgU1NCVVYgcHJvdmlkZXMgY2FsaWJyYXRpb24gZGF0YSBmb3IgdGhlc2UgaW5zdHJ1bWVudHMgdXNpbmcgbmVhcmx5IGNvaW5jaWRlbnQgb2JzZXJ2YXRpb25zIG9mIHRoZSBFYXJ0aCdzIHVsdHJhdmlvbGV0IGFsYmVkbyBmcm9tIGEgc2VyaWVzIG9mIFNwYWNlIFNodXR0bGUgZmxpZ2h0cy4gVGhlIFNTQlVWIGFsc28gbWVhc3VyZXMgdGhlIG1pZGRsZSB1bHRyYXZpb2xldCBzb2xhciBpcnJhZGlhbmNlIGFzIHBhcnQgb2YgdGhlIG96b25lIG1lYXN1cmVtZW50LiBBIG1ham9yIHJlcXVpcmVtZW50IGZvciB0aGUgU1NCVVYgaXMgdGhhdCBpdHMgY2FsaWJyYXRpb24gYmUga25vd24gdG8gYWJvdXQgMSUgZnJvbSBvbmUgZmxpZ2h0IHRvIHRoZSBuZXh0LiBUbyBhY2hpZXZlIHRoaXMsIHRoZSBTU0JVViBjb25kdWN0cyBhIHJpZ29yb3VzIGNhbGlicmF0aW9uIHByb2dyYW0gaW52b2x2aW5nIG11bHRpcGxlIHN0YW5kYXJkIHNvdXJjZXMgYW5kIGRldGVjdG9ycy4gVGhlIFNTQlVWIGhhcyBub3cgZmxvd24gZm91ciB0aW1lcywgb3ZlciBhIHRoaXJ0eS1tb250aCBwZXJpb2QgYmVnaW5uaW5nIGluIE9jdG9iZXIgMTk4OS4gVGhpcyBwYXBlciBkZWFscyB3aXRoIHRoZSBjYWxpYnJhdGlvbiBhbmQgcmFkaW9tZXRyaWMgc3RhYmlsaXR5IGJlZm9yZSBhbmQgYWZ0ZXIgZWFjaCBvZiBmb3VyIFNodXR0bGUgZmxpZ2h0cyBhbmQgaXMgYW4gdXBkYXRlIHRvIHRoZSByZXN1bHRzIHJlcG9ydGVkIGFmdGVyIHRoZSBmaXJzdCBTU0JVViBmbGlnaHQuIEZvciB0aGUgbW9yZSByZWNlbnQgZmxpZ2h0cywgbGFib3JhdG9yeSBjYWxpYnJhdGlvbiBwcmVjaXNpb24gY29udGludWVzIHRvIGJlIGJldHRlciB0aGFuIDElLiBJbnN0cnVtZW50IHNlbnNpdGl2aXR5IGNvbnRpbnVlZCB0byBkZWdyYWRlIGJ5IDElIHRvIDMlIGFmdGVyIGVhY2ggZmxpZ2h0LCBhbmQgaXMgd2F2ZWxlbmd0aCBkZXBlbmRlbnQuIE1lYXN1cmVtZW50cyBvZiB0aGUgc29sYXIgaXJyYWRpYW5jZSBpbiB0aGUgd2F2ZWxlbmd0aCByZWdpb24gMjAwIG5tIHRvIDQwMCBubSBoYXZlIGEgcHJlY2lzaW9uIG9mIDElIHRvIDIlIGZyb20gb25lIGZsaWdodCB0byB0aGUgbmV4dC4gQ29tcGFyaXNvbiBvZiB0aGUgU1NCVVYgYW5kIHRoZSBOT0FBLTExIFNCVVYtMiBzb2xhciBpcnJhZGlhbmNlIG1lYXN1cmVtZW50cyBpbmRpY2F0ZXMgdGhhdCB0aGUgU0JVVi0yIGluc3RydW1lbnQgaXMgZGVncmFkaW5nIGxlc3MgdGhhbiAxJSBwZXIgeWVhciBhdCB3YXZlbGVuZ3RocyBsb25nZXIgdGhhbiAzMDAgbm0gYW5kIGJ5IGFzIG11Y2ggYXMgNiUgcGVyIHllYXIgYXQgd2F2ZWxlbmd0aHMgc2hvcnRlciB0aGFuIDI1MCBubS48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA1Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDU8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjI0OTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUFuIElvZGluZSBTdGFuZGFyZCBMYW1wPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBTIEogRGF2aXM8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBLIFcgSG9sdHpjbGF3PC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSyBSIE1jTWFudXM8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBMIEcgUGlwZXI8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iQW4gSW9kaW5lIFN0YW5kYXJkIExhbXAiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJBbiBJb2RpbmUgU3RhbmRhcmQgTGFtcCIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDYvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QW4gSW9kaW5lIFN0YW5kYXJkIExhbXA8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDYvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBbiBJb2RpbmUgU3RhbmRhcmQgTGFtcDwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+V2UgcmVwb3J0IHJlc3VsdHMgb2YgYW4gaW52ZXN0aWdhdGlvbiBvZiBhIGxhbXAgZm9yIHNwZWN0cmFsIGNhbGlicmF0aW9uIHRoYXQgaXMgYmFzZWQgdXBvbiBtb2xlY3VsYXIgZmx1b3Jlc2NlbmNlLiBBbiBhcmdvbiBpb24gbGFzZXIgaXMgdXNlZCB0byBleGNpdGUgdGhlIEIgc3RhdGUgb2YgbW9sZWN1bGFyIGlvZGluZSBhbmQgdGhlIHJlc3VsdGluZyBmbHVvcmVzY2VuY2UgcHJvdmlkZXMgYSBzZXJpZXMgb2YgbGluZXMgdGhhdCBjb3ZlciB0aGUgd2F2ZWxlbmd0aCByYW5nZSA1MTUgbm0gdG8gMSAzNDAgbm0uIFRoZSBpbnRlbnNpdGllcyBvZiB0aGUgbGluZXMgYXJlIGZpeGVkIHdpdGggcmVzcGVjdCB0byBvbmUgYW5vdGhlciBhbmQgYXJlIGFwcHJvcHJpYXRlIGZvciBkZXRlcm1pbmluZyB0aGUgcmVsYXRpdmUgc3BlY3RyYWwgcmVzcG9uc2l2aXR5IG9mIGFuIG9wdGljYWwgaW5zdHJ1bWVudC4gV2UgZGlzY3VzcyBhIHNwZWNpZmljIGV4YW1wbGUgdGhhdCBkZW1vbnN0cmF0ZXMgdGhlIHNhbGllbnQgZmVhdHVyZXMgb2YgdGhpcyBsYW1wLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDYiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNjwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MjU1PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA3IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJUGVyZm9ybWFuY2Ugb2YgVmFyaW91cyBEaWZmdXNlciBNYXRlcmlhbHMgaW4gdGhlIEFic29sdXRlIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIG9mIHRoZSBTQlVWLTI8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFcgSyBGb3dsZXI8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBWIFcgTmVsc29uPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlBlcmZvcm1hbmNlIG9mIFZhcmlvdXMgRGlmZnVzZXIgTWF0ZXJpYWxzIGluIHRoZSBBYnNvbHV0ZSBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiB0aGUgU0JVVi0yIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iUGVyZm9ybWFuY2Ugb2YgVmFyaW91cyBEaWZmdXNlciBNYXRlcmlhbHMgaW4gdGhlIEFic29sdXRlIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIG9mIHRoZSBTQlVWLTIiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA3L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1BlcmZvcm1hbmNlIG9mIFZhcmlvdXMgRGlmZnVzZXIgTWF0ZXJpYWxzIGluIHRoZSBBYnNvbHV0ZSBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiB0aGUgU0JVVi0yPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA3L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7UGVyZm9ybWFuY2Ugb2YgVmFyaW91cyBEaWZmdXNlciBNYXRlcmlhbHMgaW4gdGhlIEFic29sdXRlIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIG9mIHRoZSBTQlVWLTI8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPkNoYXJhY3RlcmlzdGljcyBvZiB0aHJlZSBkaWZmdXNlciBtYXRlcmlhbHMgdXNlZCBpbiB0aGUgcmFkaW9tZXRyaWMgY2FsaWJyYXRpb24gb2YgdGhlIFNCVVYtMiBhcmUgY29tcGFyZWQuIERhdGEgb24gcmVmbGVjdGFuY2UsIEJSREYsIHVuaWZvcm1pdHkgYW5kIHN0YWJpbGl0eSBhcmUgcHJlc2VudGVkIGFuZCB0aGVpciBlZmZlY3Qgb24gY2FsaWJyYXRpb24gZGlzY3Vzc2VkLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDciPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwNzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MjU5PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA4IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQ29tcGFyaXNvbiBvZiBTcGVjdHJhbCBSYWRpYW5jZSBDYWxpYnJhdGlvbnMgb2YgU0JVVi0yIFNhdGVsbGl0ZSBPem9uZSBNb25pdG9yaW5nIEluc3RydW1lbnRzIFVzaW5nIEludGVncmF0aW5nIFNwaGVyZSBhbmQgRmxhdC1QbGF0ZSBEaWZmdXNlciBUZWNobmlxdWVzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBEIEYgSGVhdGg8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBaaG9uZ3lpbmcgV2VpPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gVyBLIEZvd2xlcjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFYgVyBOZWxzb248L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iQ29tcGFyaXNvbiBvZiBTcGVjdHJhbCBSYWRpYW5jZSBDYWxpYnJhdGlvbnMgb2YgU0JVVi0yIFNhdGVsbGl0ZSBPem9uZSBNb25pdG9yaW5nIEluc3RydW1lbnRzIFVzaW5nIEludGVncmF0aW5nIFNwaGVyZSBhbmQgRmxhdC1QbGF0ZSBEaWZmdXNlciBUZWNobmlxdWVzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQ29tcGFyaXNvbiBvZiBTcGVjdHJhbCBSYWRpYW5jZSBDYWxpYnJhdGlvbnMgb2YgU0JVVi0yIFNhdGVsbGl0ZSBPem9uZSBNb25pdG9yaW5nIEluc3RydW1lbnRzIFVzaW5nIEludGVncmF0aW5nIFNwaGVyZSBhbmQgRmxhdC1QbGF0ZSBEaWZmdXNlciBUZWNobmlxdWVzIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwOC9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDb21wYXJpc29uIG9mIFNwZWN0cmFsIFJhZGlhbmNlIENhbGlicmF0aW9ucyBvZiBTQlVWLTIgU2F0ZWxsaXRlIE96b25lIE1vbml0b3JpbmcgSW5zdHJ1bWVudHMgVXNpbmcgSW50ZWdyYXRpbmcgU3BoZXJlIGFuZCBGbGF0LVBsYXRlIERpZmZ1c2VyIFRlY2huaXF1ZXM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDgvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDb21wYXJpc29uIG9mIFNwZWN0cmFsIFJhZGlhbmNlIENhbGlicmF0aW9ucyBvZiBTQlVWLTIgU2F0ZWxsaXRlIE96b25lIE1vbml0b3JpbmcgSW5zdHJ1bWVudHMgVXNpbmcgSW50ZWdyYXRpbmcgU3BoZXJlIGFuZCBGbGF0LVBsYXRlIERpZmZ1c2VyIFRlY2huaXF1ZXM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPkhpc3RvcmljYWxseSwgZmxhdC1wbGF0ZSBkaWZmdXNlcnMgb2YgbWVhc3VyZWQgYW5ndWxhciBzY2F0dGVyaW5nIHByb3BlcnRpZXMgYXJlIGlsbHVtaW5hdGVkIGJ5IE5JU1Qgc3RhbmRhcmRzIG9mIHNwZWN0cmFsIGlycmFkaWFuY2UgdG8gcHJvdmlkZSBhIGNhbGN1bGF0ZWQgc3BlY3RyYWwgcmFkaWFuY2Ugc3RhbmRhcmQgaW4gdGhlIHdhdmVsZW5ndGggcmVnaW9uIDI1MCBubSB0byAzNDAgbm0gZm9yIHNwYWNlLWJvcm5lIFNCVVYtMiBpbnN0cnVtZW50cyB1c2VkIHRvIGRldGVybWluZSBsb25nLXRlcm0gY2hhbmdlcyBpbiBzdHJhdG9zcGhlcmljIG96b25lLiBDb3JyZXNwb25kaW5nbHksIHNwYWNlLWJvcm5lIGxhcmdlLWFwZXJ0dXJlIHNjYW5uaW5nIHJhZGlvbWV0ZXJzIHVzZWQgdG8gbWVhc3VyZSBzcGVjdHJvcmFkaW9tZXRyaWMgcHJvcGVydGllcyBvZiBFYXJ0aCBzY2VuZXMgaW4gdGhlIHJlZCBhbmQgbmVhci1pbmZyYXJlZCByZWdpb25zIGhhdmUgdXNlZCBpbnRlcm5hbGx5IGlsbHVtaW5hdGVkIGludGVncmF0aW5nIHNwaGVyZXMuIFRoZSBzcGVjdHJhbCByYWRpYW5jZSBvZiB0aGUgYXBlcnR1cmUgb2YgYW4gaW50ZWdyYXRpbmcgc3BoZXJlIGlzIGNhbGN1bGF0ZWQgZnJvbSBpdHMgc3BlY3RyYWwgaXJyYWRpYW5jZSB3aGljaCBpcyByZWZlcmVuY2VkIHRvIE5JU1Qgc3RhbmRhcmRzIG9mIHNwZWN0cmFsIGlycmFkaWFuY2UuIFNwZWN0cmFsIHJhZGlhbmNlIGNhbGlicmF0aW9uIGNvbnN0YW50cyBpbiB0aGUgcmVnaW9uIDI1MCBubSB0byAzNDAgbm0gZGVyaXZlZCB1c2luZyB0aGUgZmxhdC1wbGF0ZSBkaWZmdXNlciBhbmQgc3BoZXJpY2FsIGludGVncmF0b3IgdGVjaG5pcXVlcyBhZ3JlZSB0byB3aXRoaW4gMSUgaW4gdGhlIHdhdmVsZW5ndGggcmVnaW9uIGZyb20gMjUwIG5tIHRvIDM0MCBubS4gVGhlIHJlc3VsdHMgcHJlc2VudGVkIGFyZSBmb3IgdGhlIHJhZGlvbWV0cmljIGNhbGlicmF0aW9uIG9mIHRoZSBTQlVWLTIgZmxpZ2h0IG1vZGVsIG51bWJlciB0d28gd2hpY2ggaXMgdGhlIG5leHQgaW5zdHJ1bWVudCBzY2hlZHVsZWQgZm9yIGZsaWdodC48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA4Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMDg8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjI2NTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwOSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUFuIEFtYmllbnQgQmFja2dyb3VuZCBUcmFuc2ZlciBTdGFuZGFyZCBSYWRpb21ldGVyPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIFcgSG9mZm1hbjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgSGVwcG5lcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJBbiBBbWJpZW50IEJhY2tncm91bmQgVHJhbnNmZXIgU3RhbmRhcmQgUmFkaW9tZXRlciIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkFuIEFtYmllbnQgQmFja2dyb3VuZCBUcmFuc2ZlciBTdGFuZGFyZCBSYWRpb21ldGVyIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwOS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBbiBBbWJpZW50IEJhY2tncm91bmQgVHJhbnNmZXIgU3RhbmRhcmQgUmFkaW9tZXRlcjwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwOS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0FuIEFtYmllbnQgQmFja2dyb3VuZCBUcmFuc2ZlciBTdGFuZGFyZCBSYWRpb21ldGVyPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgbmVlZCBleGlzdHMgZm9yIGEgdmVyeSBzdGFibGUsIHBvcnRhYmxlIHJhZGlvbWV0ZXIgd2hpY2ggY2FuIHRyYW5zZmVyIHJlYWRpbmdzIGZyb20gYW4gYWJzb2x1dGUgbWVhc3VyaW5nIGNyeW9nZW5pYyByYWRpb21ldGVyIG9wZXJhdGluZyBpbiBhIHZhY3V1bSBjaGFtYmVyIHRvIG90aGVyIGxhYm9yYXRvcmllcy4gVGhpcyB3aWxsIGFsbG93IGVsZWN0cm8tb3B0aWNhbCBpbnN0cnVtZW50cyBvcGVyYXRpbmcgaW4gZWl0aGVyIGFpciBvciB2YWN1dW0gdG8gYmUgY2FsaWJyYXRlZCByZWxhdGl2ZSB0byB0aGUgc2luZ2xlIGFic29sdXRlIG1lYXN1cmluZyBjcnlvZ2VuaWMgc3RhbmRhcmQuIEl0IHdpbGwgYWxzbyBhbGxvdyBjaGFyYWN0ZXJpemF0aW9uIG9mIHZhY3V1bSBjaGFtYmVyIHdpbmRvd3MgYnkgY29tcGFyaW5nIG1lYXN1cmVtZW50cyBtYWRlIGluIGZyb250IG9mIGFuZCBiZWhpbmQgdGhlIHdpbmRvd3MuIFRvIHBlcmZvcm0gdGhlc2UgZnVuY3Rpb25zIHRoZSB0cmFuc2ZlciBzdGFuZGFyZCBtdXN0IGhhdmUgZ29vZCByYWRpb21ldHJpYyBzZW5zaXRpdml0eSBhbmQgbG9uZy10ZXJtIHJlcGVhdGFiaWxpdHkgaW4gYm90aCBhaXIgYW5kIHZhY3V1bS4gSXQgbXVzdCBiZSByZWFzb25hYmx5IGNvbXBhY3QgYW5kIHBvcnRhYmxlIGFuZCBtdXN0IG9wZXJhdGUgb3ZlciBhIHdpZGUgcmFuZ2Ugb2YgYW1iaWVudCB0ZW1wZXJhdHVyZXMuIElkZWFsbHksIHRoZSB0cmFuc2ZlciBzdGFuZGFyZCBpcyBsaW5lYXIgb3ZlciBhIGxhcmdlIGR5bmFtaWMgcmFuZ2Ugd2l0aCBkaXJlY3QgcmVhZG91dCBpbiB3YXR0cyBvciB3YXR0cy9jbTxzdXA+Mjwvc3VwPiBvciB3YXR0cy9jbTxzdXA+Mjwvc3VwPsK3c3IgYW5kIGhhcyBhIGZsYXQgc3BlY3RyYWwgcmVzcG9uc2UgZnJvbSBVViB0byBmYXItaW5mcmFyZWQgd2F2ZWxlbmd0aHMuIFN1Y2ggYSB0cmFuc2ZlciBzdGFuZGFyZCByYWRpb21ldGVyIHV0aWxpemluZyBhIGR1YWxjYXZpdHkgZGV0ZWN0b3IgaXMgZGVzY3JpYmVkLiBUaGUgZHluYW1pYyByYW5nZSwgcmFkaW9tZXRyaWMgYWNjdXJhY3kgYW5kIGxvbmctdGVybSBzdGFiaWxpdHkgb2YgdGhlIHRyYW5zZmVyIHN0YW5kYXJkIHJhZGlvbWV0ZXIgaXMgcHJlc2VudGVkLiBTdGFiaWxpdHkgZGF0YSBvZiBiZXR0ZXIgdGhhbiAwLDAwMSUgcGVyIGRheSBpbiBhaXIgaXMgc2hvd24uPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAwOSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDA5PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4yNzE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTAiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlBIENvbXBhcmF0aXZlIFN0dWR5IG9mIFNvbGFyIFRvdGFsIElycmFkaWFuY2UgTWVhc3VyZWQgYnkgQWN0aXZlLWNhdml0eSBSYWRpb21ldGVyczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQSBNZWNoZXJpa3VubmVsPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkEgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgU29sYXIgVG90YWwgSXJyYWRpYW5jZSBNZWFzdXJlZCBieSBBY3RpdmUtY2F2aXR5IFJhZGlvbWV0ZXJzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQSBDb21wYXJhdGl2ZSBTdHVkeSBvZiBTb2xhciBUb3RhbCBJcnJhZGlhbmNlIE1lYXN1cmVkIGJ5IEFjdGl2ZS1jYXZpdHkgUmFkaW9tZXRlcnMiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDEwL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0EgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgU29sYXIgVG90YWwgSXJyYWRpYW5jZSBNZWFzdXJlZCBieSBBY3RpdmUtY2F2aXR5IFJhZGlvbWV0ZXJzPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDEwL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QSBDb21wYXJhdGl2ZSBTdHVkeSBvZiBTb2xhciBUb3RhbCBJcnJhZGlhbmNlIE1lYXN1cmVkIGJ5IEFjdGl2ZS1jYXZpdHkgUmFkaW9tZXRlcnM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoaXMgcGFwZXIgcHJlc2VudHMgdGhlIHJlc3VsdHMgZnJvbSBhIGNvbXBhcmF0aXZlIHN0dWR5IG9mIHNvbGFyIHRvdGFsIGlycmFkaWFuY2UgZGF0YSBmcm9tIHRoZSBFYXJ0aCBSYWRpYXRpb24gQnVkZ2V0IEV4cGVyaW1lbnQgKEVSQkUpIG9uIGJvYXJkIHRoZSBFYXJ0aCBSYWRpYXRpb24gQnVkZ2V0IFNhdGVsbGl0ZSAoRVJCUyksIGFuZCB0aGUgU29sYXIgTWF4aW11bSBNaXNzaW9uIEFjdGl2ZSBDYXZpdHkgUmFkaW9tZXRlciBJcnJhZGlhbmNlIE1vbml0b3ItMSAoU01NL0FDUklNKSwgZm9yIHRoZSBvdmVybGFwIHBlcmlvZCAyNSBPY3RvYmVyIDE5ODQgdG8gNSBKdWx5IDE5ODkuIEJvdGggbWVhc3VyZW1lbnRzIHVzZWQgYWN0aXZlLWNhdml0eSByYWRpb21ldGVycyAoQUNSKS4gRm9yIGRheXMgd2hlbiBtZWFzdXJlbWVudHMgYXJlIGF2YWlsYWJsZSBmcm9tIGJvdGggc2F0ZWxsaXRlcywgdGhlIG1lYW4gZGlmZmVyZW5jZSBpbiB0aGUgaXJyYWRpYW5jZSB2YWx1ZXMgaXMgMiwxOCBXwrdtPHN1cD4tMjwvc3VwPi4gVGhlIGRhdGEgc2hvdyBnb29kIGFncmVlbWVudCBib3RoIGluIHRoZSBkZXRhaWxzIG9mIHRoZSBkYXktdG8tZGF5IHZhcmlhdGlvbnMgYW5kIGluIHRoZSBsb25nLXRlcm0gdHJlbmRzLiBUaGUgaXJyYWRpYW5jZSB2YXJpYXRpb25zIG9ic2VydmVkIGluIHRoZSBtZWFzdXJlbWVudHMgdHJhY2sgdGhlIHNvbGFyIGFjdGl2aXR5IGN5Y2xlIHF1aXRlIHdlbGwuIFRoZSBhbXBsaXR1ZGUgb2YgdGhlIHNvbGFyIGN5Y2xlIHJlbGF0ZWQgaXJyYWRpYW5jZSB2YXJpYXRpb24gaXMgMCwxJS4gRm9yIHRoZSBwZXJpb2QgT2N0b2JlciAxOTg0IHRvIEp1bHkgMTk4OSwgYSBjb3JyZWxhdGlvbiBjb2VmZmljaWVudCBvZiAwLDc4MSBpcyBvYnRhaW5lZCBmb3IgdGhlIHR3byBkYXRhIHNldHMuIFRoZSBjb3JyZWxhdGlvbiBiZWNvbWVzIHN0cm9uZ2VyIHdpdGggdGhlIGluY3JlYXNlIGluIHNvbGFyIGFjdGl2aXR5LCBidXQgYnJlYWtzIGRvd24gZm9yIGxvdyBzb2xhciBhY3Rpdml0eSBwZXJpb2RzLiBJbmRlcGVuZGVudCBzdHVkaWVzIG9mIEVSQlMvRVJCRSBhbmQgTmltYnVzLTcvRVJCOyBTTU0vQUNSSU0gYW5kIE5pbWJ1cy03L0VSQiBhbHNvIHNob3cgaGlnaCBjb3JyZWxhdGlvbiBiZXR3ZWVuIHRoZSBkYXRhIHNldHMgZHVyaW5nIGhpZ2ggc29sYXIgYWN0aXZpdHkgcGVyaW9kcy48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDEwIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTA8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjI3NTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCVNPVVJDRTogVGhlIFNvbGFyIFVsdHJhdmlvbGV0IFJhZGlhdGlvbiBhbmQgQ29ycmVsYXRpdmUgRW1pc3Npb25zIE1pc3Npb248L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFAgTCBTbWl0aDwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEogTCBMZWFuPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQSBCIENocmlzdGVuc2VuPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSyBMIEhhcnZleTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEQgTCBKdWRnZTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgTCBNb29yZTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE0gUiBUb3JyPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gVCBOIFdvb2RzPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlNPVVJDRTogVGhlIFNvbGFyIFVsdHJhdmlvbGV0IFJhZGlhdGlvbiBhbmQgQ29ycmVsYXRpdmUgRW1pc3Npb25zIE1pc3Npb24iIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJTT1VSQ0U6IFRoZSBTb2xhciBVbHRyYXZpb2xldCBSYWRpYXRpb24gYW5kIENvcnJlbGF0aXZlIEVtaXNzaW9ucyBNaXNzaW9uIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtTT1VSQ0U6IFRoZSBTb2xhciBVbHRyYXZpb2xldCBSYWRpYXRpb24gYW5kIENvcnJlbGF0aXZlIEVtaXNzaW9ucyBNaXNzaW9uPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDExL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7U09VUkNFOiBUaGUgU29sYXIgVWx0cmF2aW9sZXQgUmFkaWF0aW9uIGFuZCBDb3JyZWxhdGl2ZSBFbWlzc2lvbnMgTWlzc2lvbjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIFNvbGFyIFVsdHJhdmlvbGV0IFJhZGlhdGlvbiBhbmQgQ29ycmVsYXRpdmUgRW1pc3Npb25zIChTT1VSQ0UpIG1pc3Npb24gaXMgaW50ZW5kZWQgdG8gYWR2YW5jZSBvdXIgYWJpbGl0eSB0byBzcGVjaWZ5IHRoZSBzcGVjdHJhbCBpcnJhZGlhbmNlIG9mIHRoZSBTdW4gaW4gdGhlIGV4dHJlbWUgdWx0cmF2aW9sZXQgKEVVVikgd2F2ZWxlbmd0aCByYW5nZSB0aHJvdWdoIHNpbXVsdGFuZW91cywgcmFkaW9tZXRyaWNhbGx5IGFjY3VyYXRlIG1lYXN1cmVtZW50cyBvZiB0aGUgc29sYXIgRVVWIHNwZWN0cmFsIGlycmFkaWFuY2UgYW5kIG1lYXN1cmVtZW50cywgaW5jbHVkaW5nIEVVViBhbmQgdmlzaWJsZSBpbWFnZXMsIG9mIHNvbGFyIHBhcmFtZXRlcnMgdGhhdCBhcmUgY29ycmVsYXRlZCB3aXRoIHRoZSBFVVYgZmx1eC4gVGhlIGRhdGEgd2lsbCBiZSB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggZW1waXJpY2FsIG1vZGVsbGluZyB0byBkZXZlbG9wIGFuZCB2YWxpZGF0ZSBhIG1vcmUgYWNjdXJhdGUgc3lzdGVtIG9mIHByb3h5LCBvciBzdXJyb2dhdGUsIGluZGljZXMgZm9yIHRoZSBzb2xhciBFVVYgZmx1eC48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDExIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTE8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjI3OTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUFwcGxpY2F0aW9uIG9mIENyeW9nZW5pYyBFbGVjdHJpY2FsIFN1YnN0aXR1dGlvbiBSYWRpb21ldGVycyBpbiB0aGUgQ2FsaWJyYXRpb24gb2YgU29sYXItVGVycmVzdHJpYWwgUmVtb3RlIFNlbnNpbmcgSW5zdHJ1bWVudHM8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFAgViBGb3VrYWw8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBMIEphdW5pc2tpczwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJBcHBsaWNhdGlvbiBvZiBDcnlvZ2VuaWMgRWxlY3RyaWNhbCBTdWJzdGl0dXRpb24gUmFkaW9tZXRlcnMgaW4gdGhlIENhbGlicmF0aW9uIG9mIFNvbGFyLVRlcnJlc3RyaWFsIFJlbW90ZSBTZW5zaW5nIEluc3RydW1lbnRzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQXBwbGljYXRpb24gb2YgQ3J5b2dlbmljIEVsZWN0cmljYWwgU3Vic3RpdHV0aW9uIFJhZGlvbWV0ZXJzIGluIHRoZSBDYWxpYnJhdGlvbiBvZiBTb2xhci1UZXJyZXN0cmlhbCBSZW1vdGUgU2Vuc2luZyBJbnN0cnVtZW50cyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTIvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QXBwbGljYXRpb24gb2YgQ3J5b2dlbmljIEVsZWN0cmljYWwgU3Vic3RpdHV0aW9uIFJhZGlvbWV0ZXJzIGluIHRoZSBDYWxpYnJhdGlvbiBvZiBTb2xhci1UZXJyZXN0cmlhbCBSZW1vdGUgU2Vuc2luZyBJbnN0cnVtZW50czwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0FwcGxpY2F0aW9uIG9mIENyeW9nZW5pYyBFbGVjdHJpY2FsIFN1YnN0aXR1dGlvbiBSYWRpb21ldGVycyBpbiB0aGUgQ2FsaWJyYXRpb24gb2YgU29sYXItVGVycmVzdHJpYWwgUmVtb3RlIFNlbnNpbmcgSW5zdHJ1bWVudHM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPldlIGRlc2NyaWJlIHR3byByZWNlbnQgYXBwbGljYXRpb25zIG9mIGNyeW9nZW5pYyBFbGVjdHJpY2FsIFN1YnN0aXR1dGlvbiBSYWRpb21ldGVycyAoRVNScyksIHdoaWNoIGNhbiBwcm92aWRlIHNpZ25pZmljYW50bHkgaW1wcm92ZWQgYWNjdXJhY3kgYW5kIHNlbnNpdGl2aXR5IGluIHRoZSBjYWxpYnJhdGlvbiBvZiBzb2xhci10ZXJyZXN0cmlhbCByZW1vdGUgc2Vuc2luZyBpbnN0cnVtZW50cy4gSW4gdGhlIGZpcnN0LCBhIHBvcnRhYmxlIFVWIGZpbHRlciByYWRpb21ldGVyIHdhcyBjYWxpYnJhdGVkIGF0IDI1NyBubSB1c2luZyBhIGNyeW9nZW5pYyBFU1IgYW5kIGFuIGludGVuc2l0eS1zdGFiaWxpemVkIGxhc2VyLiBUaGlzIGZpbHRlciByYWRpb21ldGVyIHdhcyB0aGVuIHVzZWQgdG8gbWVhc3VyZSB0aGUgVVYgaXJyYWRpYW5jZSBhdCAyNTcgbm0gb2YgZGV1dGVyaXVtIGxhbXBzIGFuZCBvZiB0aGUgU1VSRiBJSSBzeW5jaHJvdHJvbi4gT3VyIHJlc3VsdHMgaW5kaWNhdGUgdGhhdCB0aGUgYWNjdXJhY3kgb2YgdGhlc2UgbWVhc3VyZW1lbnRzIGlzIHRocmVlIHRvIGVpZ2h0IHRpbWVzIGJldHRlciB0aGFuIHByZXNlbnRseSBhY2hpZXZlZCB3aXRoIGNhbGlicmF0aW9ucyBvZiB0aGVzZSBzb3VyY2Ugc3RhbmRhcmRzLCBhdCB0aGlzIHdhdmVsZW5ndGguIEltcHJvdmVtZW50IG9mIFVWIGNhbGlicmF0aW9ucyBpcyBjcml0aWNhbCB0byB0aGUgc3VjY2VzcyBvZiBOQVNBIHJlbW90ZSBzZW5zaW5nIG9mIG96b25lLCBhbmQgb2YgcmVsYXRlZCBzb2xhciBVViBpcnJhZGlhbmNlIHZhcmlhdGlvbnMuIEluIHRoZSBzZWNvbmQgYXBwbGljYXRpb24sIGEgZmFzdCBjcnlvZ2VuaWMgRVNSIHdhcyBkZXZlbG9wZWQgZm9yIHVzZSBhdCBUUlcgYXMgYSBzcGVjdHJhbGx5IGZsYXQgdHJhbnNmZXIgc3RhbmRhcmQsIHRvIHByb3ZpZGUgcmFkaW9tZXRyaWMgY2FsaWJyYXRpb25zIG9mIHRoZSBDRVJFUyBzcGVjdHJvcmFkaW9tZXRlciB3aXRoIGFjY3VyYWNpZXMgb2YgYmV0dGVyIHRoYW4gMSUgaW4gdGhlIHNob3J0LXdhdmUgYmFuZCBhbmQgMCw1JSBpbiB0aGUgbG9uZy13YXZlIGFuZCB0b3RhbCBiYW5kcy4gVGhlIENFUkVTIGluc3RydW1lbnQgaXMgZGVzaWduZWQgdG8gcHJvdmlkZSBpbXByb3ZlZCBtZWFzdXJlbWVudHMgb2YgdGhlIEVhcnRoJ3MgcmFkaWF0aW9uIGJ1ZGdldCBmb3IgY2xpbWF0ZSBzdHVkaWVzLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTIiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMjwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+Mjg1PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDEzIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQ29tcGFyaXNvbiBvZiB0aGUgTklTVCBoaWdoIEFjY3VyYWN5IENyeW9nZW5pYyBSYWRpb21ldGVyIGFuZCB0aGUgTklTVCBzY2FsZSBvZiBEZXRlY3RvciBTcGVjdHJhbCBSZXNwb25zZTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBNIEhvdXN0b248L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBDIEwgQ3JvbWVyPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBFIEhhcmRpczwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFQgQyBMYXJhc29uPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkNvbXBhcmlzb24gb2YgdGhlIE5JU1QgaGlnaCBBY2N1cmFjeSBDcnlvZ2VuaWMgUmFkaW9tZXRlciBhbmQgdGhlIE5JU1Qgc2NhbGUgb2YgRGV0ZWN0b3IgU3BlY3RyYWwgUmVzcG9uc2UiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJDb21wYXJpc29uIG9mIHRoZSBOSVNUIGhpZ2ggQWNjdXJhY3kgQ3J5b2dlbmljIFJhZGlvbWV0ZXIgYW5kIHRoZSBOSVNUIHNjYWxlIG9mIERldGVjdG9yIFNwZWN0cmFsIFJlc3BvbnNlIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMy9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDb21wYXJpc29uIG9mIHRoZSBOSVNUIGhpZ2ggQWNjdXJhY3kgQ3J5b2dlbmljIFJhZGlvbWV0ZXIgYW5kIHRoZSBOSVNUIHNjYWxlIG9mIERldGVjdG9yIFNwZWN0cmFsIFJlc3BvbnNlPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDEzL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q29tcGFyaXNvbiBvZiB0aGUgTklTVCBoaWdoIEFjY3VyYWN5IENyeW9nZW5pYyBSYWRpb21ldGVyIGFuZCB0aGUgTklTVCBzY2FsZSBvZiBEZXRlY3RvciBTcGVjdHJhbCBSZXNwb25zZTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VHdvIGluZGVwZW5kZW50IG1ldGhvZHMgb2YgbWVhc3VyZW1lbnQgd2VyZSB1c2VkIHRvIGRldGVybWluZSB0aGUgYWJzb2x1dGUgc3BlY3RyYWwgcmVzcG9uc2l2aXR5IGFuZCBleHRlcm5hbCBxdWFudHVtIGVmZmljaWVuY3kgb2YgbGlnaHQtdHJhcHBpbmcgc2lsaWNvbiBwaG90b2Rpb2RlIHBhY2thZ2VzLiBUaGVzZSB0cmFwIHBhY2thZ2VzIHdlcmUgY2FsaWJyYXRlZCBmaXJzdCBieSB0aGUgTklTVCBIaWdoIEFjY3VyYWN5IENyeW9nZW5pYyBSYWRpb21ldGVyIGF0IGxhc2VyIHdhdmVsZW5ndGhzIG9mIDYzMyBubSBhbmQgNDQyIG5tLiBUaGV5IHdlcmUgYWxzbyBtZWFzdXJlZCBpbiB0aGUgTklTVCBTcGVjdHJhbCBDb21wYXJhdG9yIEZhY2lsaXR5IHdpdGggd29ya2luZyBzdGFuZGFyZHMgdHJhY2VhYmxlIHRvIGEgMTAwJSBxdWFudHVtIGVmZmljaWVudCByYWRpb21ldGVyIChRRUQtMjAwKS4gVGhlIHR3byBzZXRzIG9mIG1lYXN1cmVtZW50cyBhZ3JlZSB0byBiZXR0ZXIgdGhhbiAwLDElIGF0IDYzMyBubSBhbmQgMCwyNSUgYXQgNDQyIG5tLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTMiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxMzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MjkxPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE0IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJUHJlc2VudCBTdGF0ZSBvZiB0aGUgUFRCIFByaW1hcnkgU3RhbmRhcmQgZm9yIFJhZGlhbnQgUG93ZXIgQmFzZWQgb24gQ3J5b2dlbmljIFJhZGlvbWV0cnk8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEsgRCBTdG9jazwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEggSG9mZXI8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iUHJlc2VudCBTdGF0ZSBvZiB0aGUgUFRCIFByaW1hcnkgU3RhbmRhcmQgZm9yIFJhZGlhbnQgUG93ZXIgQmFzZWQgb24gQ3J5b2dlbmljIFJhZGlvbWV0cnkiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJQcmVzZW50IFN0YXRlIG9mIHRoZSBQVEIgUHJpbWFyeSBTdGFuZGFyZCBmb3IgUmFkaWFudCBQb3dlciBCYXNlZCBvbiBDcnlvZ2VuaWMgUmFkaW9tZXRyeSIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTQvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7UHJlc2VudCBTdGF0ZSBvZiB0aGUgUFRCIFByaW1hcnkgU3RhbmRhcmQgZm9yIFJhZGlhbnQgUG93ZXIgQmFzZWQgb24gQ3J5b2dlbmljIFJhZGlvbWV0cnk8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTQvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtQcmVzZW50IFN0YXRlIG9mIHRoZSBQVEIgUHJpbWFyeSBTdGFuZGFyZCBmb3IgUmFkaWFudCBQb3dlciBCYXNlZCBvbiBDcnlvZ2VuaWMgUmFkaW9tZXRyeTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIFBUQiBwcmltYXJ5IHN0YW5kYXJkcyBmb3IgcmFkaWFudCBwb3dlciBpbiBCcmF1bnNjaHdlaWcgYXJlIHRoZSBHZXJtYW4gbmF0aW9uYWwgc3RhbmRhcmQgZm9yIGRldGVjdG9yIGNhbGlicmF0aW9ucyB3aXRoaW4gdGhlIHNwZWN0cmFsIHJhbmdlIG9mIDIwMCBubSB0byAyLDUgzrxtLiBUaGlzIHBhcGVyIHByZXNlbnRzIHRoZSBwcm9ncmVzcyBpbiBkZXZlbG9wbWVudCBhbmQgb3B0aW1pemF0aW9uIG9mIGEgaGlnaCBhY2N1cmFjeSBtZWFzdXJlbWVudCBmYWNpbGl0eSB1c2luZyBhIGNyeW9nZW5pYyByYWRpb21ldGVyIGFzIHRoZSBwcmltYXJ5IHN0YW5kYXJkLiBUaGUgZm9sbG93aW5nIGZlYXR1cmVzIGFyZSBoaWdobGlnaHRlZDogbWV0aG9kIG9mIGR5bmFtaWMgcG93ZXIgc3Vic3RpdHV0aW9uOyB0ZW1wZXJhdHVyZSBkZXBlbmRlbmNlIG9mIHRoZSBhYnNvcnB0YW5jZSBvZiB0aGUgY2F2aXR5OyBlcnJvciByZWR1Y3Rpb24gYnkgZGlzdGFuY2UtZXJyb3ItZnJlZSBjYWxpYnJhdGlvbiB0cmFuc2ZlcjsgYW5kIGNvbmNlcHQgb2Ygd2luZG93LWNvcnJlY3Rpb24tZnJlZSB0cmFuc2Zlci48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE0Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTQ8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjI5NzwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxNSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUNoYXJhY3Rlcml6YXRpb24gb2YgUGhvdG9kaW9kZXMgaW4gdGhlIFVWIGFuZCBWaXNpYmxlIFNwZWN0cmFsIFJlZ2lvbiBCYXNlZCBvbiBDcnlvZ2VuaWMgUmFkaW9tZXRyeTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRnUgTGVpPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBGaXNjaGVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkNoYXJhY3Rlcml6YXRpb24gb2YgUGhvdG9kaW9kZXMgaW4gdGhlIFVWIGFuZCBWaXNpYmxlIFNwZWN0cmFsIFJlZ2lvbiBCYXNlZCBvbiBDcnlvZ2VuaWMgUmFkaW9tZXRyeSIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkNoYXJhY3Rlcml6YXRpb24gb2YgUGhvdG9kaW9kZXMgaW4gdGhlIFVWIGFuZCBWaXNpYmxlIFNwZWN0cmFsIFJlZ2lvbiBCYXNlZCBvbiBDcnlvZ2VuaWMgUmFkaW9tZXRyeSIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTUvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q2hhcmFjdGVyaXphdGlvbiBvZiBQaG90b2Rpb2RlcyBpbiB0aGUgVVYgYW5kIFZpc2libGUgU3BlY3RyYWwgUmVnaW9uIEJhc2VkIG9uIENyeW9nZW5pYyBSYWRpb21ldHJ5PC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE1L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q2hhcmFjdGVyaXphdGlvbiBvZiBQaG90b2Rpb2RlcyBpbiB0aGUgVVYgYW5kIFZpc2libGUgU3BlY3RyYWwgUmVnaW9uIEJhc2VkIG9uIENyeW9nZW5pYyBSYWRpb21ldHJ5PC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5EaWZmZXJlbnQgdHlwZXMgb2YgcGhvdG9kaW9kZSBoYXZlIGJlZW4gY2hhcmFjdGVyaXplZCB3aXRoIHJlc3BlY3QgdG8gdW5pZm9ybWl0eSwgbGluZWFyaXR5LCBzdGFiaWxpdHkgb2YgcmVzcG9uc2l2aXR5IGFuZCB0ZW1wZXJhdHVyZSBjb2VmZmljaWVudCBhdCBzZXZlcmFsIHdhdmVsZW5ndGhzIGJldHdlZW4gMjU3IG5tIGFuZCA3OTkgbm0gYmFzZWQgb24gY3J5b2dlbmljIHJhZGlvbWV0cnkgYW5kIGludGVuc2l0eSBzdGFiaWxpemVkIGxhc2Vycy4gVGhlIEhhbWFtYXRzdSBTMTMzNyBwaG90b2Rpb2RlIHdhcyBmb3VuZCB0byBiZSB0aGUgYmVzdCBzdWl0ZWQgZm9yIHVzZSBhcyBhIGhpZ2ggYWNjdXJhY3kgdHJhbnNmZXIgc3RhbmRhcmQgZm9yIGJvdGggdGhlIHZpc2libGUgYW5kIFVWIHNwZWN0cmFsIHJlZ2lvbnMuIEZvciBsb3ctbGV2ZWwgcmFkaWFudCBwb3dlciBtZWFzdXJlbWVudCwgdGhpcyBraW5kIG9mIHBob3RvZGlvZGUgY2FuIGJlIGNhbGlicmF0ZWQgdmlhIGEgY3J5b2dlbmljIHJhZGlvbWV0ZXIgd2l0aCBhIHRvdGFsIHVuY2VydGFpbnR5IGFzIGxvdyBhcyDCsTAsMDIlIGluIHRoZSB2aXNpYmxlIGFuZCDCsTAsMjUlIGluIHRoZSBVVi48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE1Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTU8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjMwNTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxNiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUNyeW9nZW5pYyBTb2xhciBBYnNvbHV0ZSBSYWRpb21ldGVyIChDU0FSKTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBFIE1hcnRpbjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE4gUCBGb3g8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iQ3J5b2dlbmljIFNvbGFyIEFic29sdXRlIFJhZGlvbWV0ZXIgKENTQVIpIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQ3J5b2dlbmljIFNvbGFyIEFic29sdXRlIFJhZGlvbWV0ZXIgKENTQVIpIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxNi9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDcnlvZ2VuaWMgU29sYXIgQWJzb2x1dGUgUmFkaW9tZXRlciAoQ1NBUik8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTYvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDcnlvZ2VuaWMgU29sYXIgQWJzb2x1dGUgUmFkaW9tZXRlciAoQ1NBUik8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSBDcnlvZ2VuaWMgU29sYXIgQWJzb2x1dGUgUmFkaW9tZXRlciAoQ1NBUikgaXMgYSBuZXcgcHJpbWFyeSByYWRpb21ldHJpYyBzdGFuZGFyZCBmb3IgdXNlIGluIHNwYWNlIGFuZCB0cmFjZWFibGUgdG8gdGhlIEludGVybmF0aW9uYWwgU3lzdGVtIG9mIFVuaXRzIChTSSkuIFRoZSBDU0FSIHdpbGwgYmUgY2FwYWJsZSBvZiBtZWFzdXJpbmcgdGhlIHRvdGFsIGlycmFkaWFuY2Ugb2YgdGhlIFN1biB3aXRoIGFuIHVuY2VydGFpbnR5IG9mIDAsMDElLCBhbmQgYSByZXNvbHV0aW9uIG9mIDAsMDAxJSwgbW9yZSB0aGFuIGEgZmFjdG9yIG9mIHRlbiBpbXByb3ZlbWVudCBvdmVyIGV4aXN0aW5nIGluc3RydW1lbnRzLiBUaGUgc3RhbmRhcmQgaXMgYXQgcHJlc2VudCB1bmRlciBkZXZlbG9wbWVudCBhbmQgaXMgcGFydCBvZiBhIHByb3Bvc2FsLCBBYnNvbHV0ZSBSYWRpb21ldHJpYyBNZWFzdXJlbWVudHMgaW4gU3BhY2UgKEFSTVMpLCB3aGljaCBoYXMgYmVlbiBzdWJtaXR0ZWQgdG8gdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeSBpbiByZXNwb25zZSB0byBhIENhbGwgZm9yIE9wcG9ydHVuaXRpZXMgZm9yIENvbHVtYnVzIFByZS1DdXJzb3IgRmxpZ2h0cy4gVGhlIENTQVIgaXMgY3VycmVudGx5IG9uIHRoZSBwcm92aXNpb25hbCBwYXlsb2FkIG9mIEVVUkVDQSBJSUkuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxNiI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE2PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zMDk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTciIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlBIE1ldGhvZCBvZiBSZWFsaXppbmcgU3BlY3RyYWwgSXJyYWRpYW5jZSBCYXNlZCBvbiBhbiBBYnNvbHV0ZSBDcnlvZ2VuaWMgUmFkaW9tZXRlcjwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQiBDYXJvbCBKb2huc29uPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQyBMIENyb21lcjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgRCBTYXVuZGVyczwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEcgRXBwZWxkYXVlcjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEogRm93bGVyPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gViBJIFNhcHJpdHNreTwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEcgRGV6c2k8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iQSBNZXRob2Qgb2YgUmVhbGl6aW5nIFNwZWN0cmFsIElycmFkaWFuY2UgQmFzZWQgb24gYW4gQWJzb2x1dGUgQ3J5b2dlbmljIFJhZGlvbWV0ZXIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJBIE1ldGhvZCBvZiBSZWFsaXppbmcgU3BlY3RyYWwgSXJyYWRpYW5jZSBCYXNlZCBvbiBhbiBBYnNvbHV0ZSBDcnlvZ2VuaWMgUmFkaW9tZXRlciIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTcvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QSBNZXRob2Qgb2YgUmVhbGl6aW5nIFNwZWN0cmFsIElycmFkaWFuY2UgQmFzZWQgb24gYW4gQWJzb2x1dGUgQ3J5b2dlbmljIFJhZGlvbWV0ZXI8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTcvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBIE1ldGhvZCBvZiBSZWFsaXppbmcgU3BlY3RyYWwgSXJyYWRpYW5jZSBCYXNlZCBvbiBhbiBBYnNvbHV0ZSBDcnlvZ2VuaWMgUmFkaW9tZXRlcjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+QSB0ZWNobmlxdWUgaXMgcHJlc2VudGVkIGZvciByZWFsaXppbmcgc3BlY3RyYWwgaXJyYWRpYW5jZSB1c2luZyBhIGxhcmdlLWFyZWEsIGhpZ2ggdGVtcGVyYXR1cmUsIHVuaWZvcm0sIGJsYWNrLWJvZHkgc291cmNlIGFuZCBmaWx0ZXItcmFkaW9tZXRlcnMgdGhhdCBhcmUgY2FsaWJyYXRlZCB1c2luZyBhIEhpZ2ggQWNjdXJhY3kgQ3J5b2dlbmljIFJhZGlvbWV0ZXIuIFRoZSBtZXRob2Qgd2lsbCBiZSBzdHVkaWVkIGJ5IGNhbGlicmF0aW5nIGlycmFkaWFuY2UgbGFtcHMgd2l0aCB0aGlzIG5ldyB0ZWNobmlxdWUgYW5kIGNvbXBhcmluZyB0aGUgcmVzdWx0cyB3aXRoIHRob3NlIG9idGFpbmVkIGJ5IHRoZSBtZXRob2QgY3VycmVudGx5IGVtcGxveWVkIGF0IHRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgU3RhbmRhcmRzIGFuZCBUZWNobm9sb2d5IChOSVNUKS4gUHJvZ3Jlc3MgdG8gZGF0ZSBhbmQgcHJlbGltaW5hcnkgcmVzdWx0cyBhcmUgcHJlc2VudGVkLiBUaGUgdWx0aW1hdGUgZ29hbCBvZiB0aGUgcHJvZ3JhbW1lIGlzIHRvIHJlZHVjZSB0aGUgbWVhc3VyZW1lbnQgdW5jZXJ0YWludGllcyBpbiB0aGUgc3BlY3RyYWwgaXJyYWRpYW5jZSBzY2FsZXMgdGhhdCBhcmUgbWFkZSBhdmFpbGFibGUgdG8gaW5kdXN0cnkgYnkgY2FsaWJyYXRpbmcgZGV1dGVyaXVtIGFuZCB0dW5nc3Rlbi1oYWxvZ2VuIGlycmFkaWFuY2UgbGFtcHMuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxNyI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE3PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zMTc8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTgiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlDaGFyYWN0ZXJpemF0aW9uIG9mIGEgSGlnaCBTZW5zaXRpdml0eSBDb21wb3NpdGUgU2lsaWNvbiBCb2xvbWV0ZXI8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEcgRXBwZWxkYXVlcjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEEgTCBNaWdkYWxsPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQyBMIENyb21lcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDaGFyYWN0ZXJpemF0aW9uIG9mIGEgSGlnaCBTZW5zaXRpdml0eSBDb21wb3NpdGUgU2lsaWNvbiBCb2xvbWV0ZXIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJDaGFyYWN0ZXJpemF0aW9uIG9mIGEgSGlnaCBTZW5zaXRpdml0eSBDb21wb3NpdGUgU2lsaWNvbiBCb2xvbWV0ZXIiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE4L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NoYXJhY3Rlcml6YXRpb24gb2YgYSBIaWdoIFNlbnNpdGl2aXR5IENvbXBvc2l0ZSBTaWxpY29uIEJvbG9tZXRlcjwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxOC9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NoYXJhY3Rlcml6YXRpb24gb2YgYSBIaWdoIFNlbnNpdGl2aXR5IENvbXBvc2l0ZSBTaWxpY29uIEJvbG9tZXRlcjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+V2UgaGF2ZSBtZWFzdXJlZCB0aGUgZWxlY3RyaWNhbCBhbmQgcmFkaW9tZXRyaWMgcHJvcGVydGllcyBvZiBhIGNyeW9nZW5pYyBib2xvbWV0ZXIvYW1wbGlmaWVyIHdoaWNoIGlzIGludGVuZGVkIGZvciB1c2UgYXMgYSB0cmFuc2ZlciBzdGFuZGFyZCBpbiBhbiBpbmZyYXJlZCBzcGVjdHJhbCBjb21wYXJhdG9yIGZhY2lsaXR5IHVuZGVyIGRldmVsb3BtZW50IGF0IHRoZSBOSVNULiBXZSBoYXZlIGZvdW5kIGl0cyBzZW5zaXRpdml0eSB0byBiZSBzaW1pbGFyIDIwIHBXLCBpbnN0YWJpbGl0eSAmbHQ7MSUsIHJlc3BvbnNpdml0eSBzaW1pbGFyIDEsNyA8Yj4mI3gwMGQ3OzwvYj4gMTA8c3VwPjY8L3N1cD4gVi9XLCBzcGF0aWFsIG5vbnVuaWZvcm1pdHkgJmx0OzElIGFuZCBub25saW5lYXJpdHkgJmx0OzElIG92ZXIgZml2ZSBkZWNhZGVzLiBUaGVzZSByZXN1bHRzIHNob3cgdGhhdCB0aGlzIGRldmljZSBjYW4gYmUgdXNlZCBmb3IgaXRzIGludGVuZGVkIHB1cnBvc2UgYXMgYW4gSVIgZGV0ZWN0b3IgdHJhbnNmZXIgc3RhbmRhcmQuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxOCI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDE4PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zMjE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTkiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlJbXByb3ZlZCBOZWFyLUluZnJhcmVkIERldGVjdG9yczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTiBQIEZveDwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJJbXByb3ZlZCBOZWFyLUluZnJhcmVkIERldGVjdG9ycyIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkltcHJvdmVkIE5lYXItSW5mcmFyZWQgRGV0ZWN0b3JzIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxOS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtJbXByb3ZlZCBOZWFyLUluZnJhcmVkIERldGVjdG9yczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxOS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ltcHJvdmVkIE5lYXItSW5mcmFyZWQgRGV0ZWN0b3JzPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgcGFwZXIgZGVzY3JpYmVzIHRoZSBwcm9wZXJ0aWVzIG9mIGEgbmV3IGxhcmdlIGFyZWEgSW5HYUFzIHBob3RvZGlvZGUgd2l0aCBuZWFyIHVuaXR5IGludGVybmFsIHF1YW50dW0gZWZmaWNpZW5jeS4gTWVhc3VyZW1lbnRzIG9mIGxpbmVhcml0eSwgc3BhdGlhbCB1bmlmb3JtaXR5IGFuZCBkYXJrIGN1cnJlbnQgb2YgdGhlIHBob3RvZGlvZGVzIGFyZSBwcmVzZW50ZWQgYW5kIGNvbXBhcmVkIHdpdGggbWVhc3VyZW1lbnRzIG9uIGdlcm1hbml1bSBwaG90b2Rpb2Rlcy4gVGhlIHBhcGVyIGFsc28gZGVzY3JpYmVzIHRoZSBwZXJmb3JtYW5jZSBvZiBhIGRldGVjdG9yIGNvbnN0cnVjdGVkIGZyb20gYW4gYXJyYW5nZW1lbnQgb2YgdGhyZWUgb2YgdGhlc2UgcGhvdG9kaW9kZXMgYW5kIHNob3dzIGhvdyBpdCBoYXMgYSBjYWxjdWxhYmxlIHJlc3BvbnNpdml0eSBmcm9tIDk4MCBubSB0byAxIDY0MCBubS4gSXQgYWxzbyBkZXNjcmliZXMgaG93IHN1Y2ggYSBkZXRlY3RvciBjYW4gYmUgdXNlZCBhcyBhIHNlbnNvciBmb3IgYSBmaWJyZS1vcHRpYyBwb3dlciBtZXRlciB3aXRoIGFuIHVuY2VydGFpbnR5IG9mIGFyb3VuZCAwLDElLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMTkiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAxOTwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzI3PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIwIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQWx0ZXJuYXRpdmUgQ29uZmlndXJhdGlvbnMgZm9yIFRyYXAgRGV0ZWN0b3JzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIE0gUGFsbWVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkFsdGVybmF0aXZlIENvbmZpZ3VyYXRpb25zIGZvciBUcmFwIERldGVjdG9ycyIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkFsdGVybmF0aXZlIENvbmZpZ3VyYXRpb25zIGZvciBUcmFwIERldGVjdG9ycyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjAvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QWx0ZXJuYXRpdmUgQ29uZmlndXJhdGlvbnMgZm9yIFRyYXAgRGV0ZWN0b3JzPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIwL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QWx0ZXJuYXRpdmUgQ29uZmlndXJhdGlvbnMgZm9yIFRyYXAgRGV0ZWN0b3JzPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5BIGJyaWVmIGhpc3Rvcnkgb2YgdGhlIGRldmVsb3BtZW50IG9mIHF1YW50dW0tZWZmaWNpZW50IGRldGVjdG9ycyBhbmQgdGhlaXIgaW5jb3Jwb3JhdGlvbiBpbnRvIGxpZ2h0LXRyYXBwaW5nIGNvbmZpZ3VyYXRpb25zIGlzIHByZXNlbnRlZC4gVmFyaW91cyBsaWdodC10cmFwcGluZyBzY2hlbWVzIGFyZSBzdXJ2ZXllZC4gQSBuZXcgcmVmcmFjdGl2ZSBjb25maWd1cmF0aW9uIGlzIGRlc2NyaWJlZCB3aGljaCB5aWVsZHMgdGhlIGxhcmdlc3QgZmllbGQtb2YtdmlldyByZXBvcnRlZCB0byBkYXRlLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjAiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMDwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzM1PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIxIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJVGhlIEFwcGxpY2F0aW9uIG9mIGFuIE9wdGljYWwgQmlhc2luZyBNZXRob2QgdG8gRGV0ZXJtaW5lIFRlbXBlcmF0dXJlLWRlcGVuZGVudCBOb25saW5lYXJpdHkgb2YgUGhvdG92b2x0YWljIEdlIERldGVjdG9yczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBQIE1ha2FpPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQyBMIENyb21lcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJUaGUgQXBwbGljYXRpb24gb2YgYW4gT3B0aWNhbCBCaWFzaW5nIE1ldGhvZCB0byBEZXRlcm1pbmUgVGVtcGVyYXR1cmUtZGVwZW5kZW50IE5vbmxpbmVhcml0eSBvZiBQaG90b3ZvbHRhaWMgR2UgRGV0ZWN0b3JzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iVGhlIEFwcGxpY2F0aW9uIG9mIGFuIE9wdGljYWwgQmlhc2luZyBNZXRob2QgdG8gRGV0ZXJtaW5lIFRlbXBlcmF0dXJlLWRlcGVuZGVudCBOb25saW5lYXJpdHkgb2YgUGhvdG92b2x0YWljIEdlIERldGVjdG9ycyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjEvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7VGhlIEFwcGxpY2F0aW9uIG9mIGFuIE9wdGljYWwgQmlhc2luZyBNZXRob2QgdG8gRGV0ZXJtaW5lIFRlbXBlcmF0dXJlLWRlcGVuZGVudCBOb25saW5lYXJpdHkgb2YgUGhvdG92b2x0YWljIEdlIERldGVjdG9yczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1RoZSBBcHBsaWNhdGlvbiBvZiBhbiBPcHRpY2FsIEJpYXNpbmcgTWV0aG9kIHRvIERldGVybWluZSBUZW1wZXJhdHVyZS1kZXBlbmRlbnQgTm9ubGluZWFyaXR5IG9mIFBob3Rvdm9sdGFpYyBHZSBEZXRlY3RvcnM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSBkaWZmZXJlbnRpYWwgc3BlY3RyYWwgcmVzcG9uc2l2aXR5IG1ldGhvZCBoYXMgYmVlbiB1c2VkIHRvIGRldGVybWluZSB0aGUgbGluZWFyaXR5IG9mIGxhcmdlLWFyZWEgR2UgZGV0ZWN0b3JzIG5lYXIgcm9vbSB0ZW1wZXJhdHVyZS4gVGhlIG5vbmxpbmVhcml0eSBjYXVzZWQgYnkgdXNpbmcgYSB0cmFkaXRpb25hbCB0cmFuc2ltcGVkYW5jZSBhbXBsaWZpZXIgaXMgZGlzY3Vzc2VkIGFuZCB0aGUgYXBwbGljYWJpbGl0eSBvZiBhIGJvb3RzdHJhcHBpbmcgdGVjaG5pcXVlIHRvIGNvbXBlbnNhdGUgZm9yIHRoZSBsb3cgc2h1bnQgcmVzaXN0YW5jZSBvZiB0aGUgcGhvdG9kaW9kZSBpcyBzaG93bi4gVGhlIGRldGVjdG9ycyB3ZXJlIGZvdW5kIHRvIGJlIGxpbmVhciB1cCB0byBhIHNhdHVyYXRpb24gbGltaXQgd2hpY2ggaXMgbmVhcmx5IGluZGVwZW5kZW50IG9mIHdhdmVsZW5ndGguIFRoZSB0ZW1wZXJhdHVyZSBkZXBlbmRlbmNlIG9mIHRoZSBzYXR1cmF0aW9uIGxldmVsIGlzIGFsc28gZGVzY3JpYmVkLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjEiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMTwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzQxPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIyIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJSW50ZXJjb21wYXJpc29uIGJldHdlZW4gdGhlIE5JU1QgTEJJUiBBYnNvbHV0ZSBDcnlvZ2VuaWMgUmFkaW9tZXRlciBhbmQgYW4gT3B0aWNhbCBUcmFwIERldGVjdG9yPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBTIFIgTG9yZW50ejwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgVSBEYXRsYTwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJJbnRlcmNvbXBhcmlzb24gYmV0d2VlbiB0aGUgTklTVCBMQklSIEFic29sdXRlIENyeW9nZW5pYyBSYWRpb21ldGVyIGFuZCBhbiBPcHRpY2FsIFRyYXAgRGV0ZWN0b3IiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJJbnRlcmNvbXBhcmlzb24gYmV0d2VlbiB0aGUgTklTVCBMQklSIEFic29sdXRlIENyeW9nZW5pYyBSYWRpb21ldGVyIGFuZCBhbiBPcHRpY2FsIFRyYXAgRGV0ZWN0b3IiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIyL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ludGVyY29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBOSVNUIExCSVIgQWJzb2x1dGUgQ3J5b2dlbmljIFJhZGlvbWV0ZXIgYW5kIGFuIE9wdGljYWwgVHJhcCBEZXRlY3Rvcjwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ludGVyY29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBOSVNUIExCSVIgQWJzb2x1dGUgQ3J5b2dlbmljIFJhZGlvbWV0ZXIgYW5kIGFuIE9wdGljYWwgVHJhcCBEZXRlY3Rvcjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIGdvYWwgb2YgdGhlIExvdyBCYWNrZ3JvdW5kIEluZnJhcmVkIChMQklSKSBjYWxpYnJhdGlvbiBmYWNpbGl0eSBhdCB0aGUgTklTVCBpcyB0byBwcm92aWRlIHRoZSBpbmZyYXJlZCB1c2VyIGNvbW11bml0eSB3aXRoIGEgbWVhc3VyZW1lbnQgYmFzZSBmb3IgYm90aCBicm9hZGJhbmQgYW5kIHNwZWN0cmFsIHJhZGlvbWV0cmljIGNhbGlicmF0aW9ucyBpbiBhIGxvdyBiYWNrZ3JvdW5kIGVudmlyb25tZW50LiBUaGUgc3RhbmRhcmQgZGV0ZWN0b3IgdXNlZCBpbiB0aGlzIGZhY2lsaXR5IGlzIHRoZSBBYnNvbHV0ZSBDcnlvZ2VuaWMgUmFkaW9tZXRlciAoQUNSKS4gVGhlIEFDUiBpcyBhbiBlbGVjdHJpY2FsIHN1YnN0aXR1dGlvbiByYWRpb21ldGVyIHdoaWNoIGlzIGNhcGFibGUgb2YgbWVhc3VyaW5nIGJldHdlZW4gMjAgblcgYW5kIDEwMCDOvFcgb2YgcmFkaWFudCBwb3dlci4gQnkgdXNpbmcgYW4gb3B0aWNhbCB0cmFwIGRldGVjdG9yLCBhbiBpbnRlcmNvbXBhcmlzb24gd2l0aCB0aGUgQUNSIGlzIG1hZGUgYXMgcGFydCBvZiBhIHByb2dyYW1tZSB0byBtb25pdG9yIHRoZSBsb25nLXRlcm0gc3RhYmlsaXR5IG9mIHRoZSBBQ1IuIEEgY29tcGFyaXNvbiBpcyBhbHNvIG1hZGUgYmV0d2VlbiB0aGUgb3B0aWNhbCB0cmFwIGRldGVjdG9yIGFuZCBhbiBpbi1ob3VzZSB0cmFwIGRldGVjdG9yIHRoYXQgd2FzIGNhbGlicmF0ZWQgdXNpbmcgdGhlIEhpZ2ggQWNjdXJhY3kgQ3J5b2dlbmljIFJhZGlvbWV0ZXIgKEhBQ1IpLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjIiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMjwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzQ1PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIzIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQSBQaHlzaWNhbCBCYXNpcyBmb3IgdGhlIEV4dHJhcG9sYXRpb24gb2YgU2lsaWNvbiBQaG90b2Rpb2RlIFF1YW50dW0gRWZmaWNpZW5jeSBpbnRvIHRoZSBVbHRyYXZpb2xldDwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTiBNIER1cmFudDwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE4gUCBGb3g8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iQSBQaHlzaWNhbCBCYXNpcyBmb3IgdGhlIEV4dHJhcG9sYXRpb24gb2YgU2lsaWNvbiBQaG90b2Rpb2RlIFF1YW50dW0gRWZmaWNpZW5jeSBpbnRvIHRoZSBVbHRyYXZpb2xldCIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkEgUGh5c2ljYWwgQmFzaXMgZm9yIHRoZSBFeHRyYXBvbGF0aW9uIG9mIFNpbGljb24gUGhvdG9kaW9kZSBRdWFudHVtIEVmZmljaWVuY3kgaW50byB0aGUgVWx0cmF2aW9sZXQiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDIzL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0EgUGh5c2ljYWwgQmFzaXMgZm9yIHRoZSBFeHRyYXBvbGF0aW9uIG9mIFNpbGljb24gUGhvdG9kaW9kZSBRdWFudHVtIEVmZmljaWVuY3kgaW50byB0aGUgVWx0cmF2aW9sZXQ8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjMvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBIFBoeXNpY2FsIEJhc2lzIGZvciB0aGUgRXh0cmFwb2xhdGlvbiBvZiBTaWxpY29uIFBob3RvZGlvZGUgUXVhbnR1bSBFZmZpY2llbmN5IGludG8gdGhlIFVsdHJhdmlvbGV0PC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgZXJyb3JzIGFzc29jaWF0ZWQgd2l0aCBtb2RlbGxpbmcgdGhlIHF1YW50dW0gZWZmaWNpZW5jeSBvZiBoaWdoIHF1YWxpdHkgc2lsaWNvbiBwaG90b2Rpb2RlcyBpbiB0aGUgdWx0cmF2aW9sZXQgdXNpbmcgdGhlIHNlbWljb25kdWN0b3IgZGV2aWNlLW1vZGVsbGluZyBwcm9ncmFtIFBDMUQgYXJlIGRpc2N1c3NlZC4gVW5jZXJ0YWludHkgc3BlY3RyYSBoYXZlIGJlZW4gY2FsY3VsYXRlZCBmb3IgdGhlc2UgZXJyb3JzLCB3aGljaCBhcmUgbWFpbmx5IGEgcmVzdWx0IG9mIHRoZSBhcHBsaWNhdGlvbiBvZiBiYXNpYyBzb2xpZC1zdGF0ZSBtb2RlbHMgYW5kIHBhcmFtZXRlcnMgaW4gdGhlIGV4dHJlbWUgY2FzZSBvZiB1bHRyYXZpb2xldCBhYnNvcnB0aW9uLiBUaGUgbW9yZSBjcml0aWNhbCBwYXJhbWV0ZXJzIGhhdmUgYmVlbiBpZGVudGlmaWVkIGFuZCwgd2hlcmUgcG9zc2libGUsIGNvcnJlY3Rpb25zIGhhdmUgYmVlbiBtYWRlIHRvIGFjY291bnQgZm9yIHRoZW0uIFRoZSBvdmVyYWxsIHVuY2VydGFpbnR5IGFzc29jaWF0ZWQgd2l0aCBxdWFudHVtIGVmZmljaWVuY3kgbW9kZWxsaW5nIGlzIGZvdW5kIHRvIGJlIHdlbGwgYmVsb3cgMCwyJSBmb3IgZGV0ZWN0aW9uIG9mIHJhZGlhdGlvbiBmcm9tIDQwMCBubSB0byAzMDAgbm0sIGFuZCBiZWxvdyAxJSBmb3IgcmFkaWF0aW9uIGRvd24gdG8gMjUwIG5tLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjMiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyMzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzUxPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI0IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJRmF0aWd1ZSBFZmZlY3RzIGluIEdlcm1hbml1bSBQaG90b2RldGVjdG9yczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUCBMZWNvbGxpbmV0PC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBCYXN0aWU8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iRmF0aWd1ZSBFZmZlY3RzIGluIEdlcm1hbml1bSBQaG90b2RldGVjdG9ycyIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkZhdGlndWUgRWZmZWN0cyBpbiBHZXJtYW5pdW0gUGhvdG9kZXRlY3RvcnMiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI0L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ZhdGlndWUgRWZmZWN0cyBpbiBHZXJtYW5pdW0gUGhvdG9kZXRlY3RvcnM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjQvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtGYXRpZ3VlIEVmZmVjdHMgaW4gR2VybWFuaXVtIFBob3RvZGV0ZWN0b3JzPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5GYXRpZ3VlIGVmZmVjdHMgaW4gZ2VybWFuaXVtIHBob3RvZGV0ZWN0b3JzIHdlcmUgb2JzZXJ2ZWQgYW5kIHN0dWRpZXMgY2FycmllZCBvdXQgdG8gZGV0ZXJtaW5lIHRoZSBtYWluIGNvbXBvbmVudHMgb2YgdGhlc2UgZWZmZWN0cy4gSXJyYWRpYW5jZSBsZXZlbCwgc3BlY3RyYWwgZGlzdHJpYnV0aW9uIG9mIHRoZSBpbmNpZGVudCByYWRpYXRpb24gYW5kIGlycmFkaWF0ZWQgc3VyZmFjZSBvbiB0aGUgZGV0ZWN0b3IgYWxsIHBsYXkgYW4gaW1wb3J0YW50IHBhcnQgaW4gdGhlIGV4aXN0ZW5jZSBhbmQgbWFnbml0dWRlIG9mIGZhdGlndWUgZWZmZWN0cy4gVGhlIHRpbWUgbmVlZGVkIHRvIHJlY292ZXIgdGhlIGluaXRpYWwgY2hhcmFjdGVyaXN0aWNzIHdhcyBhbHNvIHN0dWRpZWQuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNCI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI0PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zNTU8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjUiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlBdXRvbWF0ZWQgQWJzb2x1dGUgYW5kIFJlbGF0aXZlIFNwZWN0cmFsIExpbmVhcml0eSBNZWFzdXJlbWVudHMgb24gUGhvdG92b2x0YWljIERldGVjdG9yczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTCBQIEJvaXZpbjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJBdXRvbWF0ZWQgQWJzb2x1dGUgYW5kIFJlbGF0aXZlIFNwZWN0cmFsIExpbmVhcml0eSBNZWFzdXJlbWVudHMgb24gUGhvdG92b2x0YWljIERldGVjdG9ycyIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkF1dG9tYXRlZCBBYnNvbHV0ZSBhbmQgUmVsYXRpdmUgU3BlY3RyYWwgTGluZWFyaXR5IE1lYXN1cmVtZW50cyBvbiBQaG90b3ZvbHRhaWMgRGV0ZWN0b3JzIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBdXRvbWF0ZWQgQWJzb2x1dGUgYW5kIFJlbGF0aXZlIFNwZWN0cmFsIExpbmVhcml0eSBNZWFzdXJlbWVudHMgb24gUGhvdG92b2x0YWljIERldGVjdG9yczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0F1dG9tYXRlZCBBYnNvbHV0ZSBhbmQgUmVsYXRpdmUgU3BlY3RyYWwgTGluZWFyaXR5IE1lYXN1cmVtZW50cyBvbiBQaG90b3ZvbHRhaWMgRGV0ZWN0b3JzPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgcGFwZXIgZGlzY3Vzc2VzIGF1dG9tYXRlZCBzcGVjdHJhbCBsaW5lYXJpdHkgbWVhc3VyZW1lbnRzIHVzaW5nIGJvdGggYWJzb2x1dGUgYW5kIHJlbGF0aXZlIG1ldGhvZHMuIFJlc3VsdHMgb2YgbWVhc3VyZW1lbnRzIG9uIHR5cGljYWwgc2lsaWNvbiBhbmQgZ2VybWFuaXVtIHBob3RvZGlvZGVzIGFyZSBwcmVzZW50ZWQuIFRoZXNlIG1lYXN1cmVtZW50cyBzaG93IHRoZSBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUgdHdvIG1ldGhvZHMuIFRoZXkgYWxzbyBpbGx1c3RyYXRlIHNvbWUgaW50ZXJlc3RpbmcgbGluZWFyaXR5IHByb3BlcnRpZXM6IHdhdmVsZW5ndGggZGVwZW5kZW5jZSwgZGV0ZWN0b3ItdG8tZGV0ZWN0b3IgdmFyaWF0aW9uLCBjdXJyZW50IHZlcnN1cyBjdXJyZW50LWRlbnNpdHkgZGVwZW5kZW5jZSwgZ2VvbWV0cmljYWwgZWZmZWN0cywgYW5kIGVmZmVjdCBvZiByZXZlcnNlIGJpYXMuIEluIHBhcnRpY3VsYXIsIGl0IGlzIHNob3duIHRoYXQgc29tZSBzaWxpY29uIGFuZCBnZXJtYW5pdW0gZGV0ZWN0b3JzIG11c3QgYmUgdW5kZXJmaWxsZWQgd2l0aCByYWRpYXRpb24gdG8gYXZvaWQgZWRnZSBlZmZlY3RzLiBUaGVzZSBjYXVzZSBub25saW5lYXJpdGllcyB3aGljaCBhcmUgZ2VuZXJhbGx5IHNtYWxsICgxJSBsZXZlbCkgYnV0LCBpbiBjZXJ0YWluIHR5cGVzIG9mIHRoZXJtb2VsZWN0cmljYWxseSBjb29sZWQgZ2VybWFuaXVtIGRldGVjdG9ycywgY2FuIGJlIHZlcnkgbGFyZ2UgKDglIHRvIDEwJSkuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI1PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zNjE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjYiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlVbmlmb3JtaXR5IG9mIFF1YW50dW0gRWZmaWNpZW5jeSBvZiBTaW5nbGUgYW5kIFRyYXAtY29uZmlndXJlZCBTaWxpY29uIFBob3RvZGlvZGVzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBNIEcgV2hpdGU8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBBIEJpdHRhcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJVbmlmb3JtaXR5IG9mIFF1YW50dW0gRWZmaWNpZW5jeSBvZiBTaW5nbGUgYW5kIFRyYXAtY29uZmlndXJlZCBTaWxpY29uIFBob3RvZGlvZGVzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iVW5pZm9ybWl0eSBvZiBRdWFudHVtIEVmZmljaWVuY3kgb2YgU2luZ2xlIGFuZCBUcmFwLWNvbmZpZ3VyZWQgU2lsaWNvbiBQaG90b2Rpb2RlcyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjYvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7VW5pZm9ybWl0eSBvZiBRdWFudHVtIEVmZmljaWVuY3kgb2YgU2luZ2xlIGFuZCBUcmFwLWNvbmZpZ3VyZWQgU2lsaWNvbiBQaG90b2Rpb2Rlczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1VuaWZvcm1pdHkgb2YgUXVhbnR1bSBFZmZpY2llbmN5IG9mIFNpbmdsZSBhbmQgVHJhcC1jb25maWd1cmVkIFNpbGljb24gUGhvdG9kaW9kZXM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPldlIGhhdmUgY2FycmllZCBvdXQgaGlnaCByZXNvbHV0aW9uIHNwYXRpYWwgbWVhc3VyZW1lbnRzIG9mIHRoZSBzdXJmYWNlIHJlZmxlY3RhbmNlIGFuZCByZXNwb25zaXZpdHkgb2Ygc2luZ2xlIGFuZCB0cmFwLWNvbmZpZ3VyZWQgc2lsaWNvbiBwaG90b2Rpb2RlcyBhdCBsYXNlciB3YXZlbGVuZ3RocyBiZXR3ZWVuIDMyNSBubSBhbmQgNzgwIG5tLiBUaGUgcmVzdWx0cyBpbmRpY2F0ZSB0aGF0IHRoZSBzcGF0aWFsIG5vbnVuaWZvcm1pdHkgb2YgcXVhbnR1bSBlZmZpY2llbmN5IGZvciBhIGdpdmVuIHBob3RvZGlvZGUgdmFyaWVzIHdpdGggbGFzZXIgd2F2ZWxlbmd0aCBhbmQgaW50ZXJuYWwgc3RydWN0dXJlLiBGb3IgcmFkaW9tZXRyaWMgcXVhbGl0eSBkaW9kZXMgdGhpcyBub251bmlmb3JtaXR5IG9mIHJlc3BvbnNlIGxlYWRzIHRvIHVuY2VydGFpbnRpZXMgaW4gZGV0ZWN0b3IgbWVhc3VyZW1lbnRzIHdoaWNoIGNhbiBiZSByZWR1Y2VkIHRvIDAsMDMlIG9yIGJldHRlci48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI2Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjY8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjM2NTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNyIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUNoYXJhY3Rlcml6YXRpb24gb2YgVHdvIEJvbG9tZXRyaWMgQWJzb2x1dGUgUmFkaW9tZXRlcnM8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEogRiBDbGFyZTwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDaGFyYWN0ZXJpemF0aW9uIG9mIFR3byBCb2xvbWV0cmljIEFic29sdXRlIFJhZGlvbWV0ZXJzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iQ2hhcmFjdGVyaXphdGlvbiBvZiBUd28gQm9sb21ldHJpYyBBYnNvbHV0ZSBSYWRpb21ldGVycyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjcvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7Q2hhcmFjdGVyaXphdGlvbiBvZiBUd28gQm9sb21ldHJpYyBBYnNvbHV0ZSBSYWRpb21ldGVyczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNy9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NoYXJhY3Rlcml6YXRpb24gb2YgVHdvIEJvbG9tZXRyaWMgQWJzb2x1dGUgUmFkaW9tZXRlcnM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlByb2dyZXNzIGluIGNoYXJhY3Rlcml6aW5nIHR3byBib2xvbWV0cmljIGFic29sdXRlIHJhZGlvbWV0ZXJzIGlzIGRlc2NyaWJlZC4gU3BhdGlhbCB2YXJpYXRpb24gaW4gcmVzcG9uc2l2aXR5IG92ZXIgdGhlIHJlY2VpdmVycyBpcyBsZXNzIHRoYW4gMCwyJSwgdmFyaWF0aW9uIGluIHJlc3BvbnNpdml0eSBiZXR3ZWVuIHRoZSBmb3VyIGJvbG9tZXRlcnMgaXMgbGVzcyB0aGFuIDAsMyUgYW5kIHRoZWlyIHJlc3BvbnNlIHJlbGF0aXZlIHRvIGEgcGhvdG9kaW9kZSB3YXMgbGluZWFyIHRvIHdpdGhpbiBleHBlcmltZW50YWwgdW5jZXJ0YWludHkuIE9ic2VydmF0aW9ucyBvZiBub2lzZSBpbiB0aGUgcmFkaW9tZXRlciBoZWF0aW5nIHBvd2VyIGFyZSByZXBvcnRlZCBhbmQgZGlzY3Vzc2VkLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjciPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyNzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzY3PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI4IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQWJzb2x1dGUgTWVhc3VyZW1lbnQgb2YgUXVhbnR1bSBFZmZpY2llbmN5IEJhc2VkIG9uIFBhcmFtZXRyaWMgRG93bi1jb252ZXJzaW9uIEVmZmVjdDwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gViBNIEdpbnpidXJnPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTiBHIEtlcmF0aXNodmlsaTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFllIEwgS29yemhlbmV2aWNoPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRyBWIEx1bmV2PC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQSBOIFBlbmluPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkFic29sdXRlIE1lYXN1cmVtZW50IG9mIFF1YW50dW0gRWZmaWNpZW5jeSBCYXNlZCBvbiBQYXJhbWV0cmljIERvd24tY29udmVyc2lvbiBFZmZlY3QiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJBYnNvbHV0ZSBNZWFzdXJlbWVudCBvZiBRdWFudHVtIEVmZmljaWVuY3kgQmFzZWQgb24gUGFyYW1ldHJpYyBEb3duLWNvbnZlcnNpb24gRWZmZWN0IglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyOC9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBYnNvbHV0ZSBNZWFzdXJlbWVudCBvZiBRdWFudHVtIEVmZmljaWVuY3kgQmFzZWQgb24gUGFyYW1ldHJpYyBEb3duLWNvbnZlcnNpb24gRWZmZWN0PC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI4L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QWJzb2x1dGUgTWVhc3VyZW1lbnQgb2YgUXVhbnR1bSBFZmZpY2llbmN5IEJhc2VkIG9uIFBhcmFtZXRyaWMgRG93bi1jb252ZXJzaW9uIEVmZmVjdDwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+QSBuZXcgcmFkaW9tZXRyaWMgbWV0aG9kIHdoaWNoIGVtcGxveXMgcXVhbnR1bSBwcm9wZXJ0aWVzIG9mIHJhZGlhdGlvbiBhbmQgZG9lcyBub3QgcmVxdWlyZSB0aGUgdXNlIG9mIHN0YW5kYXJkIHJhZGlhdGlvbiBzb3VyY2VzIGFuZCByZWNlaXZlcnMgaGFzIGJlZW4gc3VnZ2VzdGVkLiBUaGlzIG1ldGhvZCB1c2VzIHRoZSBwcm9jZXNzIG9mIHRocmVlLXBob3RvbiBkb3duIGNvbnZlcnNpb24gaW4gbm9uLWNlbnRyYWwtc3ltbWV0cmljYWwgbWVkaWEgdG8gbWVhc3VyZSB0aGUgcXVhbnR1bSBlZmZpY2llbmN5IG9mIHBob3RvZGV0ZWN0b3JzLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjgiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyODwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzY5PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI5IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJTG93IFRlbXBlcmF0dXJlIEJsYWNrIEJvZHkgZm9yIFRlbXBlcmF0dXJlcyBmcm9tIDgwIEsgdG8gMzAwIEs8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFMgUCBNb3Jvem92YTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEIgRSBMaXNpYW5za3k8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBQIEEgTW9yb3pvdjwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFYgSSBTYXByaXRza3k8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iTG93IFRlbXBlcmF0dXJlIEJsYWNrIEJvZHkgZm9yIFRlbXBlcmF0dXJlcyBmcm9tIDgwIEsgdG8gMzAwIEsiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJMb3cgVGVtcGVyYXR1cmUgQmxhY2sgQm9keSBmb3IgVGVtcGVyYXR1cmVzIGZyb20gODAgSyB0byAzMDAgSyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjkvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7TG93IFRlbXBlcmF0dXJlIEJsYWNrIEJvZHkgZm9yIFRlbXBlcmF0dXJlcyBmcm9tIDgwIEsgdG8gMzAwIEs8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMjkvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtMb3cgVGVtcGVyYXR1cmUgQmxhY2sgQm9keSBmb3IgVGVtcGVyYXR1cmVzIGZyb20gODAgSyB0byAzMDAgSzwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+QSBuYXRpb25hbCBzdGFuZGFyZCBvZiBsb3cgYmFja2dyb3VuZCBpcnJhZGlhbmNlIGZyb20gMSBXL208c3VwPjI8L3N1cD4gdG8gMTA8c3VwPi0zPC9zdXA+IFcvbTxzdXA+Mjwvc3VwPiBoYXMgYmVlbiBjcmVhdGVkIGF0IHRoZSBSZXNlYXJjaCBJbnN0aXR1dGUgZm9yIE9wdG9waHlzaWNhbCBNZWFzdXJlbWVudHMgKFZOSUlPRkksIE1vc2NvdykuIFRoZSBzdGFuZGFyZCBpcyBiYXNlZCBvbiBhIGNyeW9nZW5pYyByYWRpb21ldGVyIGFuZCBhIGxvdyB0ZW1wZXJhdHVyZSBibGFjayBib2R5IChMVEJCKSB2YXJpYWJsZSBpbiB0ZW1wZXJhdHVyZSBmcm9tIDgwIEsgdG8gMzAwIEsuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAyOSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDI5PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zNzE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzAiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlHZXR0aW5nIEludGVuc2Ugb24gSW50ZW5zaXR5PC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIE0gUGFsbWVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkdldHRpbmcgSW50ZW5zZSBvbiBJbnRlbnNpdHkiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJHZXR0aW5nIEludGVuc2Ugb24gSW50ZW5zaXR5IglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMC9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtHZXR0aW5nIEludGVuc2Ugb24gSW50ZW5zaXR5PC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMwL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7R2V0dGluZyBJbnRlbnNlIG9uIEludGVuc2l0eTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIGN1cnJlbnQgbWlzdXNlIG9mIHRoZSB0ZXJtIDxpPmludGVuc2l0eTwvaT4gaW4gcGh5c2ljcyBhbmQgb3B0aWNzIGlzIGRlcGxvcmVkLiBNZWFucyBvZiByZW1lZHlpbmcgdGhlIHNpdHVhdGlvbiBhcmUgc3VnZ2VzdGVkLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzAiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMDwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzczPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMxIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJUmVjb21tZW5kYXRpb25zIGZvciBGdXR1cmUgV29yayBpbiBBaXIgVVYgU3BlY3RyYWwgUmFkaW9tZXRyeTogUmVzdWx0cyBvZiBhIFJlcG9ydCB0byB0aGUgQ0NQUjwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRSBUZWdlbGVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlJlY29tbWVuZGF0aW9ucyBmb3IgRnV0dXJlIFdvcmsgaW4gQWlyIFVWIFNwZWN0cmFsIFJhZGlvbWV0cnk6IFJlc3VsdHMgb2YgYSBSZXBvcnQgdG8gdGhlIENDUFIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJSZWNvbW1lbmRhdGlvbnMgZm9yIEZ1dHVyZSBXb3JrIGluIEFpciBVViBTcGVjdHJhbCBSYWRpb21ldHJ5OiBSZXN1bHRzIG9mIGEgUmVwb3J0IHRvIHRoZSBDQ1BSIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtSZWNvbW1lbmRhdGlvbnMgZm9yIEZ1dHVyZSBXb3JrIGluIEFpciBVViBTcGVjdHJhbCBSYWRpb21ldHJ5OiBSZXN1bHRzIG9mIGEgUmVwb3J0IHRvIHRoZSBDQ1BSPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMxL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7UmVjb21tZW5kYXRpb25zIGZvciBGdXR1cmUgV29yayBpbiBBaXIgVVYgU3BlY3RyYWwgUmFkaW9tZXRyeTogUmVzdWx0cyBvZiBhIFJlcG9ydCB0byB0aGUgQ0NQUjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIFdvcmtpbmcgR3JvdXAgb24gQWlyIFVWIFJhZGlvbWV0cnkgb2YgdGhlIENvbWl0w6kgQ29uc3VsdGF0aWYgZGUgUGhvdG9tw6l0cmllIGV0IFJhZGlvbcOpdHJpZSBoYXMgYW5hbHlzZWQgdGhlIHByZXNlbnQgc3RhdGUgb2Ygc3BlY3RyYWwgcmFkaW9tZXRyeSBpbiB0aGUgYWlyIHVsdHJhdmlvbGV0LiBUaGUgcmVjb21tZW5kYXRpb25zIGZvciBmdXR1cmUgd29yayBnaXZlbiBieSB0aGUgd29ya2luZyBncm91cCBiYXNlZCBvbiB0aGlzIGFuYWx5c2lzIGFyZSBwcmVzZW50ZWQuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMxPC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zNzU8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzIiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlQcmVsaW1pbmFyeSBSZXN1bHRzIGZyb20gdGhlIFNPVkEgRXhwZXJpbWVudCBvbiBCb2FyZCB0aGUgRXVyb3BlYW4gUmV0cmlldmFibGUgQ2FycmllciAoRVVSRUNBKTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRCBDcm9tbWVseW5jazwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFYgRG9taW5nbzwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEEgRmljaG90PC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQyBGcsO2aGxpY2g8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBCIFBlbmVsbGU8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIFJvbWVybzwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IENoIFdlaHJsaTwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJQcmVsaW1pbmFyeSBSZXN1bHRzIGZyb20gdGhlIFNPVkEgRXhwZXJpbWVudCBvbiBCb2FyZCB0aGUgRXVyb3BlYW4gUmV0cmlldmFibGUgQ2FycmllciAoRVVSRUNBKSIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IlByZWxpbWluYXJ5IFJlc3VsdHMgZnJvbSB0aGUgU09WQSBFeHBlcmltZW50IG9uIEJvYXJkIHRoZSBFdXJvcGVhbiBSZXRyaWV2YWJsZSBDYXJyaWVyIChFVVJFQ0EpIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMi9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtQcmVsaW1pbmFyeSBSZXN1bHRzIGZyb20gdGhlIFNPVkEgRXhwZXJpbWVudCBvbiBCb2FyZCB0aGUgRXVyb3BlYW4gUmV0cmlldmFibGUgQ2FycmllciAoRVVSRUNBKTwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1ByZWxpbWluYXJ5IFJlc3VsdHMgZnJvbSB0aGUgU09WQSBFeHBlcmltZW50IG9uIEJvYXJkIHRoZSBFdXJvcGVhbiBSZXRyaWV2YWJsZSBDYXJyaWVyIChFVVJFQ0EpPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgZXhwZXJpbWVudCBTT1ZBIChTT2xhciBWQXJpYWJpbGl0eSkgb24gYm9hcmQgRVVSRUNBIChFVXJvcGVhbiBSRXRyaWV2YWJsZSBDQXJyaWVyKSBjb250YWlucyB0d28gdHlwZXMgb2YgcmFkaW9tZXRlcnMgc3VucGhvdG9tZXRlcnMgZm9yIG1lYXN1cmluZyB0aGUgdG90YWwgYW5kIHNwZWN0cmFsIGlycmFkaWFuY2UgYXQgZml2ZSB3YXZlbGVuZ3RocyBiZXR3ZWVuIDMzNSBubSBhbmQgODYyIG5tLiBCZXNpZGVzIHRoZSBkaXJlY3Qgb2JzZXJ2YXRpb24gb2YgdmFyaWF0aW9ucyBvZiB0aGUgc29sYXIgaXJyYWRpYW5jZSwgdGhlc2UgbWVhc3VyZW1lbnRzIHdpbGwgYWxzbyBiZSB1c2VkIGZvciB0aGUgb2JzZXJ2YXRpb24gb2Ygc29sYXIgb3NjaWxsYXRpb25zLiBQcmVsaW1pbmFyeSByZXN1bHRzIGFyZSBwcmVzZW50ZWQgZnJvbSB0aGUgb2JzZXJ2YXRpb25zIG9mIHRvdGFsIGFuZCBzcGVjdHJhbCBpcnJhZGlhbmNlIGR1cmluZyB0aGUgZmlyc3QgZml2ZSBtb250aHMgb2YgdGhlIG1pc3Npb24gKEF1Z3VzdCB0byBEZWNlbWJlciAxOTkyKS48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMyIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzI8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjM4MTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMyIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUhvbGxvdyBDYXRob2RlIFRyYW5zZmVyIFN0YW5kYXJkcyBmb3IgdGhlIFJhZGlvbWV0cmljIENhbGlicmF0aW9uIG9mIFZVViBUZWxlc2NvcGVzIG9mIHRoZSBTb2xhciBhbmQgSGVsaW9zcGhlcmljIE9ic2VydmF0b3J5IChTT0hPKTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBIb2xsYW5kdDwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE0gQyBFIEh1YmVyPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTSBLw7xobmU8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iSG9sbG93IENhdGhvZGUgVHJhbnNmZXIgU3RhbmRhcmRzIGZvciB0aGUgUmFkaW9tZXRyaWMgQ2FsaWJyYXRpb24gb2YgVlVWIFRlbGVzY29wZXMgb2YgdGhlIFNvbGFyIGFuZCBIZWxpb3NwaGVyaWMgT2JzZXJ2YXRvcnkgKFNPSE8pIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iSG9sbG93IENhdGhvZGUgVHJhbnNmZXIgU3RhbmRhcmRzIGZvciB0aGUgUmFkaW9tZXRyaWMgQ2FsaWJyYXRpb24gb2YgVlVWIFRlbGVzY29wZXMgb2YgdGhlIFNvbGFyIGFuZCBIZWxpb3NwaGVyaWMgT2JzZXJ2YXRvcnkgKFNPSE8pIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzMy9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtIb2xsb3cgQ2F0aG9kZSBUcmFuc2ZlciBTdGFuZGFyZHMgZm9yIHRoZSBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiBWVVYgVGVsZXNjb3BlcyBvZiB0aGUgU29sYXIgYW5kIEhlbGlvc3BoZXJpYyBPYnNlcnZhdG9yeSAoU09ITyk8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzMvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtIb2xsb3cgQ2F0aG9kZSBUcmFuc2ZlciBTdGFuZGFyZHMgZm9yIHRoZSBSYWRpb21ldHJpYyBDYWxpYnJhdGlvbiBvZiBWVVYgVGVsZXNjb3BlcyBvZiB0aGUgU29sYXIgYW5kIEhlbGlvc3BoZXJpYyBPYnNlcnZhdG9yeSAoU09ITyk8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPk9uIGJvYXJkIHRoZSBFU0EvTkFTQSBzcGFjZSBtaXNzaW9uIFNPSE8gKFNvbGFyIGFuZCBIZWxpb3NwaGVyaWMgT2JzZXJ2YXRvcnkpIHRoZXJlIHdpbGwgYmUgc2V2ZXJhbCBWVVYgdGVsZXNjb3BlL3NwZWN0cm9tZXRlciBzeXN0ZW1zIHRvIG9ic2VydmUgdGhlIHNvbGFyIGRpc2sgYW5kIGl0cyBjb3JvbmEgaW4gdGhlIHdhdmVsZW5ndGggcmFuZ2UgMTUgbm0gdG8gMTYwIG5tLiBUbyBkZXRlcm1pbmUgdGhlIGFic29sdXRlIHNwZWN0cmFsIHNlbnNpdGl2aXR5IG9mIHRoZXNlIGluc3RydW1lbnRzIHByaW9yIHRvIGxhdW5jaGluZywgdHJhbnNmZXIgc291cmNlIHN0YW5kYXJkcyBoYXZlIGJlZW4gZGV2ZWxvcGVkLiBUaGVzZSB0cmFuc2ZlciBzdGFuZGFyZHMgY29uc2lzdCBvZiBhIGhpZ2gtY3VycmVudCBob2xsb3cgY2F0aG9kZSBzb3VyY2UgY29tYmluZWQgd2l0aCBjb2xsaW1hdGluZyBvcHRpY3MuIE9uZSBzdGFuZGFyZCB1c2VzIGEgY29uY2F2ZSBtaXJyb3IgYXQgbm9ybWFsIGluY2lkZW5jZSBmb3IgdGhlIHdhdmVsZW5ndGggcmFuZ2UgNTAgbm0gdG8gMTYwIG5tIGFuZCB0aGUgb3RoZXIgc3RhbmRhcmQgdXNlcyBXb2x0ZXIgdHlwZSBJSSBncmF6aW5nIGluY2lkZW5jZSBvcHRpY3MgZm9yIHRoZSByYW5nZSAxNiBubSB0byA4MCBubS4gVGhlc2UgdHJhbnNmZXIgc291cmNlIHN0YW5kYXJkcyBhcmUgY2FsaWJyYXRlZCBhZ2FpbnN0IHRoZSBlbGVjdHJvbiBzdG9yYWdlIHJpbmcgQkVTU1kgYXMgYSBwcmltYXJ5IHJhZGlvbWV0cmljIHNvdXJjZSBzdGFuZGFyZC48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDMzIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzM8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjM4OTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNCIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUluLWZsaWdodCBFdmFsdWF0aW9ucyBvZiBUdW5nc3RlbiBDYWxpYnJhdGlvbiBMYW1wcyBVc2luZyBTaG9ydHdhdmUgVGhlcm1pc3RvciBCb2xvbWV0ZXJzIGFuZCBBY3RpdmUtY2F2aXR5IFJhZGlvbWV0ZXJzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBSIEIgTGVlIElJSTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEwgTSBBdmlzPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gTSBBIEdpYnNvbjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFMgVGhvbWFzPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUiBXaWxzb248L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iSW4tZmxpZ2h0IEV2YWx1YXRpb25zIG9mIFR1bmdzdGVuIENhbGlicmF0aW9uIExhbXBzIFVzaW5nIFNob3J0d2F2ZSBUaGVybWlzdG9yIEJvbG9tZXRlcnMgYW5kIEFjdGl2ZS1jYXZpdHkgUmFkaW9tZXRlcnMiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJJbi1mbGlnaHQgRXZhbHVhdGlvbnMgb2YgVHVuZ3N0ZW4gQ2FsaWJyYXRpb24gTGFtcHMgVXNpbmcgU2hvcnR3YXZlIFRoZXJtaXN0b3IgQm9sb21ldGVycyBhbmQgQWN0aXZlLWNhdml0eSBSYWRpb21ldGVycyIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzQvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7SW4tZmxpZ2h0IEV2YWx1YXRpb25zIG9mIFR1bmdzdGVuIENhbGlicmF0aW9uIExhbXBzIFVzaW5nIFNob3J0d2F2ZSBUaGVybWlzdG9yIEJvbG9tZXRlcnMgYW5kIEFjdGl2ZS1jYXZpdHkgUmFkaW9tZXRlcnM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzQvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtJbi1mbGlnaHQgRXZhbHVhdGlvbnMgb2YgVHVuZ3N0ZW4gQ2FsaWJyYXRpb24gTGFtcHMgVXNpbmcgU2hvcnR3YXZlIFRoZXJtaXN0b3IgQm9sb21ldGVycyBhbmQgQWN0aXZlLWNhdml0eSBSYWRpb21ldGVyczwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIHN0YWJpbGl0aWVzIG9mIHR5cGUgNzE1LCBULTEsIHR1bmdzdGVuIGNhbGlicmF0aW9uIGxhbXBzIHdlcmUgZXZhbHVhdGVkIGFib2FyZCB0aHJlZSBzcGFjZWNyYWZ0IHBsYXRmb3JtcyBkdXJpbmcgdGhlIHBlcmlvZCAxOTg0IHRvIDE5ODkuIEluIHRoZSAwLDIgzrxtIHRvICZsdDs1LDAgzrxtIGJyb2FkYmFuZCBzcGVjdHJhbCByZWdpb24sIHRoZSBlbWl0dGVkIHJhZGlhbnQgcG93ZXIgZnJvbSBlYWNoIGxhbXAgd2FzIG1lYXN1cmVkIHVzaW5nIHNob3J0d2F2ZSB0aGVybWlzdG9yIGJvbG9tZXRlcnMgYW5kIGFjdGl2ZS1jYXZpdHkgcmFkaW9tZXRlcnMuIFRoZSByYWRpYW50IHBvd2VyIHdhcyBmb3VuZCB0byBiZSBjb25zdGFudCB0byDCsTElLiBUaGUgcmVzcG9uc2VzIG9mIGZpbHRlciBhbmQgc2lsaWNvbiBwaG90b2Rpb2RlIG1vbml0b3Jpbmcgc3lzdGVtcyB1c2VkIHRvIGV2YWx1YXRlIHRoZSBsYW1wcyB3ZXJlIGZvdW5kIHRvIGRlZ3JhZGUgYXMgbXVjaCBhcyA2JSBkdXJpbmcgdGhlIGZpcnN0IHR3byB5ZWFycyBpbiBvcmJpdC48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM0Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzQ8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjM5NzwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCVVzaW5nIHRoZSA8aT5Wb3lhZ2VyPC9pPiBTcGFjZWNyYWZ0IGZvciBTb2xhciBFVVYgU3BlY3RyYWwgUmFkaW9tZXRyeTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUCBMIFNtaXRoPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQiBSIFNhbmRlbDwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEogQiBIb2xiZXJnPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlVzaW5nIHRoZSBWb3lhZ2VyIFNwYWNlY3JhZnQgZm9yIFNvbGFyIEVVViBTcGVjdHJhbCBSYWRpb21ldHJ5IiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iVXNpbmcgdGhlIFZveWFnZXIgU3BhY2VjcmFmdCBmb3IgU29sYXIgRVVWIFNwZWN0cmFsIFJhZGlvbWV0cnkiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM1L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1VzaW5nIHRoZSBWb3lhZ2VyIFNwYWNlY3JhZnQgZm9yIFNvbGFyIEVVViBTcGVjdHJhbCBSYWRpb21ldHJ5PC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM1L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7VXNpbmcgdGhlIFZveWFnZXIgU3BhY2VjcmFmdCBmb3IgU29sYXIgRVVWIFNwZWN0cmFsIFJhZGlvbWV0cnk8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSB1bHRyYXZpb2xldCBzcGVjdHJvbWV0ZXJzIG9uIHRoZSA8aT5Wb3lhZ2VyPC9pPiBzcGFjZWNyYWZ0IGFyZSByYWRpb21ldHJpY2FsbHkgc3RhYmxlIGFuZCBwcmVzZW50bHkgY2FwYWJsZSBvZiBtYWtpbmcgbG9uZy10ZXJtLCBwcmVjaXNlIG1lYXN1cmVtZW50cyBvZiB0aGUgc29sYXIgc3BlY3RyYWwgaXJyYWRpYW5jZSBiZXR3ZWVuIDUwIG5tIGFuZCAxNzAgbm0uIElmIHRoZSBkZXRlY3Rpb24gZWZmaWNpZW5jaWVzIG9mIHRoZXNlIHNwZWN0cm9tZXRlcnMgd2VyZSBjb25maXJtZWQgdGhyb3VnaCBhIGRlZGljYXRlZCBwcm9ncmFtIG9mIHVuZGVyZmxpZ2h0cywgYW5kIGlmIGEgY2FtcGFpZ24gb2YgcmVndWxhciA8aT5Wb3lhZ2VyPC9pPiBvYnNlcnZhdGlvbnMgb2YgdGhlIFN1biB3YXMgaW5zdGl0dXRlZCwgc29tZSBvZiB0aGUgbmVlZHMgZm9yIHRpbWVseSwgbG9uZy10ZXJtIHNvbGFyIEVVViBmbHV4IGRhdGEgY291bGQgYmUgZWZmaWNpZW50bHkgbWV0IGluIHRoaXMgZGVjYWRlPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNSI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM1PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj40MDM8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzYiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlOZXR3b3JrIGFuZCBUcmFjZWFiaWxpdHkgb2YgdGhlIFJhZGlvbWV0cmljIGFuZCBQaG90b21ldHJpYyBTdGFuZGFyZHMgYXQgdGhlIFBUQjwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSiBNZXR6ZG9yZjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJOZXR3b3JrIGFuZCBUcmFjZWFiaWxpdHkgb2YgdGhlIFJhZGlvbWV0cmljIGFuZCBQaG90b21ldHJpYyBTdGFuZGFyZHMgYXQgdGhlIFBUQiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49Ik5ldHdvcmsgYW5kIFRyYWNlYWJpbGl0eSBvZiB0aGUgUmFkaW9tZXRyaWMgYW5kIFBob3RvbWV0cmljIFN0YW5kYXJkcyBhdCB0aGUgUFRCIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNi9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtOZXR3b3JrIGFuZCBUcmFjZWFiaWxpdHkgb2YgdGhlIFJhZGlvbWV0cmljIGFuZCBQaG90b21ldHJpYyBTdGFuZGFyZHMgYXQgdGhlIFBUQjwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNi9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO05ldHdvcmsgYW5kIFRyYWNlYWJpbGl0eSBvZiB0aGUgUmFkaW9tZXRyaWMgYW5kIFBob3RvbWV0cmljIFN0YW5kYXJkcyBhdCB0aGUgUFRCPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgc3lzdGVtIG9mIHJhZGlvbWV0cmljIGFuZCBwaG90b21ldHJpYyBzdGFuZGFyZHMgYXQgdGhlIFBUQiBpcyBwcmVzZW50ZWQsIGVtcGhhc2l6aW5nIHRyYWNlYWJpbGl0eSwgY3Jvc3MtbGlua2luZywgYW5kIGZ1dHVyZSBkZXZlbG9wbWVudHMuIFRyYWNlYWJpbGl0eSBmcm9tIHRoZSBuYXRpb25hbCBzdGFuZGFyZHMgdG8gdGhlIHJlc3BlY3RpdmUgcmVmZXJlbmNlIHN0YW5kYXJkcyBvZiBjYWxpYnJhdGlvbiBsYWJvcmF0b3JpZXMgb2YgdGhlIEdlcm1hbiBDYWxpYnJhdGlvbiBTZXJ2aWNlIChES0QpIGlzIGFsc28gaW5jbHVkZWQuIFRoZSBmdXR1cmUgcmVhbGl6YXRpb24gb2YgdGhlIGRldGVjdG9yLWJhc2VkIHNwZWN0cmFsIGlycmFkaWFuY2Ugc2NhbGUgcmVzdWx0aW5nIGluIGEgcmVkdWNlZCB1bmNlcnRhaW50eSBpcyBkZXNjcmliZWQuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNiI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM2PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj40MDk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzciIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlBdG1vc3BoZXJpYyBPcHRpY2FsIENhbGlicmF0aW9uIFN5c3RlbSBmb3IgT3V0ZG9vciBUZXN0aW5nIG9mIFBob3Rvdm9sdGFpYyBEZXZpY2VzPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBUIFcgQ2Fubm9uPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUiBMIEh1bHN0cm9tPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IkF0bW9zcGhlcmljIE9wdGljYWwgQ2FsaWJyYXRpb24gU3lzdGVtIGZvciBPdXRkb29yIFRlc3Rpbmcgb2YgUGhvdG92b2x0YWljIERldmljZXMiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJBdG1vc3BoZXJpYyBPcHRpY2FsIENhbGlicmF0aW9uIFN5c3RlbSBmb3IgT3V0ZG9vciBUZXN0aW5nIG9mIFBob3Rvdm9sdGFpYyBEZXZpY2VzIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNy9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtBdG1vc3BoZXJpYyBPcHRpY2FsIENhbGlicmF0aW9uIFN5c3RlbSBmb3IgT3V0ZG9vciBUZXN0aW5nIG9mIFBob3Rvdm9sdGFpYyBEZXZpY2VzPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM3L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7QXRtb3NwaGVyaWMgT3B0aWNhbCBDYWxpYnJhdGlvbiBTeXN0ZW0gZm9yIE91dGRvb3IgVGVzdGluZyBvZiBQaG90b3ZvbHRhaWMgRGV2aWNlczwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIEF0bW9zcGhlcmljIE9wdGljYWwgQ2FsaWJyYXRpb24gU3lzdGVtIChBT0NTKSB3YXMgZGV2ZWxvcGVkIGF0IHRoZSBOYXRpb25hbCBSZW5ld2FibGUgRW5lcmd5IExhYm9yYXRvcnkgZm9yIG1ha2luZyByZWFsLXRpbWUsIHRlcnJlc3RyaWFsbHkgYmFzZWQgbWVhc3VyZW1lbnRzIG9mIHNlbGVjdGVkIG9wdGljYWwgcHJvcGVydGllcyBvZiB0aGUgYXRtb3NwaGVyZS4gVGhlIG9yaWdpbmFsIGFwcGxpY2F0aW9uIG9mIHRoZSBBT0NTIHdhcyB0byBwcm92aWRlIG1lYXN1cmVtZW50cyBvZiBhdG1vc3BoZXJpYyBvcHRpY2FsIGNvbmRpdGlvbnMgcGVydGluZW50IHRvIG91dGRvb3IgcGhvdG92b2x0YWljIChQVikgZGV2aWNlIHBlcmZvcm1hbmNlIG1lYXN1cmVtZW50cy4gSXQgYWRkcmVzc2VzIHRoZSBkZXBlbmRlbmNlIG9mIG91dGRvb3IgUFYgdGVzdCByZXN1bHRzIG9uIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIGluY2lkZW50IHNvbGFyIHJhZGlhdGlvbiB0aGF0IGFyZSBkZXBlbmRlbnQgb24gdGhlc2UgY29uc3RhbnRseSBjaGFuZ2luZyBhdG1vc3BoZXJpYyBvcHRpY2FsIGNvbmRpdGlvbnMuIFRoaXMgcGFwZXIgZGVzY3JpYmVzIHRoZSBBT0NTLCBpdHMgY2FsaWJyYXRpb24gYW5kIGl0cyBhcHBsaWNhdGlvbiB0byBQViB0ZXN0aW5nLiBBZGRpdGlvbmFsIGFwcGxpY2F0aW9ucyByZWxhdGVkIHRvIHRoZSBtZWFzdXJlbWVudCBvZiBhdG1vc3BoZXJpYyBvcHRpY2FsIHByb3BlcnRpZXMgYXJlIGFsc28gbWVudGlvbmVkLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzciPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzNzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+NDE5PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM4IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJUGFydGlhbCBDb2hlcmVuY2UgYW5kIFByYWN0aWNhbCBSYWRpb21ldHJ5PC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIEwgR2FyZG5lcjwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJQYXJ0aWFsIENvaGVyZW5jZSBhbmQgUHJhY3RpY2FsIFJhZGlvbWV0cnkiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJQYXJ0aWFsIENvaGVyZW5jZSBhbmQgUHJhY3RpY2FsIFJhZGlvbWV0cnkiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM4L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1BhcnRpYWwgQ29oZXJlbmNlIGFuZCBQcmFjdGljYWwgUmFkaW9tZXRyeTwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzOC9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1BhcnRpYWwgQ29oZXJlbmNlIGFuZCBQcmFjdGljYWwgUmFkaW9tZXRyeTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+QSByZXZpZXcgaXMgcHJlc2VudGVkIG9mIHJlY2VudCBjbGFpbXMgb24gdGhlIGVmZmVjdHMgb2YgcGFydGlhbCBjb2hlcmVuY2UgaW4gcmFkaW9tZXRyaWMgbWVhc3VyZW1lbnRzLCBwYXJ0aWN1bGFybHkgaW4gcmVsYXRpb24gdG8gc3BlY3RyYWwgaXJyYWRpYW5jZSBpbnRlcmNvbXBhcmlzb25zLiBJdCBpcyBzaG93biB0aGF0IGZvciBwcmFjdGljYWwgc291cmNlcyB0eXBpY2FsbHkgdXNlZCBpbiByYWRpb21ldHJpYyBsYWJvcmF0b3JpZXMsIGVmZmVjdHMgY2xhaW1lZCB0byBiZSBkdWUgdG8gcGFydGlhbCBjb2hlcmVuY2UgYXJlIGVxdWl2YWxlbnQgdG8gdGhvc2Ugb2YgZGlmZnJhY3Rpb24gYW5kIGludGVyZmVyZW5jZSBhc3NvY2lhdGVkIHdpdGggdGhlIHVzZSBvZiBleHRlbmRlZCBzb3VyY2VzLiBUaGUgcmVsYXRpdmUgaW1wb3J0YW5jZSBvZiB0aGVzZSBlZmZlY3RzIG1heSB0aGVuIGJlIGVzdGltYXRlZCB1c2luZyBleGlzdGluZyBsaXRlcmF0dXJlIG9uIGRpZmZyYWN0aW9uIGNvcnJlY3Rpb25zIGluIHJhZGlvbWV0cnkuIEVzdGltYXRlcyBvZiB0aGUgaW1wb3J0YW5jZSBvZiBjb2hlcmVuY2UgbWF5IGJlIG1hZGUgZnJvbSBjb21wYXJpc29uIG9mIGNvaGVyZW5jZSBkaW1lbnNpb25zIHdpdGggYXBlcnR1cmUgc2l6ZXM7IHdoZXJlIHNtYWxsIGFwZXJ0dXJlcyBhcmUgdXNlZCwgY29oZXJlbmNlIHRoZW9yeSBtYXkgYmUgcmVxdWlyZWQgdG8gc3VwZXJpbXBvc2UgY29ycmVsYXRlZCBmaWVsZHMuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzOCI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM4PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj40MjU8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzkiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlJbXByb3ZlZCBTcGVjdHJhbCBSZXNwb25zaXZpdHkgU2NhbGVzIGF0IHRoZSBOUEwsIDQwMCBubSB0byAyMCDOvG08L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEQgSCBOZXR0bGV0b248L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBUIFIgUHJpb3I8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBUIEggV2FyZDwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJJbXByb3ZlZCBTcGVjdHJhbCBSZXNwb25zaXZpdHkgU2NhbGVzIGF0IHRoZSBOUEwsIDQwMCBubSB0byAyMCDOvG0iIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJJbXByb3ZlZCBTcGVjdHJhbCBSZXNwb25zaXZpdHkgU2NhbGVzIGF0IHRoZSBOUEwsIDQwMCBubSB0byAyMCDOvG0iCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDM5L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ltcHJvdmVkIFNwZWN0cmFsIFJlc3BvbnNpdml0eSBTY2FsZXMgYXQgdGhlIE5QTCwgNDAwIG5tIHRvIDIwIM68bTwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzOS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0ltcHJvdmVkIFNwZWN0cmFsIFJlc3BvbnNpdml0eSBTY2FsZXMgYXQgdGhlIE5QTCwgNDAwIG5tIHRvIDIwIM68bTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VHdvIHNwZWN0cmFsIHJlc3BvbnNpdml0eSBzY2FsZXMgaGF2ZSBiZWVuIGVzdGFibGlzaGVkIGF0IHRoZSBOYXRpb25hbCBQaHlzaWNhbCBMYWJvcmF0b3J5LCBVSy4gSGlnaCBxdWFudHVtIGVmZmljaWVuY3kgc2lsaWNvbiBwaG90b2Rpb2RlcyBoYXZlIGJlZW4gdXNlZCB0byBlc3RhYmxpc2ggYSBjb250aW51b3VzIHNwZWN0cmFsIHJlc3BvbnNpdml0eSBzY2FsZSBmb3IgdGhlIHNwZWN0cmFsIHJlZ2lvbiA0MDAgbm0gdG8gOTIwIG5tLiBUaGUgc2NhbGUgY2FuIGJlIGRpc3NlbWluYXRlZCBieSB0aGUgTlBMIHdpdGggYW4gdW5jZXJ0YWludHkgb2YgwrEwLDElLiBQeXJvZWxlY3RyaWMgZGV0ZWN0b3JzIGZpdHRlZCB3aXRoIGEgcmVmbGVjdGluZyBoZW1pc3BoZXJpY2FsIGNhdml0eSBoYXZlIGJlZW4gdXNlZCB0byBlc3RhYmxpc2ggYSBzcGVjdHJhbCByZXNwb25zaXZpdHkgc2NhbGUgZm9yIHRoZSBzcGVjdHJhbCByZWdpb24gMSDOvG0gdG8gMjAgzrxtLiBUaGlzIHNjYWxlIGhhcyBhbiB1bmNlcnRhaW50eSBvZiBsZXNzIHRoYW4gwrExLDYlLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wMzkiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzAzOTwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+NDMzPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQwIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJU3RhbmRhcmQgb2YgU3BlY3VsYXIgUmVmbGVjdGFuY2UgYXQgR2xhbmNpbmcgSW5jaWRlbmNlIGZvciB0aGUgSW5mcmFyZWQgUmVnaW9uPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBEIEd1cHRhPC9zcGFuPjwvc3Bhbj4gYW5kIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUyBQIFZhcm1hPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDwhLS0gU3RhcnQgRm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8IS0tIEVuZCBmb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlN0YW5kYXJkIG9mIFNwZWN1bGFyIFJlZmxlY3RhbmNlIGF0IEdsYW5jaW5nIEluY2lkZW5jZSBmb3IgdGhlIEluZnJhcmVkIFJlZ2lvbiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IlN0YW5kYXJkIG9mIFNwZWN1bGFyIFJlZmxlY3RhbmNlIGF0IEdsYW5jaW5nIEluY2lkZW5jZSBmb3IgdGhlIEluZnJhcmVkIFJlZ2lvbiIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wNDAvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7U3RhbmRhcmQgb2YgU3BlY3VsYXIgUmVmbGVjdGFuY2UgYXQgR2xhbmNpbmcgSW5jaWRlbmNlIGZvciB0aGUgSW5mcmFyZWQgUmVnaW9uPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQwL3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7U3RhbmRhcmQgb2YgU3BlY3VsYXIgUmVmbGVjdGFuY2UgYXQgR2xhbmNpbmcgSW5jaWRlbmNlIGZvciB0aGUgSW5mcmFyZWQgUmVnaW9uPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5UaGUgcGVyZm9ybWFuY2Ugb2YgaGlnaCBwb3dlciBjYXJib24gZGlveGlkZSBhbmQgZnJlZSBlbGVjdHJvbiBsYXNlcnMgZGVwZW5kcyB1cG9uIHRoZSBxdWFsaXR5IG9mIG1pcnJvcnMgdXNlZCBpbiB0aGVtLiBBIHByZWNpc2UgY2hhcmFjdGVyaXphdGlvbiBvZiBtaXJyb3JzIGlzIHJlcXVpcmVkLCBhbmQgdGhpcyBpcyBhY2hpZXZlZCBieSBlbXBsb3lpbmcgcmVmZXJlbmNlIHN0YW5kYXJkcy4gU3RhbmRhcmRzIGZvciB0aGUgY2FsaWJyYXRpb24gb2YgcmVmbGVjdGFuY2Ugc2NhbGUgZm9yIHRoZSBpbmZyYXJlZCByZWdpb24gYXJlIG5vdCBhdmFpbGFibGUuIFRoZSBwcmVzZW50IHdvcmsgZGVzY3JpYmVzIHRoZSBkZXZlbG9wbWVudCBvZiBhIHNwZWN1bGFyIHJlZmxlY3RhbmNlIHN0YW5kYXJkIGF0IGdsYW5jaW5nIGFuZ2xlcyBvZiBpbmNpZGVuY2UgZnJvbSAxMMKwIHRvIDcwwrAgZm9yIHRoZSAyLDUgzrxtIHRvIDI1IM68bSBpbmZyYXJlZCByZWdpb24uIFdoZXJlYXMgYWx1bWluaXVtIGFuZCBnb2xkIG1pcnJvcnMgaGF2ZSBiZWVuIHVzZWQgYXMgaGlnaCByZWZsZWN0YW5jZSB2YWx1ZSBzdGFuZGFyZHMsIHNpbmdsZSBhbmQgZG91YmxlIHN1cmZhY2UgcG9saXNoZWQgc2lsaWNvbiBhbmQgZ2VybWFuaXVtIGhhdmUgYmVlbiBlbXBsb3llZCBhcyBzdGFuZGFyZHMgYXQgbG93IHJlZmxlY3RhbmNlIHZhbHVlcy48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQwIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wNDA8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjQzOTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzA0MSIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCVByZXNlbnQgU3RhdGUgb2YgdGhlIENvbXBhcmlzb24gYmV0d2VlbiBSYWRpb21ldHJpYyBTY2FsZXMgQmFzZWQgb24gVGhyZWUgUHJpbWFyeSBTdGFuZGFyZHM8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IE0gU3RvY2s8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBKIEZpc2NoZXI8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBSIEZyaWVkcmljaDwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEggSiBKdW5nPC9zcGFuPjwvc3Bhbj4sIDxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gUiBUaG9ybmFnZWw8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBHIFVsbTwvc3Bhbj48L3NwYW4+IGFuZCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEIgV2VuZGU8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPCEtLSBTdGFydCBGb2N1cyBpc3N1ZSB0aXRsZSAtLT4KCTwhLS0gRW5kIGZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iUHJlc2VudCBTdGF0ZSBvZiB0aGUgQ29tcGFyaXNvbiBiZXR3ZWVuIFJhZGlvbWV0cmljIFNjYWxlcyBCYXNlZCBvbiBUaHJlZSBQcmltYXJ5IFN0YW5kYXJkcyIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IlByZXNlbnQgU3RhdGUgb2YgdGhlIENvbXBhcmlzb24gYmV0d2VlbiBSYWRpb21ldHJpYyBTY2FsZXMgQmFzZWQgb24gVGhyZWUgUHJpbWFyeSBTdGFuZGFyZHMiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQxL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1ByZXNlbnQgU3RhdGUgb2YgdGhlIENvbXBhcmlzb24gYmV0d2VlbiBSYWRpb21ldHJpYyBTY2FsZXMgQmFzZWQgb24gVGhyZWUgUHJpbWFyeSBTdGFuZGFyZHM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wNDEvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtQcmVzZW50IFN0YXRlIG9mIHRoZSBDb21wYXJpc29uIGJldHdlZW4gUmFkaW9tZXRyaWMgU2NhbGVzIEJhc2VkIG9uIFRocmVlIFByaW1hcnkgU3RhbmRhcmRzPC9zcGFuPjwvYT4KCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyZXZlYWwtY29udGVudCI+CgkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgdmlldy10ZXh0LXNtYWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJhcnRpY2xlLXRleHQgd2Qtam5sLWFydC1hYnN0cmFjdCBjZiIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KCQkJCQkJCQk8cD5BdCB0aGUgUFRCIHJhZGlvbWV0cmljIHNjYWxlcyBhcmUgY29tcGFyZWQgd2hpY2ggYXJlIGJhc2VkIG9uIGVsZWN0cm9keW5hbWljcyAoZWxlY3Ryb24gc3RvcmFnZSByaW5nIEJFU1NZKSwgb24gdGhlcm1vZHluYW1pY3MgKGJsYWNrIGJvZHkgb2Yga25vd24gdGVtcGVyYXR1cmUgPGk+VDwvaT48c3ViPjkwPC9zdWI+IG9mIHRoZSBJbnRlcm5hdGlvbmFsIFRlbXBlcmF0dXJlIFNjYWxlKSBhbmQgb24gYSB0aGVybWFsIGRldGVjdG9yIGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIGVsZWN0cmljYWwgc3Vic3RpdHV0aW9uIHByaW5jaXBsZSAoY3J5b2dlbmljIHJhZGlvbWV0ZXIpLiBUaGUgdW5jZXJ0YWludHkgY29udHJpYnV0aW9ucyBvZiB0aGUgZGlmZmVyZW50IGlucHV0IHBhcmFtZXRlcnMgZm9yIGVzdGFibGlzaGluZyB0aGUgaW5kZXBlbmRlbnQgcmFkaW9tZXRyaWMgc2NhbGVzIGFyZSBhbmFseXNlZCBpbiBkZXRhaWwuIEFjY29yZGluZyB0byB0aGlzIGFuYWx5c2lzIHNwZWN0cmFsIHJhZGlhbnQgcG93ZXJzIGluIHRoZSB2aXNpYmxlIGFyZSByZWFsaXplZCBvciBleHBlY3RlZCB0byBiZSByZWFsaXplZCAoYmxhY2sgYm9keSkgd2l0aCB1bmNlcnRhaW50aWVzICgxIM+DIGxldmVsKSBvZiAwLDEwJSAoQkVTU1kpLCBvZiAwLDA3JSAoYmxhY2sgYm9keSwgzrsmZ3Q7NjUwIG5tKSBhbmQgb2YgMCwwMDclIChjcnlvZ2VuaWMgcmFkaW9tZXRlcikuIEZpbHRlciByYWRpb21ldGVycyBjYWxpYnJhdGVkIGF0IHRoZSB0aHJlZSBpbmRlcGVuZGVudCBwcmltYXJ5IHN0YW5kYXJkcyBhcmUgdXNlZCBhcyB0cmFuc2ZlciBpbnN0cnVtZW50cyBmb3IgdGhlIGNvbXBhcmlzb24uIFRoZSBtZWFzdXJlZCB2YWx1ZXMgb2YgdGhlIHJlc3BvbnNpdml0aWVzIG9mIHRoZSBmaWx0ZXIgcmFkaW9tZXRlcnMgYXJlIGVzdGltYXRlZCB0byBiZSB1bmNlcnRhaW4gYnkgMCwxMSUgKEJFU1NZKSwgMCwwOCUgKGJsYWNrIGJvZHksIM67Jmd0OzY1MCBubSksIGFuZCAwLDAzJSAoY3J5b2dlbmljIHJhZGlvbWV0ZXIpLiBQcmVsaW1pbmFyeSBleHBlcmltZW50YWwgcmVzdWx0cyBvZiB0aGUgY29tcGFyaXNvbiBiZXR3ZWVuIEJFU1NZIGFuZCB0aGUgY3J5b2dlbmljIHJhZGlvbWV0ZXIgYXJlIGluIGFncmVlbWVudCB3aXRoIHRoZSB1bmNlcnRhaW50eSBhbmFseXNpcy48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQxIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wNDE8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxoMyBjbGFzcz0iYmR0LTYgYmQtZ3JleS10aW50IG1iLTEiPkNPTkZFUkVOQ0UgTk9URTwvaDM+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+NDUxPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQyIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJQ29uZmVyZW5jZSBvbiBQcmVjaXNpb24gRWxlY3Ryb21hZ2V0aWMgTWVhc3VyZW1lbnRzLCBCb3VsZGVyLCBDb2xvcmFkbywgVVNBLCAyNyBKdW5l4oCTMSBKdWx5IDE5OTQ8L2E+CgkJCTwvZGl2PgoJCQk8IS0tIFN0YXJ0IEZvY3VzIGlzc3VlIHRpdGxlIC0tPgoJPCEtLSBFbmQgZm9jdXMgaXNzdWUgdGl0bGUgLS0+Cgk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDb25mZXJlbmNlIG9uIFByZWNpc2lvbiBFbGVjdHJvbWFnZXRpYyBNZWFzdXJlbWVudHMsIEJvdWxkZXIsIENvbG9yYWRvLCBVU0EsIDI3IEp1bmXigJMxIEp1bHkgMTk5NCIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49IkNvbmZlcmVuY2Ugb24gUHJlY2lzaW9uIEVsZWN0cm9tYWdldGljIE1lYXN1cmVtZW50cywgQm91bGRlciwgQ29sb3JhZG8sIFVTQSwgMjcgSnVuZeKAkzEgSnVseSAxOTk0IglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8zMC80LzA0Mi9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtDb25mZXJlbmNlIG9uIFByZWNpc2lvbiBFbGVjdHJvbWFnZXRpYyBNZWFzdXJlbWVudHMsIEJvdWxkZXIsIENvbG9yYWRvLCBVU0EsIDI3IEp1bmXigJMxIEp1bHkgMTk5NDwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIDE5OTQgQ29uZmVyZW5jZSBvbiBQcmVjaXNpb24gRWxlY3Ryb21hZ25ldGljIE1lYXN1cmVtZW50cyB3aWxsIGJlIGhlbGQgTW9uZGF5IDI3IEp1bmUgdG8gRnJpZGF5IDEgSnVseSAxOTk0IGluIEJvdWxkZXIsIENvbG9yYWRvLCBVU0EuIFRoZSBwdXJwb3NlIG9mIHRoZSBiaWVuZW5uaWFsIG1lZXRpbmdzIG9mIHRoZSBDUEVNIGlzIHRvIGV4Y2hhbmdlIGluZm9ybWF0aW9uIG9uIGEgd2lkZSByYW5nZSBvZiB0b3BpY3Mgb24gcHJlY2lzZSBlbGVjdHJvbWFnbmV0aWMgbWVhc3VyZW1lbnRzLiBUaGVzZSB0b3BpY3MgaW5jbHVkZTo8dWw+PGxpPjxwPkFkdmFuY2VkIGluc3RydW1lbnRhdGlvbiBpbmNsdWRpbmcgbmV3IHNlbnNvcnMgYW5kIG1lYXN1cmVtZW50IG1ldGhvZHM8L3A+PC9saT48bGk+PHA+QXV0b21hdGVkIG1lYXN1cmVtZW50IG1ldGhvZHM8L3A+PC9saT48bGk+PHA+RGllbGVjdHJpYyBhbmQgYW50ZW5uYSBtZWFzdXJlbWVudHM8L3A+PC9saT48bGk+PHA+RGlyZWN0IGN1cnJlbnQgYW5kIGxvdy1mcmVxdWVuY3kgbWVhc3VyZW1lbnRzPC9wPjwvbGk+PGxpPjxwPkZ1bmRhbWVudGFsIGNvbnN0YW50cyBhbmQgc3BlY2lhbCBzdGFuZGFyZHM8L3A+PC9saT48bGk+PHA+TGFzZXIsIG9wdGljYWwgZmlicmUgYW5kIG9wdGljYWwgZWxlY3Ryb25pYyBtZWFzdXJlbWVudHM8L3A+PC9saT48bGk+PHA+UkYsIG1pY3Jvd2F2ZSBhbmQgbWlsbGltZXRyZS13YXZlIG1lYXN1cmVtZW50czwvcD48L2xpPjxsaT48cD5TdXBlcmNvbmR1Y3RpbmcgYW5kIG90aGVyIGxvdy10ZW1wZXJhdHVyZSBtZWFzdXJlbWVudHM8L3A+PC9saT48bGk+PHA+VGltZSBhbmQgZnJlcXVlbmN5IG1lYXN1cmVtZW50czwvcD48L2xpPjwvdWw+PC9wPjxwPkNQRU0nOTQgd2lsbCBiZSBleHRlbmRlZCB0byBmaXZlIGRheXMgdG8gcHJvdmlkZSBmb3IgYWRkZWQgc3BlY2lhbCBzZXNzaW9ucyBvbiB0aGUgZnVuZGFtZW50YWwgcGh5c2ljYWwgY29uc3RhbnRzLiBUaGUgQ09EQVRBIFRhc2sgR3JvdXAgb24gRnVuZGFtZW50YWwgQ29uc3RhbnRzIHBsYW5zIHRvIGNhcnJ5IG91dCB0aGUgbmV4dCBsZWFzdC1zcXVhcmVzIGFkanVzdG1lbnQgb2YgdGhlIGZ1bmRhbWVudGFsIGNvbnN0YW50cyBpbiAxOTk1IHdpdGggYSBjdXRvZmYgZGF0ZSBmb3IgaW5wdXQgZGF0YSB0aGF0IGlzIHNob3J0bHkgYWZ0ZXIgQ1BFTSc5NC4gVGh1cywgQ1BFTSc5NCBwcm92aWRlcyBhIHBhcnRpY3VsYXJseSB0aW1lbHkgZm9ydW0gZm9yIGRpc2N1c3Npb24gb2YgcmVzdWx0cyBpbXBvcnRhbnQgdG8gdGhlIDE5OTUgYWRqdXN0bWVudC48L3A+PHA+VGhlIGNvbmZlcmVuY2UgbGFuZ3VhZ2Ugd2lsbCBiZSBFbmdsaXNoLiBBdXRob3JzIGFyZSByZXF1ZXN0ZWQgdG8gc3VibWl0IGFuIGFic3RyYWN0IGFuZCBzdW1tYXJ5IGJ5IDE4IEphbnVhcnkgMTk5NC4gSWYgdGhlIHBhcGVyIGlzIGFjY2VwdGVkLCB0aGUgYXV0aG9yIHdpbGwgYmUgbm90aWZpZWQgYW5kIGVuY291cmFnZWQgdG8gcHJlcGFyZSBhIGZ1bGwgcGFwZXIgZm9yICA8aT5JRUVFIFRyYW5zYWN0aW9ucyBvbiBJbnN0cnVtZW50YXRpb24gYW5kIE1lYXN1cmVtZW50PC9pPi48L3A+PHA+PGI+Q29uZmVyZW5jZSBDaGFpcm1hbjwvYj48L3A+PHA+RG9uYWxkIEIgU3VsbGl2YW4sIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3ksIDMyNSBCcm9hZHdheSwgQm91bGRlciwgQ29sb3JhZG8gODAzMDMsIFVTQTwvcD48cD48Yj5UZWNobmljYWwgUHJvZ3JhbW1lIENvbW1pdHRlZSBDaGFpcm1hbjwvYj48L3A+PHA+QWxsZW4gQyBOZXdlbGwsIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3ksIDMyNSBCcm9hZHdheSwgQm91bGRlciwgQ29sb3JhZG8gODAzMDMsIFVTQTwvcD48cD5Gb3IgZnVydGhlciBpbmZvcm1hdGlvbiwgcGxlYXNlIGNvbnRhY3QgCkd3ZW4gRSBCZW5uZXR0LCBDb25mZXJlbmNlIFNlY3JldGFyeSwgCk5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3ksIDMyNSBCcm9hZHdheSwgQm91bGRlciwgQ29sb3JhZG8gODAzMDMsIFVTQSAKVGVsOiAoMDEpIDMwMy00OTctMzI5NSwgRmF4OiAoMDEpIDMwMy00OTctNjQ2MSwgVGVsZXg6IDkxMCA5NDAgNTkwNi48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzMwLzQvMDQyIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMzAvNC8wNDI8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjwvZGl2Pgo8L2Zvcm0+CjwhLS0gRW5kIElzc3VlIFRvYyBFbGVtZW50IExpc3RpbmcgLS0+PC9kaXY+CjwhLS0gRW5kIGlzc3VlIHBhZ2UgdGlsZSAtLT4KPC9kaXY+CiAgICAgICAgICAgIDwvbWFpbj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRiMiB0YjIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZS1hbmQtYmVsb3ciPgogICAgICAgICAgICAgICAgICAgIDwhLS0gU3RhcnQgSm91cm5hbCBsaW5rcyAtLT4KPGRpdiBjbGFzcz0ic2lkZWJhci1saXN0IiBpZD0id2Qtam5sLWxpbmtzIj4KICAgICAgICA8aDIgY2xhc3M9InNpZGViYXItbGlzdF9faGVhZGluZyI+Sm91cm5hbCBsaW5rczwvaDI+CiAgICAgICAgPHVsIGNsYXNzPSJzaWRlYmFyLWxpc3RfX2xpc3QiPjxsaT48YSBocmVmID0gImh0dHA6Ly9tYzA0Lm1hbnVzY3JpcHRjZW50cmFsLmNvbS9tZXQtYmlwbSIgdGFyZ2V0PSJfYmxhbmsiPjxzdHJvbmc+U3VibWl0IGFuIGFydGljbGU8L3N0cm9uZz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHVibGlzaGluZ3N1cHBvcnQuaW9wc2NpZW5jZS5pb3Aub3JnL2pvdXJuYWxzL21ldHJvbG9naWEvYWJvdXQtbWV0cm9sb2dpYS8iPkFib3V0IHRoZSBqb3VybmFsPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvMDAyNi0xMzk0L3BhZ2UvRWRpdG9yaWFsIEJvYXJkIj5FZGl0b3JpYWwgYm9hcmQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHVibGlzaGluZ3N1cHBvcnQuaW9wc2NpZW5jZS5pb3Aub3JnL2pvdXJuYWxzL21ldHJvbG9naWEvIj5BdXRob3IgZ3VpZGVsaW5lczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9wdWJsaXNoaW5nc3VwcG9ydC5pb3BzY2llbmNlLmlvcC5vcmcvcXVlc3Rpb25zL3ZvbHVudGVlcmluZy10by1iZS1hLWpvdXJuYWwtcmV2aWV3ZXIiPlJldmlldyBmb3IgdGhpcyBqb3VybmFsPC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHVibGlzaGluZ3N1cHBvcnQuaW9wc2NpZW5jZS5pb3Aub3JnL2pvdXJuYWxzL21ldHJvbG9naWEvYWJvdXQtbWV0cm9sb2dpYS8jcHVibGljYXRpb24tY2hhcmdlcyI+UHVibGljYXRpb24gY2hhcmdlczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iLzAwMjYtMTM5NC9wYWdlL0pvdXJuYWxfbmV3cyI+TmV3cyBhbmQgZWRpdG9yaWFsPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvMDAyNi0xMzk0L3BhZ2UvQXdhcmRzLyI+QXdhcmRzPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvMDAyNi0xMzk0L3BhZ2UvSm91cm5hbF9jb2xsZWN0aW9ucyI+Sm91cm5hbCBjb2xsZWN0aW9uczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9pb3BwdWJsaXNoaW5nLm9yZy9saWJyYXJpYW5zLyI+UHJpY2luZyBhbmQgb3JkZXJpbmc8L2E+PC9saT4KPGxpPjxhIGhyZWY9Ii8wMDI2LTEzOTQvcGFnZS9Db250YWN0X3VzIj5Db250YWN0IHVzPC9hPjwvbGk+CjwvdWw+CiAgICAgICAgPC9kaXY+CjwhLS0gRW5kIEpvdXJuYWwgbGlua3MgLS0+CjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwhLS0gRW5kIHR3byBjb2x1bW4gbGF5b3V0IC0tPgo8L2Rpdj4KCiAgICA8ZGl2IGRhdGEtc2Nyb2xsLWhlYWRlcj0iIiBjbGFzcz0iZGF0YS1oZWFkZXItYW5jaG9yIiBpZD0iZXhwIj48L2Rpdj4KPCEtLSBGb290ZXIgdGlsZSBzdGFydHMgLS0+Cjxmb290ZXIgcm9sZT0iY29udGVudGluZm8iIGRhdGEtZm9vdGVyLWNvbnRlbnQ+CiAgICA8ZGl2IGNsYXNzPSJpb3BzLWZvb3RlciBjZiI+CiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciI+CiAgICAgICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iRm9vdGVyIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJpb3BzLWZvb3Rlci1sb2dvIiBpZD0id2QtaW9wcy1mb290ZXItbG9nbyIgaXRlbXByb3A9InVybCIgaHJlZj0iLyI+CiAgICAgICAgICAgICAgICAgICAgPG1ldGEgY29udGVudD0iSU9Qc2NpZW5jZSIgaXRlbXByb3A9Im5hbWUiPgogICAgICAgICAgICAgICAgICAgIDxzdmcgaGVpZ2h0PSIxMyIgd2lkdGg9IjkwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIHhsaW5rOmhyZWY9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuOTQuMC9pbWcvaW9wcy1sb2dvLnN2ZyIgc3JjPSJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjk0LjAvaW1nL2lvcHMtbG9nby5wbmciIGJvcmRlcj0iMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTMiIHdpZHRoPSI5MCIvPgogICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5JT1AgU2NpZW5jZSBob21lPC9zcGFuPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPHNtYWxsPgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb3VybmFscyI+Sm91cm5hbHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9ib29rcyI+Qm9va3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYWdlL2Fib3V0aW9wc2NpZW5jZSI+QWJvdXQgSU9Qc2NpZW5jZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NvbnRhY3QiPkNvbnRhY3QgdXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbmZvL3BhZ2UvZGV2ZWxvcGluZy1jb3VudHJpZXMtYWNjZXNzIj5EZXZlbG9waW5nIGNvdW50cmllcyBhY2Nlc3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbmZvL3BhZ2Uvb3BlbmFjY2VzcyI+SU9QIFB1Ymxpc2hpbmcgb3BlbiBhY2Nlc3MgcG9saWN5PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgIDwvbmF2PgogICAgICAgIDwvZGl2PiA8IS0tIGVuZCB3cmFwcGVyIC0tPgogICAgPC9kaXY+IDwhLS0gZW5kIGlvcHAtZm9vdGVyIC0tPgoKICAgIDxkaXYgY2xhc3M9ImlvcHAtZm9vdGVyIGNmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEgbWFyLTAgIj4KICAgICAgICAgICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iRnVydGhlciBpbmZvcm1hdGlvbiBhYm91dCBJT1AgUHVibGlzaGluZyI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImlvcHAtZm9vdGVyLWxvZ28iIGlkPSJ3ZC1pb3BwLWZvb3Rlci1sb2dvIiBpdGVtcHJvcD0idXJsIgogICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9pb3BwdWJsaXNoaW5nLm9yZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGNvbnRlbnQ9IklPUHNjaWVuY2UiIGl0ZW1wcm9wPSJuYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTAwIiBoZWlnaHQ9IjE1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSB4bGluazpocmVmPSJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjk0LjAvaW1nL2lvcHAtbG9nby13aGl0ZS5zdmciIHNyYz0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi45NC4wL2ltZy9pb3BwLWxvZ28ucG5nIiBib3JkZXI9IjAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMCIgaGVpZ2h0PSIxNSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPklPUCBQdWJsaXNoaW5nIGhvbWU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkgbWFyLTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNtYWxsIj48YSBocmVmPSIvcGFnZS9jb3B5cmlnaHRfbm90aWNlIj4mY29weTsgQ29weXJpZ2h0IDIwMjIgSU9QCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHVibGlzaGluZzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzbWFsbCI+PGEgaHJlZj0iL3BhZ2UvdGVybXMiPlRlcm1zICZhbXA7IGNvbmRpdGlvbnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic21hbGwiPjxhIGhyZWY9Ii9wYWdlL2Rpc2NsYWltZXIiPkRpc2NsYWltZXI8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic21hbGwiPjxhIGhyZWY9Imh0dHA6Ly9pb3BwdWJsaXNoaW5nLm9yZy9wcml2YWN5UG9saWN5IiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbD0ibm9vcGVuZXIiPlByaXZhY3kgJmFtcDsgY29va2llIHBvbGljeSA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaWNvbi1uZXd0YWIgd2hpdGUtdGV4dCI+PC9zcGFuPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzbWFsbCI+PHNtYWxsPlRoaXMgc2l0ZSB1c2VzIGNvb2tpZXMuIEJ5IGNvbnRpbnVpbmcgdG8gdXNlIHRoaXMgc2l0ZSB5b3UgYWdyZWUgdG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXIgdXNlIG9mIGNvb2tpZXMuPC9zbWFsbD48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9uYXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PiA8IS0tIGVuZCB3cmFwcGVyIC0tPgogICAgPC9kaXY+IDwhLS0gZW5kIGlvcHAtZm9vdGVyIC0tPgo8L2Zvb3Rlcj4KPCEtLSBGb290ZXIgdGlsZSBlbmRzIC0tPgo8c2NyaXB0PgogIHZhciBpbWdCYXNlID0gImh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuOTQuMC9pbWciOwogIC8qICBDdXR0aW5nIHRoZSBtdXN0YXJkIC0gaHR0cDovL3Jlc3BvbnNpdmVuZXdzLmNvLnVrL3Bvc3QvMTg5NDg0NjYzOTkvY3V0dGluZy10aGUtbXVzdGFyZCAqLwoKICAvKiBUaGlzIGlzIHRoZSBvcmlnaW5hbCBpZiBzdGF0ZW1lbnQsIGZyb20gdGhlIGxpbmsgYWJvdmUuIEkgaGF2ZSBhbWVuZGVkIGl0IHRvIHR1cm4gb2YgSlMgb24gYWxsIElFIGJyb3dzZXJzIGxlc3MgdGhhbiAxMC4KCVRoaXMgaXMgZHVlIHRvIGEgZnVuY3Rpb24gaW4gdGhlIGlvcC5qcXVlcnkudG9vbGJhci5qcyBsaW5lIDM1LzM2LiBVc2VzIC5yZW1vdmUgd2hpY2ggaXMgbm90IG5hdGl2ZSBqcyBzdXBwb3J0ZWQgaW4gSUU5IG9yIGxvd2VyICovCiAgLyogaWYoJ3F1ZXJ5U2VsZWN0b3InIGluIGRvY3VtZW50CgkmJiAnbG9jYWxTdG9yYWdlJyBpbiB3aW5kb3cKCSYmICdhZGRFdmVudExpc3RlbmVyJyBpbiB3aW5kb3cpIHsgKi8KCiAgLyogVGhpcyBpcyB0aGUgdXBkYXRlZCBzZWxlY3RvciwgdGFrZW4gZnJvbTogaHR0cHM6Ly9qdXN0bWFya3VwLmNvbS9sb2cvMjAxNS8wMi8yNi9jdXQtdGhlLW11c3RhcmQtcmV2aXNpdGVkLyAqLwoJaWYoJ3Zpc2liaWxpdHlTdGF0ZScgaW4gZG9jdW1lbnQpIHsKCgkvKiEgbG9hZEpTOiBsb2FkIGEgSlMgZmlsZSBhc3luY2hyb25vdXNseS4gW2NdMjAxNCBAc2NvdHRqZWhsLCBGaWxhbWVudCBHcm91cCwgSW5jLiAoQmFzZWQgb24gaHR0cDovL2dvby5nbC9SRVFHUSBieSBQYXVsIElyaXNoKS4uIExpY2Vuc2VkIE1JVCAqLwoJZnVuY3Rpb24gbG9hZEpTKCBzcmMsIGNiICl7CgkgICJ1c2Ugc3RyaWN0IjsKCSAgdmFyIHJlZiA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggInNjcmlwdCIgKVsgMCBdOwoJICB2YXIgc2NyaXB0ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJzY3JpcHQiICk7CgkgIHNjcmlwdC5zcmMgPSBzcmM7CgkgIHNjcmlwdC5hc3luYyA9IHRydWU7CgkgIHJlZi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggc2NyaXB0LCByZWYgKTsKCSAgaWYgKGNiICYmIHR5cGVvZihjYikgPT09ICJmdW5jdGlvbiIpIHsKCQlzY3JpcHQub25sb2FkID0gY2I7CgkgIH0KCSAgcmV0dXJuIHNjcmlwdDsKCX0KCglsb2FkSlMoICJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjk0LjAvanMvc2NyaXB0cy5taW4uanMiICk7CgogIH0KPC9zY3JpcHQ+CjwhLS0gR2VuZXJhbCAtIENhbHRlY2ggLS0+CjxzY3JpcHQ+dmFyIGV4Y2x1ZGVkID0gZmFsc2U7dmFyIGV4Y2x1ZGVkX3BhZ2VzID0gWydqb3VybmFsLzA5NTMtODk4NCcsJy9qb3VybmFsLzE3NTEtODEyMScsJy9qb3VybmFsLzI1MTUtNTE3MicsJy9qb3VybmFsLzE1MzgtMzg4MScsJy9qb3VybmFsLzAwMDQtNjM3WCcsJy9qb3VybmFsLzIwNDEtODIwNScsJy9qb3VybmFsLzI2MzItMzMzOCcsJy9qb3VybmFsLzAwNjctMDA0OScsJy9qb3VybmFsLzE3NTEtODEyMScsJy9qb3VybmFsLzA5NTMtODk4NCcsJy9qb3VybmFsTGlzdCddO2ZvcihpPTA7aTxleGNsdWRlZF9wYWdlcy5sZW5ndGg7aSsrKXtpZih3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKGV4Y2x1ZGVkX3BhZ2VzW2ldKT4tMSl7ZXhjbHVkZWQgPSB0cnVlO319aWYoIWV4Y2x1ZGVkKXsoZnVuY3Rpb24oZyxlLG8sdCxhLHIsZ2UsdGwseSl7Y29uc29sZS5sb2coJ3Byb2Nlc3NpbmcnKTt0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlO3ZhciBhPXdpbmRvdyxiPWcuZG9jdW1lbnRFbGVtZW50LGM9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLHc9YS5pbm5lcldpZHRofHxiLmNsaWVudFdpZHRofHxjLmNsaWVudFdpZHRoLGg9YS5pbm5lckhlaWdodHx8Yi5jbGllbnRIZWlnaHR8fGMuY2xpZW50SGVpZ2h0O3kuc3JjPSdodHRwczovL2cxNzgyNzU5MDE2LmNvL2dwP2lkPS1NbnpydUk0aG51TUJ6TjRaQmxUJnJlZnVybD0nK2cucmVmZXJyZXIrJyZ3aW51cmw9JytlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uKSsnJmN3PScrdysnJmNoPScraDt0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7fSkoZG9jdW1lbnQsJ3NjcmlwdCcpO308L3NjcmlwdD4KPCEtLSBGb2N1cyAtIE1hdGhzIC0gQ2FsdGVjaCAtLT4KPHNjcmlwdD4gKGZ1bmN0aW9uKGcsZSxvLHQsYSxyLGdlLHRsLHkpeyB0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlOyB2YXIgYT13aW5kb3csYj1nLmRvY3VtZW50RWxlbWVudCxjPWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSx3PWEuaW5uZXJXaWR0aHx8Yi5jbGllbnRXaWR0aHx8Yy5jbGllbnRXaWR0aCxoPWEuaW5uZXJIZWlnaHR8fGIuY2xpZW50SGVpZ2h0fHxjLmNsaWVudEhlaWdodDsgeS5zcmM9J2h0dHBzOi8vZzE3ODI3NTkwMTYuY28vZ3A/aWQ9LU1uenJBM0pXUlAtMnBTZ283RWkmcmVmdXJsPScrZy5yZWZlcnJlcisnJndpbnVybD0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24pKycmY3c9Jyt3KycmY2g9JytoOyB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7IH0pKGRvY3VtZW50LCdzY3JpcHQnKTs8L3NjcmlwdD4KPCEtLSBGb2N1cyAtIENvbmRlbnNlZCBzdWJqZWN0IGNvbGxlY3Rpb24gLSBDYWx0ZWNoIC0tPgo8c2NyaXB0PiAoZnVuY3Rpb24oZyxlLG8sdCxhLHIsZ2UsdGwseSl7IHQ9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZShlKVswXTt5PWcuY3JlYXRlRWxlbWVudChlKTt5LmFzeW5jPXRydWU7IHZhciBhPXdpbmRvdyxiPWcuZG9jdW1lbnRFbGVtZW50LGM9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLHc9YS5pbm5lcldpZHRofHxiLmNsaWVudFdpZHRofHxjLmNsaWVudFdpZHRoLGg9YS5pbm5lckhlaWdodHx8Yi5jbGllbnRIZWlnaHR8fGMuY2xpZW50SGVpZ2h0OyB5LnNyYz0naHR0cHM6Ly9nMTc4Mjc1OTAxNi5jby9ncD9pZD0tTWlXSkxfRWZGSFJfcjNRV1VJSCZyZWZ1cmw9JytnLnJlZmVycmVyKycmd2ludXJsPScrZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbikrJyZjdz0nK3crJyZjaD0nK2g7IHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoeSx0KTsgfSkoZG9jdW1lbnQsJ3NjcmlwdCcpOzwvc2NyaXB0PjxzY3JpcHQ+ZG9jdW1lbnQub25rZXlkb3duID0gZnVuY3Rpb24oZXZ0KSB7aWYoZXZ0LmtleUNvZGUgPT09IDI3ICYmIHR5cGVvZiBnZW9Qb3B1cENsb3NlID09ICJmdW5jdGlvbiIpe2dlb1BvcHVwQ2xvc2UoKTt9fTs8L3NjcmlwdD4KPCEtLSBBY2Nlc3MgZm9yIFVrcmFpbmlhbiBSZXNlYXJjaGVycyAtLT4KPHNjcmlwdD4gKGZ1bmN0aW9uKGcsZSxvLHQsYSxyLGdlLHRsLHkpeyB0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlOyB2YXIgYT13aW5kb3csYj1nLmRvY3VtZW50RWxlbWVudCxjPWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSx3PWEuaW5uZXJXaWR0aHx8Yi5jbGllbnRXaWR0aHx8Yy5jbGllbnRXaWR0aCxoPWEuaW5uZXJIZWlnaHR8fGIuY2xpZW50SGVpZ2h0fHxjLmNsaWVudEhlaWdodDsgeS5zcmM9J2h0dHBzOi8vZzk3MDYxMzI0MTUuY28vZ3A/aWQ9LU4tMk1EOFFkVzNkTnU0U3E3RG8mcmVmdXJsPScrZy5yZWZlcnJlcisnJndpbnVybD0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24pKycmY3c9Jyt3KycmY2g9JytoOyB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7IH0pKGRvY3VtZW50LCdzY3JpcHQnKTs8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSk7TlJFVU0uaW5mbz17ImVycm9yQmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwibGljZW5zZUtleSI6ImIyYmZhYWUxYjYiLCJhZ2VudCI6IiIsImJlYWNvbiI6ImJhbS5uci1kYXRhLm5ldCIsImFwcGxpY2F0aW9uVGltZSI6NDc2LCJhcHBsaWNhdGlvbklEIjoiMTczMjY4Nzc5MCIsInRyYW5zYWN0aW9uTmFtZSI6Ik5BQUhNVUJWQ0VOU0FCRlpYZzFLTHpaaUd6RjFjVTRzZm5kTUR4WVZRUnNGWDE0T0NsNGVEd1FjQ2tkQVNGcEFFdz09IiwicXVldWVUaW1lIjowfTwvc2NyaXB0PjwvYm9keT4KPC9odG1sPg==
  recorded_at: Fri, 28 Oct 2022 22:39:51 GMT
recorded_with: VCR 6.1.0
