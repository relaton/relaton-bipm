---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/journal/0026-1394
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=yNmLNg9RVfBVjqj36PLVl1/Xl2XD6O8bRP2ZhH30iPE2Ntk/FQHO3NyiukQD+hT591qWQs7lfdcDax7nWOrY4SX2+WcfDMwWeSV5wpk2eg1rsrUVV6usuVyiPNPF;
        Expires=Thu, 25 Mar 2021 12:02:20 GMT; Path=/
      - AWSALBCORS=yNmLNg9RVfBVjqj36PLVl1/Xl2XD6O8bRP2ZhH30iPE2Ntk/FQHO3NyiukQD+hT591qWQs7lfdcDax7nWOrY4SX2+WcfDMwWeSV5wpk2eg1rsrUVV6usuVyiPNPF;
        Expires=Thu, 25 Mar 2021 12:02:20 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1616068940384%7Cf3856362-7e9b-464d-ab39-10108e23cff4%7C20210318-d55aeb96a10863c32f5bae5c95787ca5%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F94c5a1e03ead9b5f6f6ede79dccf912b;
        Path=/; Domain=.iop.org
      - JSESSIONID=08B1313E31370FE11CCB0C09B4EF7FEF; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=08B1313E31370FE11CCB0C09B4EF7FEF; Path=/; HttpOnly
      - __uzma=c42125d2-f50c-48a2-a1b1-e35b99dc9e79; HttpOnly; path=/; Expires=Thu,
        16-Sep-21 12:02:20 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1616068940; HttpOnly; path=/; Expires=Thu, 16-Sep-21 12:02:20 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=771611088014; HttpOnly; path=/; Expires=Thu, 16-Sep-21 12:02:20 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1616068940; HttpOnly; path=/; Expires=Thu, 16-Sep-21 12:02:20 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=9507; HttpOnly; path=/; Expires=Thu, 16-Sep-21 12:02:20 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - f3856362-7e9b-464d-ab39-10108e23cff4
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - JNL_HOMEPAGE
      X-Logged-In:
      - ''
      Date:
      - Thu, 18 Mar 2021 12:02:20 GMT
      Iop-Session-Map:
      - iop_session_id=f3856362-7e9b-464d-ab39-10108e23cff4&identity_ids=guest%2C&ics_session_id=20210318-d55aeb96a10863c32f5bae5c95787ca5&request_id=897533df-acbb-450a-9007-6eaa053d29c6&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 18 Mar 2021 12:02:20 GMT
recorded_with: VCR 6.0.0
