---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=QOveeZlxtEFVQUrTevm8czsfV0IROBUsQ6X15nTfgTh/K7vubsVM0MrYuTpo79NMmNJlSapqQJjGOosxD8h92x1uPziiSyJ83S1rLulGNkEWJeVcORepaqmox+1i;
        Expires=Tue, 06 Sep 2022 14:26:03 GMT; Path=/
      - AWSALBCORS=QOveeZlxtEFVQUrTevm8czsfV0IROBUsQ6X15nTfgTh/K7vubsVM0MrYuTpo79NMmNJlSapqQJjGOosxD8h92x1uPziiSyJ83S1rLulGNkEWJeVcORepaqmox+1i;
        Expires=Tue, 06 Sep 2022 14:26:03 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1661869563603%7Ca98464fd-9dbb-4956-be28-4851b3ca8a8e%7C20220830-5b3a286be5bc71f89c455a5c5e94b586%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F605160a14c5623027d8b2729ae857f67;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=8EC9D7CA63BE375ADCA3C47504E897BF; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=8EC9D7CA63BE375ADCA3C47504E897BF; Path=/; HttpOnly
      - __uzma=030f93e3-70ae-4595-af25-523aad511183; HttpOnly; path=/; Expires=Tue,
        28-Feb-23 14:26:03 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1661869563; HttpOnly; path=/; Expires=Tue, 28-Feb-23 14:26:03 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=734221074276; HttpOnly; path=/; Expires=Tue, 28-Feb-23 14:26:03 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1661869563; HttpOnly; path=/; Expires=Tue, 28-Feb-23 14:26:03 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=3815; HttpOnly; path=/; Expires=Tue, 28-Feb-23 14:26:03 GMT ; Max-Age=15724800;
        SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - a98464fd-9dbb-4956-be28-4851b3ca8a8e
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=31600000
      X-Logged-In:
      - ''
      Date:
      - Tue, 30 Aug 2022 14:26:03 GMT
      Iop-Session-Map:
      - iop_session_id=a98464fd-9dbb-4956-be28-4851b3ca8a8e&identity_ids=guest%2C&ics_session_id=20220830-5b3a286be5bc71f89c455a5c5e94b586&request_id=091c62d3-96cf-4232-a2ed-392c0e824685&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 30 Aug 2022 14:26:03 GMT
recorded_with: VCR 6.1.0
