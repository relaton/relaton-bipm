---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=aWFbdSFYtGQk1JSo9rNj6pNGEZJfyfyPPgnG5xmloXTnMorxGkVUUK0MqVH+jkC20vun20y5f3r1rEJERfoNptoxTPI/u29jK/hbcVu6w4UWxAFAfcerVMdTGWMi;
        Expires=Sun, 05 Jun 2022 16:11:55 GMT; Path=/
      - AWSALBCORS=aWFbdSFYtGQk1JSo9rNj6pNGEZJfyfyPPgnG5xmloXTnMorxGkVUUK0MqVH+jkC20vun20y5f3r1rEJERfoNptoxTPI/u29jK/hbcVu6w4UWxAFAfcerVMdTGWMi;
        Expires=Sun, 05 Jun 2022 16:11:55 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1653840715882%7C7fc4632c-84ca-4e2a-a9a9-0bdf54bff5d1%7C20220529-6f5e3236dca5c816b07566c6a45dd727%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2Fe80910c8eb5664d9e680a72d79845091;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=873C8334734F8698E94486064412439E; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=873C8334734F8698E94486064412439E; Path=/; HttpOnly
      - __uzma=c019bc99-580a-48b0-bd13-71d771de9ca3; HttpOnly; path=/; Expires=Sun,
        27-Nov-22 16:11:55 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1653840715; HttpOnly; path=/; Expires=Sun, 27-Nov-22 16:11:55 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=267211016478; HttpOnly; path=/; Expires=Sun, 27-Nov-22 16:11:55 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1653840715; HttpOnly; path=/; Expires=Sun, 27-Nov-22 16:11:55 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=2411; HttpOnly; path=/; Expires=Sun, 27-Nov-22 16:11:55 GMT ; Max-Age=15724800;
        SameSite=Lax
      - rdw_storereferer=; HttpOnly; path=/; Expires=Sun, 27-Nov-22 16:11:55 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 7fc4632c-84ca-4e2a-a9a9-0bdf54bff5d1
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Sun, 29 May 2022 16:11:55 GMT
      Iop-Session-Map:
      - iop_session_id=7fc4632c-84ca-4e2a-a9a9-0bdf54bff5d1&identity_ids=guest%2C&ics_session_id=20220529-6f5e3236dca5c816b07566c6a45dd727&request_id=4bf09074-5fd3-4305-9487-6dd95c5fed0d&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCTxoZWFkPgoJCTxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSxjaHJvbWU9MSI+CgkJCgkJCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4od2luZG93Lk5SRVVNfHwoTlJFVU09e30pKS5pbml0PXtwcml2YWN5Ontjb29raWVzX2VuYWJsZWQ6dHJ1ZX0sYWpheDp7ZGVueV9saXN0OlsiYmFtLWNlbGwubnItZGF0YS5uZXQiXX0sZGlzdHJpYnV0ZWRfdHJhY2luZzp7ZW5hYmxlZDp0cnVlfX07KHdpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KSkubG9hZGVyX2NvbmZpZz17YWdlbnRJRDoiMTczMjY4OTM0MyIsYWNjb3VudElEOiI5MTc4NzciLHRydXN0S2V5OiI5MTc4NzciLHhwaWQ6IlhRY0FXVkZVR3dJSFYxTlVEd1lBWDFRPSIsbGljZW5zZUtleToiYjJiZmFhZTFiNiIsYXBwbGljYXRpb25JRDoiMTczMjY4Nzc5MCJ9O3dpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KSxfX25yX3JlcXVpcmU9ZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIobil7aWYoIWVbbl0pe3ZhciBvPWVbbl09e2V4cG9ydHM6e319O3Rbbl1bMF0uY2FsbChvLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG89dFtuXVsxXVtlXTtyZXR1cm4gcihvfHxlKX0sbyxvLmV4cG9ydHMpfXJldHVybiBlW25dLmV4cG9ydHN9aWYoImZ1bmN0aW9uIj09dHlwZW9mIF9fbnJfcmVxdWlyZSlyZXR1cm4gX19ucl9yZXF1aXJlO2Zvcih2YXIgbz0wO288bi5sZW5ndGg7bysrKXIobltvXSk7cmV0dXJuIHJ9KHsxOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXt0cnl7cy5jb25zb2xlJiZjb25zb2xlLmxvZyh0KX1jYXRjaChlKXt9fXZhciBvLGk9dCgiZWUiKSxhPXQoMzEpLHM9e307dHJ5e289bG9jYWxTdG9yYWdlLmdldEl0ZW0oIl9fbnJfZmxhZ3MiKS5zcGxpdCgiLCIpLGNvbnNvbGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjb25zb2xlLmxvZyYmKHMuY29uc29sZT0hMCxvLmluZGV4T2YoImRldiIpIT09LTEmJihzLmRldj0hMCksby5pbmRleE9mKCJucl9kZXYiKSE9PS0xJiYocy5uckRldj0hMCkpfWNhdGNoKGMpe31zLm5yRGV2JiZpLm9uKCJpbnRlcm5hbC1lcnJvciIsZnVuY3Rpb24odCl7cih0LnN0YWNrKX0pLHMuZGV2JiZpLm9uKCJmbi1lcnIiLGZ1bmN0aW9uKHQsZSxuKXtyKG4uc3RhY2spfSkscy5kZXYmJihyKCJOUiBBR0VOVCBJTiBERVZFTE9QTUVOVCBNT0RFIikscigiZmxhZ3M6ICIrYShzLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR9KS5qb2luKCIsICIpKSl9LHt9XSwyOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUsbixyLHMpe3RyeXtsP2wtPTE6byhzfHxuZXcgVW5jYXVnaHRFeGNlcHRpb24odCxlLG4pLCEwKX1jYXRjaChmKXt0cnl7aSgiaWVyciIsW2YsYy5ub3coKSwhMF0pfWNhdGNoKGQpe319cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHUmJnUuYXBwbHkodGhpcyxhKGFyZ3VtZW50cykpfWZ1bmN0aW9uIFVuY2F1Z2h0RXhjZXB0aW9uKHQsZSxuKXt0aGlzLm1lc3NhZ2U9dHx8IlVuY2F1Z2h0IGVycm9yIHdpdGggbm8gYWRkaXRpb25hbCBpbmZvcm1hdGlvbiIsdGhpcy5zb3VyY2VVUkw9ZSx0aGlzLmxpbmU9bn1mdW5jdGlvbiBvKHQsZSl7dmFyIG49ZT9udWxsOmMubm93KCk7aSgiZXJyIixbdCxuXSl9dmFyIGk9dCgiaGFuZGxlIiksYT10KDMyKSxzPXQoImVlIiksYz10KCJsb2FkZXIiKSxmPXQoImdvcyIpLHU9d2luZG93Lm9uZXJyb3IsZD0hMSxwPSJuckBzZWVuRXJyb3IiO2lmKCFjLmRpc2FibGVkKXt2YXIgbD0wO2MuZmVhdHVyZXMuZXJyPSEwLHQoMSksd2luZG93Lm9uZXJyb3I9cjt0cnl7dGhyb3cgbmV3IEVycm9yfWNhdGNoKGgpeyJzdGFjayJpbiBoJiYodCgxNCksdCgxMyksImFkZEV2ZW50TGlzdGVuZXIiaW4gd2luZG93JiZ0KDcpLGMueGhyV3JhcHBhYmxlJiZ0KDE1KSxkPSEwKX1zLm9uKCJmbi1zdGFydCIsZnVuY3Rpb24odCxlLG4pe2QmJihsKz0xKX0pLHMub24oImZuLWVyciIsZnVuY3Rpb24odCxlLG4pe2QmJiFuW3BdJiYoZihuLHAsZnVuY3Rpb24oKXtyZXR1cm4hMH0pLHRoaXMudGhyb3duPSEwLG8obikpfSkscy5vbigiZm4tZW5kIixmdW5jdGlvbigpe2QmJiF0aGlzLnRocm93biYmbD4wJiYobC09MSl9KSxzLm9uKCJpbnRlcm5hbC1lcnJvciIsZnVuY3Rpb24odCl7aSgiaWVyciIsW3QsYy5ub3coKSwhMF0pfSl9fSx7fV0sMzpbZnVuY3Rpb24odCxlLG4pe3ZhciByPXQoImxvYWRlciIpO3IuZGlzYWJsZWR8fChyLmZlYXR1cmVzLmlucz0hMCl9LHt9XSw0OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe1UrKyxMPWcuaGFzaCx0aGlzW3VdPXkubm93KCl9ZnVuY3Rpb24gbygpe1UtLSxnLmhhc2ghPT1MJiZpKDAsITApO3ZhciB0PXkubm93KCk7dGhpc1toXT1+fnRoaXNbaF0rdC10aGlzW3VdLHRoaXNbZF09dH1mdW5jdGlvbiBpKHQsZSl7RS5lbWl0KCJuZXdVUkwiLFsiIitnLGVdKX1mdW5jdGlvbiBhKHQsZSl7dC5vbihlLGZ1bmN0aW9uKCl7dGhpc1tlXT15Lm5vdygpfSl9dmFyIHM9Ii1zdGFydCIsYz0iLWVuZCIsZj0iLWJvZHkiLHU9ImZuIitzLGQ9ImZuIitjLHA9ImNiIitzLGw9ImNiIitjLGg9ImpzVGltZSIsbT0iZmV0Y2giLHY9ImFkZEV2ZW50TGlzdGVuZXIiLHc9d2luZG93LGc9dy5sb2NhdGlvbix5PXQoImxvYWRlciIpO2lmKHdbdl0mJnkueGhyV3JhcHBhYmxlJiYheS5kaXNhYmxlZCl7dmFyIHg9dCgxMSksYj10KDEyKSxFPXQoOSksUj10KDcpLE89dCgxNCksVD10KDgpLFM9dCgxNSksUD10KDEwKSxNPXQoImVlIiksQz1NLmdldCgidHJhY2VyIiksTj10KDIzKTt0KDE3KSx5LmZlYXR1cmVzLnNwYT0hMDt2YXIgTCxVPTA7TS5vbih1LHIpLGIub24ocCxyKSxQLm9uKHAsciksTS5vbihkLG8pLGIub24obCxvKSxQLm9uKGwsbyksTS5idWZmZXIoW3UsZCwieGhyLXJlc29sdmVkIl0pLFIuYnVmZmVyKFt1XSksTy5idWZmZXIoWyJzZXRUaW1lb3V0IitjLCJjbGVhclRpbWVvdXQiK3MsdV0pLFMuYnVmZmVyKFt1LCJuZXcteGhyIiwic2VuZC14aHIiK3NdKSxULmJ1ZmZlcihbbStzLG0rIi1kb25lIixtK2YrcyxtK2YrY10pLEUuYnVmZmVyKFsibmV3VVJMIl0pLHguYnVmZmVyKFt1XSksYi5idWZmZXIoWyJwcm9wYWdhdGUiLHAsbCwiZXhlY3V0b3ItZXJyIiwicmVzb2x2ZSIrc10pLEMuYnVmZmVyKFt1LCJuby0iK3VdKSxQLmJ1ZmZlcihbIm5ldy1qc29ucCIsImNiLXN0YXJ0IiwianNvbnAtZXJyb3IiLCJqc29ucC1lbmQiXSksYShULG0rcyksYShULG0rIi1kb25lIiksYShQLCJuZXctanNvbnAiKSxhKFAsImpzb25wLWVuZCIpLGEoUCwiY2Itc3RhcnQiKSxFLm9uKCJwdXNoU3RhdGUtZW5kIixpKSxFLm9uKCJyZXBsYWNlU3RhdGUtZW5kIixpKSx3W3ZdKCJoYXNoY2hhbmdlIixpLE4oITApKSx3W3ZdKCJsb2FkIixpLE4oITApKSx3W3ZdKCJwb3BzdGF0ZSIsZnVuY3Rpb24oKXtpKDAsVT4xKX0sTighMCkpfX0se31dLDU6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKCl7dmFyIHQ9bmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIoZnVuY3Rpb24odCxlKXt2YXIgbj10LmdldEVudHJpZXMoKTtzKHYsW25dKX0pO3RyeXt0Lm9ic2VydmUoe2VudHJ5VHlwZXM6WyJyZXNvdXJjZSJdfSl9Y2F0Y2goZSl7fX1mdW5jdGlvbiBvKHQpe2lmKHModixbd2luZG93LnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUodyldKSx3aW5kb3cucGVyZm9ybWFuY2VbImMiK3BdKXRyeXt3aW5kb3cucGVyZm9ybWFuY2VbaF0obSxvLCExKX1jYXRjaCh0KXt9ZWxzZSB0cnl7d2luZG93LnBlcmZvcm1hbmNlW2hdKCJ3ZWJraXQiK20sbywhMSl9Y2F0Y2godCl7fX1mdW5jdGlvbiBpKHQpe31pZih3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJndpbmRvdy5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKXt2YXIgYT10KCJlZSIpLHM9dCgiaGFuZGxlIiksYz10KDE0KSxmPXQoMTMpLHU9dCg2KSxkPXQoMjMpLHA9ImxlYXJSZXNvdXJjZVRpbWluZ3MiLGw9ImFkZEV2ZW50TGlzdGVuZXIiLGg9InJlbW92ZUV2ZW50TGlzdGVuZXIiLG09InJlc291cmNldGltaW5nYnVmZmVyZnVsbCIsdj0iYnN0UmVzb3VyY2UiLHc9InJlc291cmNlIixnPSItc3RhcnQiLHk9Ii1lbmQiLHg9ImZuIitnLGI9ImZuIit5LEU9ImJzdFRpbWVyIixSPSJwdXNoU3RhdGUiLE89dCgibG9hZGVyIik7aWYoIU8uZGlzYWJsZWQpe08uZmVhdHVyZXMuc3RuPSEwLHQoOSksImFkZEV2ZW50TGlzdGVuZXIiaW4gd2luZG93JiZ0KDcpO3ZhciBUPU5SRVVNLm8uRVY7YS5vbih4LGZ1bmN0aW9uKHQsZSl7dmFyIG49dFswXTtuIGluc3RhbmNlb2YgVCYmKHRoaXMuYnN0U3RhcnQ9Ty5ub3coKSl9KSxhLm9uKGIsZnVuY3Rpb24odCxlKXt2YXIgbj10WzBdO24gaW5zdGFuY2VvZiBUJiZzKCJic3QiLFtuLGUsdGhpcy5ic3RTdGFydCxPLm5vdygpXSl9KSxjLm9uKHgsZnVuY3Rpb24odCxlLG4pe3RoaXMuYnN0U3RhcnQ9Ty5ub3coKSx0aGlzLmJzdFR5cGU9bn0pLGMub24oYixmdW5jdGlvbih0LGUpe3MoRSxbZSx0aGlzLmJzdFN0YXJ0LE8ubm93KCksdGhpcy5ic3RUeXBlXSl9KSxmLm9uKHgsZnVuY3Rpb24oKXt0aGlzLmJzdFN0YXJ0PU8ubm93KCl9KSxmLm9uKGIsZnVuY3Rpb24odCxlKXtzKEUsW2UsdGhpcy5ic3RTdGFydCxPLm5vdygpLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiXSl9KSxhLm9uKFIrZyxmdW5jdGlvbih0KXt0aGlzLnRpbWU9Ty5ub3coKSx0aGlzLnN0YXJ0UGF0aD1sb2NhdGlvbi5wYXRobmFtZStsb2NhdGlvbi5oYXNofSksYS5vbihSK3ksZnVuY3Rpb24odCl7cygiYnN0SGlzdCIsW2xvY2F0aW9uLnBhdGhuYW1lK2xvY2F0aW9uLmhhc2gsdGhpcy5zdGFydFBhdGgsdGhpcy50aW1lXSl9KSx1KCk/KHModixbd2luZG93LnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoInJlc291cmNlIildKSxyKCkpOmwgaW4gd2luZG93LnBlcmZvcm1hbmNlJiYod2luZG93LnBlcmZvcm1hbmNlWyJjIitwXT93aW5kb3cucGVyZm9ybWFuY2VbbF0obSxvLGQoITEpKTp3aW5kb3cucGVyZm9ybWFuY2VbbF0oIndlYmtpdCIrbSxvLGQoITEpKSksZG9jdW1lbnRbbF0oInNjcm9sbCIsaSxkKCExKSksZG9jdW1lbnRbbF0oImtleXByZXNzIixpLGQoITEpKSxkb2N1bWVudFtsXSgiY2xpY2siLGksZCghMSkpfX19LHt9XSw2OltmdW5jdGlvbih0LGUsbil7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7cmV0dXJuIlBlcmZvcm1hbmNlT2JzZXJ2ZXIiaW4gd2luZG93JiYiZnVuY3Rpb24iPT10eXBlb2Ygd2luZG93LlBlcmZvcm1hbmNlT2JzZXJ2ZXJ9fSx7fV0sNzpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7Zm9yKHZhciBlPXQ7ZSYmIWUuaGFzT3duUHJvcGVydHkodSk7KWU9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpO2UmJm8oZSl9ZnVuY3Rpb24gbyh0KXtzLmluUGxhY2UodCxbdSxkXSwiLSIsaSl9ZnVuY3Rpb24gaSh0LGUpe3JldHVybiB0WzFdfXZhciBhPXQoImVlIikuZ2V0KCJldmVudHMiKSxzPXQoIndyYXAtZnVuY3Rpb24iKShhLCEwKSxjPXQoImdvcyIpLGY9WE1MSHR0cFJlcXVlc3QsdT0iYWRkRXZlbnRMaXN0ZW5lciIsZD0icmVtb3ZlRXZlbnRMaXN0ZW5lciI7ZS5leHBvcnRzPWEsImdldFByb3RvdHlwZU9mImluIE9iamVjdD8ocihkb2N1bWVudCkscih3aW5kb3cpLHIoZi5wcm90b3R5cGUpKTpmLnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSh1KSYmKG8od2luZG93KSxvKGYucHJvdG90eXBlKSksYS5vbih1KyItc3RhcnQiLGZ1bmN0aW9uKHQsZSl7dmFyIG49dFsxXTtpZihudWxsIT09biYmKCJmdW5jdGlvbiI9PXR5cGVvZiBufHwib2JqZWN0Ij09dHlwZW9mIG4pKXt2YXIgcj1jKG4sIm5yQHdyYXBwZWQiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBuLmhhbmRsZUV2ZW50KXJldHVybiBuLmhhbmRsZUV2ZW50LmFwcGx5KG4sYXJndW1lbnRzKX12YXIgZT17b2JqZWN0OnQsImZ1bmN0aW9uIjpufVt0eXBlb2Ygbl07cmV0dXJuIGU/cyhlLCJmbi0iLG51bGwsZS5uYW1lfHwiYW5vbnltb3VzIik6bn0pO3RoaXMud3JhcHBlZD10WzFdPXJ9fSksYS5vbihkKyItc3RhcnQiLGZ1bmN0aW9uKHQpe3RbMV09dGhpcy53cmFwcGVkfHx0WzFdfSl9LHt9XSw4OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9dFtlXTsiZnVuY3Rpb24iPT10eXBlb2YgciYmKHRbZV09ZnVuY3Rpb24oKXt2YXIgdD1pKGFyZ3VtZW50cyksZT17fTtvLmVtaXQobisiYmVmb3JlLXN0YXJ0IixbdF0sZSk7dmFyIGE7ZVttXSYmZVttXS5kdCYmKGE9ZVttXS5kdCk7dmFyIHM9ci5hcHBseSh0aGlzLHQpO3JldHVybiBvLmVtaXQobisic3RhcnQiLFt0LGFdLHMpLHMudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gby5lbWl0KG4rImVuZCIsW251bGwsdF0scyksdH0sZnVuY3Rpb24odCl7dGhyb3cgby5lbWl0KG4rImVuZCIsW3RdLHMpLHR9KX0pfXZhciBvPXQoImVlIikuZ2V0KCJmZXRjaCIpLGk9dCgzMiksYT10KDMxKTtlLmV4cG9ydHM9bzt2YXIgcz13aW5kb3csYz0iZmV0Y2gtIixmPWMrImJvZHktIix1PVsiYXJyYXlCdWZmZXIiLCJibG9iIiwianNvbiIsInRleHQiLCJmb3JtRGF0YSJdLGQ9cy5SZXF1ZXN0LHA9cy5SZXNwb25zZSxsPXMuZmV0Y2gsaD0icHJvdG90eXBlIixtPSJuckBjb250ZXh0IjtkJiZwJiZsJiYoYSh1LGZ1bmN0aW9uKHQsZSl7cihkW2hdLGUsZikscihwW2hdLGUsZil9KSxyKHMsImZldGNoIixjKSxvLm9uKGMrImVuZCIsZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO2lmKGUpe3ZhciByPWUuaGVhZGVycy5nZXQoImNvbnRlbnQtbGVuZ3RoIik7bnVsbCE9PXImJihuLnJ4U2l6ZT1yKSxvLmVtaXQoYysiZG9uZSIsW251bGwsZV0sbil9ZWxzZSBvLmVtaXQoYysiZG9uZSIsW3RdLG4pfSkpfSx7fV0sOTpbZnVuY3Rpb24odCxlLG4pe3ZhciByPXQoImVlIikuZ2V0KCJoaXN0b3J5Iiksbz10KCJ3cmFwLWZ1bmN0aW9uIikocik7ZS5leHBvcnRzPXI7dmFyIGk9d2luZG93Lmhpc3RvcnkmJndpbmRvdy5oaXN0b3J5LmNvbnN0cnVjdG9yJiZ3aW5kb3cuaGlzdG9yeS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYT13aW5kb3cuaGlzdG9yeTtpJiZpLnB1c2hTdGF0ZSYmaS5yZXBsYWNlU3RhdGUmJihhPWkpLG8uaW5QbGFjZShhLFsicHVzaFN0YXRlIiwicmVwbGFjZVN0YXRlIl0sIi0iKX0se31dLDEwOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXtmdW5jdGlvbiBlKCl7Zi5lbWl0KCJqc29ucC1lbmQiLFtdLGwpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibG9hZCIsZSxjKCExKSksdC5yZW1vdmVFdmVudExpc3RlbmVyKCJlcnJvciIsbixjKCExKSl9ZnVuY3Rpb24gbigpe2YuZW1pdCgianNvbnAtZXJyb3IiLFtdLGwpLGYuZW1pdCgianNvbnAtZW5kIixbXSxsKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLGUsYyghMSkpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZXJyb3IiLG4sYyghMSkpfXZhciByPXQmJiJzdHJpbmciPT10eXBlb2YgdC5ub2RlTmFtZSYmInNjcmlwdCI9PT10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYocil7dmFyIG89ImZ1bmN0aW9uIj09dHlwZW9mIHQuYWRkRXZlbnRMaXN0ZW5lcjtpZihvKXt2YXIgYT1pKHQuc3JjKTtpZihhKXt2YXIgZD1zKGEpLHA9ImZ1bmN0aW9uIj09dHlwZW9mIGQucGFyZW50W2Qua2V5XTtpZihwKXt2YXIgbD17fTt1LmluUGxhY2UoZC5wYXJlbnQsW2Qua2V5XSwiY2ItIixsKSx0LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGUsYyghMSkpLHQuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLG4sYyghMSkpLGYuZW1pdCgibmV3LWpzb25wIixbdC5zcmNdLGwpfX19fX1mdW5jdGlvbiBvKCl7cmV0dXJuImFkZEV2ZW50TGlzdGVuZXIiaW4gd2luZG93fWZ1bmN0aW9uIGkodCl7dmFyIGU9dC5tYXRjaChkKTtyZXR1cm4gZT9lWzFdOm51bGx9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPXQubWF0Y2gobCkscj1uWzFdLG89blszXTtyZXR1cm4gbz9hKG8sZVtyXSk6ZVtyXX1mdW5jdGlvbiBzKHQpe3ZhciBlPXQubWF0Y2gocCk7cmV0dXJuIGUmJmUubGVuZ3RoPj0zP3trZXk6ZVsyXSxwYXJlbnQ6YShlWzFdLHdpbmRvdyl9OntrZXk6dCxwYXJlbnQ6d2luZG93fX12YXIgYz10KDIzKSxmPXQoImVlIikuZ2V0KCJqc29ucCIpLHU9dCgid3JhcC1mdW5jdGlvbiIpKGYpO2lmKGUuZXhwb3J0cz1mLG8oKSl7dmFyIGQ9L1s/Jl0oPzpjYWxsYmFja3xjYik9KFteJiNdKykvLHA9LyguKilcLihbXi5dKykvLGw9L14oXHcrKShcLnwkKSguKikkLyxoPVsiYXBwZW5kQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJyZXBsYWNlQ2hpbGQiXTtOb2RlJiZOb2RlLnByb3RvdHlwZSYmTm9kZS5wcm90b3R5cGUuYXBwZW5kQ2hpbGQ/dS5pblBsYWNlKE5vZGUucHJvdG90eXBlLGgsImRvbS0iKToodS5pblBsYWNlKEhUTUxFbGVtZW50LnByb3RvdHlwZSxoLCJkb20tIiksdS5pblBsYWNlKEhUTUxIZWFkRWxlbWVudC5wcm90b3R5cGUsaCwiZG9tLSIpLHUuaW5QbGFjZShIVE1MQm9keUVsZW1lbnQucHJvdG90eXBlLGgsImRvbS0iKSksZi5vbigiZG9tLXN0YXJ0IixmdW5jdGlvbih0KXtyKHRbMF0pfSl9fSx7fV0sMTE6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgcj10KCJlZSIpLmdldCgibXV0YXRpb24iKSxvPXQoIndyYXAtZnVuY3Rpb24iKShyKSxpPU5SRVVNLm8uTU87ZS5leHBvcnRzPXIsaSYmKHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgaT9uZXcgaShvKHQsImZuLSIpKTppLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sTXV0YXRpb25PYnNlcnZlci5wcm90b3R5cGU9aS5wcm90b3R5cGUpfSx7fV0sMTI6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQpe3ZhciBlPWkuY29udGV4dCgpLG49cyh0LCJleGVjdXRvci0iLGUsbnVsbCwhMSkscj1uZXcgZihuKTtyZXR1cm4gaS5jb250ZXh0KHIpLmdldEN0eD1mdW5jdGlvbigpe3JldHVybiBlfSxyfXZhciBvPXQoIndyYXAtZnVuY3Rpb24iKSxpPXQoImVlIikuZ2V0KCJwcm9taXNlIiksYT10KCJlZSIpLmdldE9yU2V0Q29udGV4dCxzPW8oaSksYz10KDMxKSxmPU5SRVVNLm8uUFI7ZS5leHBvcnRzPWksZiYmKHdpbmRvdy5Qcm9taXNlPXIsWyJhbGwiLCJyYWNlIl0uZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZT1mW3RdO2ZbdF09ZnVuY3Rpb24obil7ZnVuY3Rpb24gcih0KXtyZXR1cm4gZnVuY3Rpb24oKXtpLmVtaXQoInByb3BhZ2F0ZSIsW251bGwsIW9dLGEsITEsITEpLG89b3x8IXR9fXZhciBvPSExO2MobixmdW5jdGlvbihlLG4pe1Byb21pc2UucmVzb2x2ZShuKS50aGVuKHIoImFsbCI9PT10KSxyKCExKSl9KTt2YXIgYT1lLmFwcGx5KGYsYXJndW1lbnRzKSxzPWYucmVzb2x2ZShhKTtyZXR1cm4gc319KSxbInJlc29sdmUiLCJyZWplY3QiXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPWZbdF07Zlt0XT1mdW5jdGlvbih0KXt2YXIgbj1lLmFwcGx5KGYsYXJndW1lbnRzKTtyZXR1cm4gdCE9PW4mJmkuZW1pdCgicHJvcGFnYXRlIixbdCwhMF0sbiwhMSwhMSksbn19KSxmLnByb3RvdHlwZVsiY2F0Y2giXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKG51bGwsdCl9LGYucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZi5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpyfX0pLGMoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZiksZnVuY3Rpb24odCxlKXt0cnl7cltlXT1mW2VdfWNhdGNoKG4pe319KSxvLndyYXBJblBsYWNlKGYucHJvdG90eXBlLCJ0aGVuIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10aGlzLG49by5hcmdzVG9BcnJheS5hcHBseSh0aGlzLGFyZ3VtZW50cykscj1hKGUpO3IucHJvbWlzZT1lLG5bMF09cyhuWzBdLCJjYi0iLHIsbnVsbCwhMSksblsxXT1zKG5bMV0sImNiLSIscixudWxsLCExKTt2YXIgYz10LmFwcGx5KHRoaXMsbik7cmV0dXJuIHIubmV4dFByb21pc2U9YyxpLmVtaXQoInByb3BhZ2F0ZSIsW2UsITBdLGMsITEsITEpLGN9fSksaS5vbigiZXhlY3V0b3Itc3RhcnQiLGZ1bmN0aW9uKHQpe3RbMF09cyh0WzBdLCJyZXNvbHZlLSIsdGhpcyxudWxsLCExKSx0WzFdPXModFsxXSwicmVzb2x2ZS0iLHRoaXMsbnVsbCwhMSl9KSxpLm9uKCJleGVjdXRvci1lcnIiLGZ1bmN0aW9uKHQsZSxuKXt0WzFdKG4pfSksaS5vbigiY2ItZW5kIixmdW5jdGlvbih0LGUsbil7aS5lbWl0KCJwcm9wYWdhdGUiLFtuLCEwXSx0aGlzLm5leHRQcm9taXNlLCExLCExKX0pLGkub24oInByb3BhZ2F0ZSIsZnVuY3Rpb24odCxlLG4pe3RoaXMuZ2V0Q3R4JiYhZXx8KHRoaXMuZ2V0Q3R4PWZ1bmN0aW9uKCl7aWYodCBpbnN0YW5jZW9mIFByb21pc2UpdmFyIGU9aS5jb250ZXh0KHQpO3JldHVybiBlJiZlLmdldEN0eD9lLmdldEN0eCgpOnRoaXN9KX0pLHIudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iIitmfSl9LHt9XSwxMzpbZnVuY3Rpb24odCxlLG4pe3ZhciByPXQoImVlIikuZ2V0KCJyYWYiKSxvPXQoIndyYXAtZnVuY3Rpb24iKShyKSxpPSJlcXVlc3RBbmltYXRpb25GcmFtZSI7ZS5leHBvcnRzPXIsby5pblBsYWNlKHdpbmRvdyxbInIiK2ksIm1velIiK2ksIndlYmtpdFIiK2ksIm1zUiIraV0sInJhZi0iKSxyLm9uKCJyYWYtc3RhcnQiLGZ1bmN0aW9uKHQpe3RbMF09byh0WzBdLCJmbi0iKX0pfSx7fV0sMTQ6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSxuKXt0WzBdPWEodFswXSwiZm4tIixudWxsLG4pfWZ1bmN0aW9uIG8odCxlLG4pe3RoaXMubWV0aG9kPW4sdGhpcy50aW1lckR1cmF0aW9uPWlzTmFOKHRbMV0pPzA6K3RbMV0sdFswXT1hKHRbMF0sImZuLSIsdGhpcyxuKX12YXIgaT10KCJlZSIpLmdldCgidGltZXIiKSxhPXQoIndyYXAtZnVuY3Rpb24iKShpKSxzPSJzZXRUaW1lb3V0IixjPSJzZXRJbnRlcnZhbCIsZj0iY2xlYXJUaW1lb3V0Iix1PSItc3RhcnQiLGQ9Ii0iO2UuZXhwb3J0cz1pLGEuaW5QbGFjZSh3aW5kb3csW3MsInNldEltbWVkaWF0ZSJdLHMrZCksYS5pblBsYWNlKHdpbmRvdyxbY10sYytkKSxhLmluUGxhY2Uod2luZG93LFtmLCJjbGVhckltbWVkaWF0ZSJdLGYrZCksaS5vbihjK3UsciksaS5vbihzK3Usbyl9LHt9XSwxNTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXtkLmluUGxhY2UoZSxbIm9ucmVhZHlzdGF0ZWNoYW5nZSJdLCJmbi0iLHMpfWZ1bmN0aW9uIG8oKXt2YXIgdD10aGlzLGU9dS5jb250ZXh0KHQpO3QucmVhZHlTdGF0ZT4zJiYhZS5yZXNvbHZlZCYmKGUucmVzb2x2ZWQ9ITAsdS5lbWl0KCJ4aHItcmVzb2x2ZWQiLFtdLHQpKSxkLmluUGxhY2UodCx5LCJmbi0iLHMpfWZ1bmN0aW9uIGkodCl7eC5wdXNoKHQpLG0mJihFP0UudGhlbihhKTp3P3coYSk6KFI9LVIsTy5kYXRhPVIpKX1mdW5jdGlvbiBhKCl7Zm9yKHZhciB0PTA7dDx4Lmxlbmd0aDt0KyspcihbXSx4W3RdKTt4Lmxlbmd0aCYmKHg9W10pfWZ1bmN0aW9uIHModCxlKXtyZXR1cm4gZX1mdW5jdGlvbiBjKHQsZSl7Zm9yKHZhciBuIGluIHQpZVtuXT10W25dO3JldHVybiBlfXQoNyk7dmFyIGY9dCgiZWUiKSx1PWYuZ2V0KCJ4aHIiKSxkPXQoIndyYXAtZnVuY3Rpb24iKSh1KSxwPXQoMjMpLGw9TlJFVU0ubyxoPWwuWEhSLG09bC5NTyx2PWwuUFIsdz1sLlNJLGc9InJlYWR5c3RhdGVjaGFuZ2UiLHk9WyJvbmxvYWQiLCJvbmVycm9yIiwib25hYm9ydCIsIm9ubG9hZHN0YXJ0Iiwib25sb2FkZW5kIiwib25wcm9ncmVzcyIsIm9udGltZW91dCJdLHg9W107ZS5leHBvcnRzPXU7dmFyIGI9d2luZG93LlhNTEh0dHBSZXF1ZXN0PWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBoKHQpO3RyeXt1LmVtaXQoIm5ldy14aHIiLFtlXSxlKSxlLmFkZEV2ZW50TGlzdGVuZXIoZyxvLHAoITEpKX1jYXRjaChuKXt0cnl7dS5lbWl0KCJpbnRlcm5hbC1lcnJvciIsW25dKX1jYXRjaChyKXt9fXJldHVybiBlfTtpZihjKGgsYiksYi5wcm90b3R5cGU9aC5wcm90b3R5cGUsZC5pblBsYWNlKGIucHJvdG90eXBlLFsib3BlbiIsInNlbmQiXSwiLXhoci0iLHMpLHUub24oInNlbmQteGhyLXN0YXJ0IixmdW5jdGlvbih0LGUpe3IodCxlKSxpKGUpfSksdS5vbigib3Blbi14aHItc3RhcnQiLHIpLG0pe3ZhciBFPXYmJnYucmVzb2x2ZSgpO2lmKCF3JiYhdil7dmFyIFI9MSxPPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFIpO25ldyBtKGEpLm9ic2VydmUoTyx7Y2hhcmFjdGVyRGF0YTohMH0pfX1lbHNlIGYub24oImZuLWVuZCIsZnVuY3Rpb24odCl7dFswXSYmdFswXS50eXBlPT09Z3x8YSgpfSl9LHt9XSwxNjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7aWYoIXModCkpcmV0dXJuIG51bGw7dmFyIGU9d2luZG93Lk5SRVVNO2lmKCFlLmxvYWRlcl9jb25maWcpcmV0dXJuIG51bGw7dmFyIG49KGUubG9hZGVyX2NvbmZpZy5hY2NvdW50SUR8fCIiKS50b1N0cmluZygpfHxudWxsLHI9KGUubG9hZGVyX2NvbmZpZy5hZ2VudElEfHwiIikudG9TdHJpbmcoKXx8bnVsbCxmPShlLmxvYWRlcl9jb25maWcudHJ1c3RLZXl8fCIiKS50b1N0cmluZygpfHxudWxsO2lmKCFufHwhcilyZXR1cm4gbnVsbDt2YXIgaD1sLmdlbmVyYXRlU3BhbklkKCksbT1sLmdlbmVyYXRlVHJhY2VJZCgpLHY9RGF0ZS5ub3coKSx3PXtzcGFuSWQ6aCx0cmFjZUlkOm0sdGltZXN0YW1wOnZ9O3JldHVybih0LnNhbWVPcmlnaW58fGModCkmJnAoKSkmJih3LnRyYWNlQ29udGV4dFBhcmVudEhlYWRlcj1vKGgsbSksdy50cmFjZUNvbnRleHRTdGF0ZUhlYWRlcj1pKGgsdixuLHIsZikpLCh0LnNhbWVPcmlnaW4mJiF1KCl8fCF0LnNhbWVPcmlnaW4mJmModCkmJmQoKSkmJih3Lm5ld3JlbGljSGVhZGVyPWEoaCxtLHYsbixyLGYpKSx3fWZ1bmN0aW9uIG8odCxlKXtyZXR1cm4iMDAtIitlKyItIit0KyItMDEifWZ1bmN0aW9uIGkodCxlLG4scixvKXt2YXIgaT0wLGE9IiIscz0xLGM9IiIsZj0iIjtyZXR1cm4gbysiQG5yPSIraSsiLSIrcysiLSIrbisiLSIrcisiLSIrdCsiLSIrYSsiLSIrYysiLSIrZisiLSIrZX1mdW5jdGlvbiBhKHQsZSxuLHIsbyxpKXt2YXIgYT0iYnRvYSJpbiB3aW5kb3cmJiJmdW5jdGlvbiI9PXR5cGVvZiB3aW5kb3cuYnRvYTtpZighYSlyZXR1cm4gbnVsbDt2YXIgcz17djpbMCwxXSxkOnt0eToiQnJvd3NlciIsYWM6cixhcDpvLGlkOnQsdHI6ZSx0aTpufX07cmV0dXJuIGkmJnIhPT1pJiYocy5kLnRrPWkpLGJ0b2EoSlNPTi5zdHJpbmdpZnkocykpfWZ1bmN0aW9uIHModCl7cmV0dXJuIGYoKSYmYyh0KX1mdW5jdGlvbiBjKHQpe3ZhciBlPSExLG49e307aWYoImluaXQiaW4gTlJFVU0mJiJkaXN0cmlidXRlZF90cmFjaW5nImluIE5SRVVNLmluaXQmJihuPU5SRVVNLmluaXQuZGlzdHJpYnV0ZWRfdHJhY2luZyksdC5zYW1lT3JpZ2luKWU9ITA7ZWxzZSBpZihuLmFsbG93ZWRfb3JpZ2lucyBpbnN0YW5jZW9mIEFycmF5KWZvcih2YXIgcj0wO3I8bi5hbGxvd2VkX29yaWdpbnMubGVuZ3RoO3IrKyl7dmFyIG89aChuLmFsbG93ZWRfb3JpZ2luc1tyXSk7aWYodC5ob3N0bmFtZT09PW8uaG9zdG5hbWUmJnQucHJvdG9jb2w9PT1vLnByb3RvY29sJiZ0LnBvcnQ9PT1vLnBvcnQpe2U9ITA7YnJlYWt9fXJldHVybiBlfWZ1bmN0aW9uIGYoKXtyZXR1cm4iaW5pdCJpbiBOUkVVTSYmImRpc3RyaWJ1dGVkX3RyYWNpbmciaW4gTlJFVU0uaW5pdCYmISFOUkVVTS5pbml0LmRpc3RyaWJ1dGVkX3RyYWNpbmcuZW5hYmxlZH1mdW5jdGlvbiB1KCl7cmV0dXJuImluaXQiaW4gTlJFVU0mJiJkaXN0cmlidXRlZF90cmFjaW5nImluIE5SRVVNLmluaXQmJiEhTlJFVU0uaW5pdC5kaXN0cmlidXRlZF90cmFjaW5nLmV4Y2x1ZGVfbmV3cmVsaWNfaGVhZGVyfWZ1bmN0aW9uIGQoKXtyZXR1cm4iaW5pdCJpbiBOUkVVTSYmImRpc3RyaWJ1dGVkX3RyYWNpbmciaW4gTlJFVU0uaW5pdCYmTlJFVU0uaW5pdC5kaXN0cmlidXRlZF90cmFjaW5nLmNvcnNfdXNlX25ld3JlbGljX2hlYWRlciE9PSExfWZ1bmN0aW9uIHAoKXtyZXR1cm4iaW5pdCJpbiBOUkVVTSYmImRpc3RyaWJ1dGVkX3RyYWNpbmciaW4gTlJFVU0uaW5pdCYmISFOUkVVTS5pbml0LmRpc3RyaWJ1dGVkX3RyYWNpbmcuY29yc191c2VfdHJhY2Vjb250ZXh0X2hlYWRlcnN9dmFyIGw9dCgyOCksaD10KDE4KTtlLmV4cG9ydHM9e2dlbmVyYXRlVHJhY2VQYXlsb2FkOnIsc2hvdWxkR2VuZXJhdGVUcmFjZTpzfX0se31dLDE3OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXt2YXIgZT10aGlzLnBhcmFtcyxuPXRoaXMubWV0cmljcztpZighdGhpcy5lbmRlZCl7dGhpcy5lbmRlZD0hMDtmb3IodmFyIHI9MDtyPHA7cisrKXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihkW3JdLHRoaXMubGlzdGVuZXIsITEpO3JldHVybiBlLnByb3RvY29sJiYiZGF0YSI9PT1lLnByb3RvY29sP3ZvaWQgZygiQWpheC9EYXRhVXJsL0V4Y2x1ZGVkIik6dm9pZChlLmFib3J0ZWR8fChuLmR1cmF0aW9uPWEubm93KCktdGhpcy5zdGFydFRpbWUsdGhpcy5sb2FkQ2FwdHVyZUNhbGxlZHx8NCE9PXQucmVhZHlTdGF0ZT9udWxsPT1lLnN0YXR1cyYmKGUuc3RhdHVzPTApOmkodGhpcyx0KSxuLmNiVGltZT10aGlzLmNiVGltZSxzKCJ4aHIiLFtlLG4sdGhpcy5zdGFydFRpbWUsdGhpcy5lbmRUaW1lLCJ4aHIiXSx0aGlzKSkpfX1mdW5jdGlvbiBvKHQsZSl7dmFyIG49YyhlKSxyPXQucGFyYW1zO3IuaG9zdG5hbWU9bi5ob3N0bmFtZSxyLnBvcnQ9bi5wb3J0LHIucHJvdG9jb2w9bi5wcm90b2NvbCxyLmhvc3Q9bi5ob3N0bmFtZSsiOiIrbi5wb3J0LHIucGF0aG5hbWU9bi5wYXRobmFtZSx0LnBhcnNlZE9yaWdpbj1uLHQuc2FtZU9yaWdpbj1uLnNhbWVPcmlnaW59ZnVuY3Rpb24gaSh0LGUpe3QucGFyYW1zLnN0YXR1cz1lLnN0YXR1czt2YXIgbj12KGUsdC5sYXN0U2l6ZSk7aWYobiYmKHQubWV0cmljcy5yeFNpemU9biksdC5zYW1lT3JpZ2luKXt2YXIgcj1lLmdldFJlc3BvbnNlSGVhZGVyKCJYLU5ld1JlbGljLUFwcC1EYXRhIik7ciYmKHQucGFyYW1zLmNhdD1yLnNwbGl0KCIsICIpLnBvcCgpKX10LmxvYWRDYXB0dXJlQ2FsbGVkPSEwfXZhciBhPXQoImxvYWRlciIpO2lmKGEueGhyV3JhcHBhYmxlJiYhYS5kaXNhYmxlZCl7dmFyIHM9dCgiaGFuZGxlIiksYz10KDE4KSxmPXQoMTYpLmdlbmVyYXRlVHJhY2VQYXlsb2FkLHU9dCgiZWUiKSxkPVsibG9hZCIsImVycm9yIiwiYWJvcnQiLCJ0aW1lb3V0Il0scD1kLmxlbmd0aCxsPXQoImlkIiksaD10KDI0KSxtPXQoMjIpLHY9dCgxOSksdz10KDIzKSxnPXQoMjUpLnJlY29yZFN1cHBvcnRhYmlsaXR5LHk9TlJFVU0uby5SRVEseD13aW5kb3cuWE1MSHR0cFJlcXVlc3Q7YS5mZWF0dXJlcy54aHI9ITAsdCgxNSksdCg4KSx1Lm9uKCJuZXcteGhyIixmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UudG90YWxDYnM9MCxlLmNhbGxlZD0wLGUuY2JUaW1lPTAsZS5lbmQ9cixlLmVuZGVkPSExLGUueGhyR3VpZHM9e30sZS5sYXN0U2l6ZT1udWxsLGUubG9hZENhcHR1cmVDYWxsZWQ9ITEsZS5wYXJhbXM9dGhpcy5wYXJhbXN8fHt9LGUubWV0cmljcz10aGlzLm1ldHJpY3N8fHt9LHQuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24obil7aShlLHQpfSx3KCExKSksaCYmKGg+MzR8fGg8MTApfHx0LmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixmdW5jdGlvbih0KXtlLmxhc3RTaXplPXQubG9hZGVkfSx3KCExKSl9KSx1Lm9uKCJvcGVuLXhoci1zdGFydCIsZnVuY3Rpb24odCl7dGhpcy5wYXJhbXM9e21ldGhvZDp0WzBdfSxvKHRoaXMsdFsxXSksdGhpcy5tZXRyaWNzPXt9fSksdS5vbigib3Blbi14aHItZW5kIixmdW5jdGlvbih0LGUpeyJsb2FkZXJfY29uZmlnImluIE5SRVVNJiYieHBpZCJpbiBOUkVVTS5sb2FkZXJfY29uZmlnJiZ0aGlzLnNhbWVPcmlnaW4mJmUuc2V0UmVxdWVzdEhlYWRlcigiWC1OZXdSZWxpYy1JRCIsTlJFVU0ubG9hZGVyX2NvbmZpZy54cGlkKTt2YXIgbj1mKHRoaXMucGFyc2VkT3JpZ2luKTtpZihuKXt2YXIgcj0hMTtuLm5ld3JlbGljSGVhZGVyJiYoZS5zZXRSZXF1ZXN0SGVhZGVyKCJuZXdyZWxpYyIsbi5uZXdyZWxpY0hlYWRlcikscj0hMCksbi50cmFjZUNvbnRleHRQYXJlbnRIZWFkZXImJihlLnNldFJlcXVlc3RIZWFkZXIoInRyYWNlcGFyZW50IixuLnRyYWNlQ29udGV4dFBhcmVudEhlYWRlciksbi50cmFjZUNvbnRleHRTdGF0ZUhlYWRlciYmZS5zZXRSZXF1ZXN0SGVhZGVyKCJ0cmFjZXN0YXRlIixuLnRyYWNlQ29udGV4dFN0YXRlSGVhZGVyKSxyPSEwKSxyJiYodGhpcy5kdD1uKX19KSx1Lm9uKCJzZW5kLXhoci1zdGFydCIsZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLm1ldHJpY3Mscj10WzBdLG89dGhpcztpZihuJiZyKXt2YXIgaT1tKHIpO2kmJihuLnR4U2l6ZT1pKX10aGlzLnN0YXJ0VGltZT1hLm5vdygpLHRoaXMubGlzdGVuZXI9ZnVuY3Rpb24odCl7dHJ5eyJhYm9ydCIhPT10LnR5cGV8fG8ubG9hZENhcHR1cmVDYWxsZWR8fChvLnBhcmFtcy5hYm9ydGVkPSEwKSwoImxvYWQiIT09dC50eXBlfHxvLmNhbGxlZD09PW8udG90YWxDYnMmJihvLm9ubG9hZENhbGxlZHx8ImZ1bmN0aW9uIiE9dHlwZW9mIGUub25sb2FkKSkmJm8uZW5kKGUpfWNhdGNoKG4pe3RyeXt1LmVtaXQoImludGVybmFsLWVycm9yIixbbl0pfWNhdGNoKHIpe319fTtmb3IodmFyIHM9MDtzPHA7cysrKWUuYWRkRXZlbnRMaXN0ZW5lcihkW3NdLHRoaXMubGlzdGVuZXIsdyghMSkpfSksdS5vbigieGhyLWNiLXRpbWUiLGZ1bmN0aW9uKHQsZSxuKXt0aGlzLmNiVGltZSs9dCxlP3RoaXMub25sb2FkQ2FsbGVkPSEwOnRoaXMuY2FsbGVkKz0xLHRoaXMuY2FsbGVkIT09dGhpcy50b3RhbENic3x8IXRoaXMub25sb2FkQ2FsbGVkJiYiZnVuY3Rpb24iPT10eXBlb2Ygbi5vbmxvYWR8fHRoaXMuZW5kKG4pfSksdS5vbigieGhyLWxvYWQtYWRkZWQiLGZ1bmN0aW9uKHQsZSl7dmFyIG49IiIrbCh0KSshIWU7dGhpcy54aHJHdWlkcyYmIXRoaXMueGhyR3VpZHNbbl0mJih0aGlzLnhockd1aWRzW25dPSEwLHRoaXMudG90YWxDYnMrPTEpfSksdS5vbigieGhyLWxvYWQtcmVtb3ZlZCIsZnVuY3Rpb24odCxlKXt2YXIgbj0iIitsKHQpKyEhZTt0aGlzLnhockd1aWRzJiZ0aGlzLnhockd1aWRzW25dJiYoZGVsZXRlIHRoaXMueGhyR3VpZHNbbl0sdGhpcy50b3RhbENicy09MSl9KSx1Lm9uKCJ4aHItcmVzb2x2ZWQiLGZ1bmN0aW9uKCl7dGhpcy5lbmRUaW1lPWEubm93KCl9KSx1Lm9uKCJhZGRFdmVudExpc3RlbmVyLWVuZCIsZnVuY3Rpb24odCxlKXtlIGluc3RhbmNlb2YgeCYmImxvYWQiPT09dFswXSYmdS5lbWl0KCJ4aHItbG9hZC1hZGRlZCIsW3RbMV0sdFsyXV0sZSl9KSx1Lm9uKCJyZW1vdmVFdmVudExpc3RlbmVyLWVuZCIsZnVuY3Rpb24odCxlKXtlIGluc3RhbmNlb2YgeCYmImxvYWQiPT09dFswXSYmdS5lbWl0KCJ4aHItbG9hZC1yZW1vdmVkIixbdFsxXSx0WzJdXSxlKX0pLHUub24oImZuLXN0YXJ0IixmdW5jdGlvbih0LGUsbil7ZSBpbnN0YW5jZW9mIHgmJigib25sb2FkIj09PW4mJih0aGlzLm9ubG9hZD0hMCksKCJsb2FkIj09PSh0WzBdJiZ0WzBdLnR5cGUpfHx0aGlzLm9ubG9hZCkmJih0aGlzLnhockNiU3RhcnQ9YS5ub3coKSkpfSksdS5vbigiZm4tZW5kIixmdW5jdGlvbih0LGUpe3RoaXMueGhyQ2JTdGFydCYmdS5lbWl0KCJ4aHItY2ItdGltZSIsW2Eubm93KCktdGhpcy54aHJDYlN0YXJ0LHRoaXMub25sb2FkLGVdLGUpfSksdS5vbigiZmV0Y2gtYmVmb3JlLXN0YXJ0IixmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQsZSl7dmFyIG49ITE7cmV0dXJuIGUubmV3cmVsaWNIZWFkZXImJih0LnNldCgibmV3cmVsaWMiLGUubmV3cmVsaWNIZWFkZXIpLG49ITApLGUudHJhY2VDb250ZXh0UGFyZW50SGVhZGVyJiYodC5zZXQoInRyYWNlcGFyZW50IixlLnRyYWNlQ29udGV4dFBhcmVudEhlYWRlciksZS50cmFjZUNvbnRleHRTdGF0ZUhlYWRlciYmdC5zZXQoInRyYWNlc3RhdGUiLGUudHJhY2VDb250ZXh0U3RhdGVIZWFkZXIpLG49ITApLG59dmFyIG4scj10WzFdfHx7fTsic3RyaW5nIj09dHlwZW9mIHRbMF0/bj10WzBdOnRbMF0mJnRbMF0udXJsP249dFswXS51cmw6d2luZG93LlVSTCYmdFswXSYmdFswXWluc3RhbmNlb2YgVVJMJiYobj10WzBdLmhyZWYpLG4mJih0aGlzLnBhcnNlZE9yaWdpbj1jKG4pLHRoaXMuc2FtZU9yaWdpbj10aGlzLnBhcnNlZE9yaWdpbi5zYW1lT3JpZ2luKTt2YXIgbz1mKHRoaXMucGFyc2VkT3JpZ2luKTtpZihvJiYoby5uZXdyZWxpY0hlYWRlcnx8by50cmFjZUNvbnRleHRQYXJlbnRIZWFkZXIpKWlmKCJzdHJpbmciPT10eXBlb2YgdFswXXx8d2luZG93LlVSTCYmdFswXSYmdFswXWluc3RhbmNlb2YgVVJMKXt2YXIgaT17fTtmb3IodmFyIGEgaW4gcilpW2FdPXJbYV07aS5oZWFkZXJzPW5ldyBIZWFkZXJzKHIuaGVhZGVyc3x8e30pLGUoaS5oZWFkZXJzLG8pJiYodGhpcy5kdD1vKSx0Lmxlbmd0aD4xP3RbMV09aTp0LnB1c2goaSl9ZWxzZSB0WzBdJiZ0WzBdLmhlYWRlcnMmJmUodFswXS5oZWFkZXJzLG8pJiYodGhpcy5kdD1vKX0pLHUub24oImZldGNoLXN0YXJ0IixmdW5jdGlvbih0LGUpe3RoaXMucGFyYW1zPXt9LHRoaXMubWV0cmljcz17fSx0aGlzLnN0YXJ0VGltZT1hLm5vdygpLHRoaXMuZHQ9ZSx0Lmxlbmd0aD49MSYmKHRoaXMudGFyZ2V0PXRbMF0pLHQubGVuZ3RoPj0yJiYodGhpcy5vcHRzPXRbMV0pO3ZhciBuLHI9dGhpcy5vcHRzfHx7fSxpPXRoaXMudGFyZ2V0O2lmKCJzdHJpbmciPT10eXBlb2YgaT9uPWk6Im9iamVjdCI9PXR5cGVvZiBpJiZpIGluc3RhbmNlb2YgeT9uPWkudXJsOndpbmRvdy5VUkwmJiJvYmplY3QiPT10eXBlb2YgaSYmaSBpbnN0YW5jZW9mIFVSTCYmKG49aS5ocmVmKSxvKHRoaXMsbiksImRhdGEiIT09dGhpcy5wYXJhbXMucHJvdG9jb2wpe3ZhciBzPSgiIisoaSYmaSBpbnN0YW5jZW9mIHkmJmkubWV0aG9kfHxyLm1ldGhvZHx8IkdFVCIpKS50b1VwcGVyQ2FzZSgpO3RoaXMucGFyYW1zLm1ldGhvZD1zLHRoaXMudHhTaXplPW0oci5ib2R5KXx8MH19KSx1Lm9uKCJmZXRjaC1kb25lIixmdW5jdGlvbih0LGUpe2lmKHRoaXMuZW5kVGltZT1hLm5vdygpLHRoaXMucGFyYW1zfHwodGhpcy5wYXJhbXM9e30pLCJkYXRhIj09PXRoaXMucGFyYW1zLnByb3RvY29sKXJldHVybiB2b2lkIGcoIkFqYXgvRGF0YVVybC9FeGNsdWRlZCIpO3RoaXMucGFyYW1zLnN0YXR1cz1lP2Uuc3RhdHVzOjA7dmFyIG47InN0cmluZyI9PXR5cGVvZiB0aGlzLnJ4U2l6ZSYmdGhpcy5yeFNpemUubGVuZ3RoPjAmJihuPSt0aGlzLnJ4U2l6ZSk7dmFyIHI9e3R4U2l6ZTp0aGlzLnR4U2l6ZSxyeFNpemU6bixkdXJhdGlvbjphLm5vdygpLXRoaXMuc3RhcnRUaW1lfTtzKCJ4aHIiLFt0aGlzLnBhcmFtcyxyLHRoaXMuc3RhcnRUaW1lLHRoaXMuZW5kVGltZSwiZmV0Y2giXSx0aGlzKX0pfX0se31dLDE4OltmdW5jdGlvbih0LGUsbil7dmFyIHI9e307ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKHQgaW4gcilyZXR1cm4gclt0XTtpZigwPT09KHR8fCIiKS5pbmRleE9mKCJkYXRhOiIpKXJldHVybntwcm90b2NvbDoiZGF0YSJ9O3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKSxuPXdpbmRvdy5sb2NhdGlvbixvPXt9O2UuaHJlZj10LG8ucG9ydD1lLnBvcnQ7dmFyIGk9ZS5ocmVmLnNwbGl0KCI6Ly8iKTshby5wb3J0JiZpWzFdJiYoby5wb3J0PWlbMV0uc3BsaXQoIi8iKVswXS5zcGxpdCgiQCIpLnBvcCgpLnNwbGl0KCI6IilbMV0pLG8ucG9ydCYmIjAiIT09by5wb3J0fHwoby5wb3J0PSJodHRwcyI9PT1pWzBdPyI0NDMiOiI4MCIpLG8uaG9zdG5hbWU9ZS5ob3N0bmFtZXx8bi5ob3N0bmFtZSxvLnBhdGhuYW1lPWUucGF0aG5hbWUsby5wcm90b2NvbD1pWzBdLCIvIiE9PW8ucGF0aG5hbWUuY2hhckF0KDApJiYoby5wYXRobmFtZT0iLyIrby5wYXRobmFtZSk7dmFyIGE9IWUucHJvdG9jb2x8fCI6Ij09PWUucHJvdG9jb2x8fGUucHJvdG9jb2w9PT1uLnByb3RvY29sLHM9ZS5ob3N0bmFtZT09PWRvY3VtZW50LmRvbWFpbiYmZS5wb3J0PT09bi5wb3J0O3JldHVybiBvLnNhbWVPcmlnaW49YSYmKCFlLmhvc3RuYW1lfHxzKSwiLyI9PT1vLnBhdGhuYW1lJiYoclt0XT1vKSxvfX0se31dLDE5OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3ZhciBuPXQucmVzcG9uc2VUeXBlO3JldHVybiJqc29uIj09PW4mJm51bGwhPT1lP2U6ImFycmF5YnVmZmVyIj09PW58fCJibG9iIj09PW58fCJqc29uIj09PW4/byh0LnJlc3BvbnNlKToidGV4dCI9PT1ufHwiIj09PW58fHZvaWQgMD09PW4/byh0LnJlc3BvbnNlVGV4dCk6dm9pZCAwfXZhciBvPXQoMjIpO2UuZXhwb3J0cz1yfSx7fV0sMjA6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8odCxlLG4scil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHUucmVjb3JkU3VwcG9ydGFiaWxpdHkoIkFQSS8iK2UrIi9jYWxsZWQiKSxpKHQrZSxbZi5ub3coKV0uY29uY2F0KHMoYXJndW1lbnRzKSksbj9udWxsOnRoaXMsciksbj92b2lkIDA6dGhpc319dmFyIGk9dCgiaGFuZGxlIiksYT10KDMxKSxzPXQoMzIpLGM9dCgiZWUiKS5nZXQoInRyYWNlciIpLGY9dCgibG9hZGVyIiksdT10KDI1KSxkPU5SRVVNOyJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93Lm5ld3JlbGljJiYobmV3cmVsaWM9ZCk7dmFyIHA9WyJzZXRQYWdlVmlld05hbWUiLCJzZXRDdXN0b21BdHRyaWJ1dGUiLCJzZXRFcnJvckhhbmRsZXIiLCJmaW5pc2hlZCIsImFkZFRvVHJhY2UiLCJpbmxpbmVIaXQiLCJhZGRSZWxlYXNlIl0sbD0iYXBpLSIsaD1sKyJpeG4tIjthKHAsZnVuY3Rpb24odCxlKXtkW2VdPW8obCxlLCEwLCJhcGkiKX0pLGQuYWRkUGFnZUFjdGlvbj1vKGwsImFkZFBhZ2VBY3Rpb24iLCEwKSxkLnNldEN1cnJlbnRSb3V0ZU5hbWU9byhsLCJyb3V0ZU5hbWUiLCEwKSxlLmV4cG9ydHM9bmV3cmVsaWMsZC5pbnRlcmFjdGlvbj1mdW5jdGlvbigpe3JldHVybihuZXcgcikuZ2V0KCl9O3ZhciBtPXIucHJvdG90eXBlPXtjcmVhdGVUcmFjZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj17fSxyPXRoaXMsbz0iZnVuY3Rpb24iPT10eXBlb2YgZTtyZXR1cm4gaShoKyJ0cmFjZXIiLFtmLm5vdygpLHQsbl0sciksZnVuY3Rpb24oKXtpZihjLmVtaXQoKG8/IiI6Im5vLSIpKyJmbi1zdGFydCIsW2Yubm93KCkscixvXSxuKSxvKXRyeXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2godCl7dGhyb3cgYy5lbWl0KCJmbi1lcnIiLFthcmd1bWVudHMsdGhpcyx0XSxuKSx0fWZpbmFsbHl7Yy5lbWl0KCJmbi1lbmQiLFtmLm5vdygpXSxuKX19fX07YSgiYWN0aW9uVGV4dCxzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24odCxlKXttW2VdPW8oaCxlKX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKHQsZSl7InN0cmluZyI9PXR5cGVvZiB0JiYodD1uZXcgRXJyb3IodCkpLHUucmVjb3JkU3VwcG9ydGFiaWxpdHkoIkFQSS9ub3RpY2VFcnJvci9jYWxsZWQiKSxpKCJlcnIiLFt0LGYubm93KCksITEsZV0pfX0se31dLDIxOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXtpZihOUkVVTS5pbml0KXtmb3IodmFyIGU9TlJFVU0uaW5pdCxuPXQuc3BsaXQoIi4iKSxyPTA7cjxuLmxlbmd0aC0xO3IrKylpZihlPWVbbltyXV0sIm9iamVjdCIhPXR5cGVvZiBlKXJldHVybjtyZXR1cm4gZT1lW25bbi5sZW5ndGgtMV1dfX1lLmV4cG9ydHM9e2dldENvbmZpZ3VyYXRpb246cn19LHt9XSwyMjpbZnVuY3Rpb24odCxlLG4pe2UuZXhwb3J0cz1mdW5jdGlvbih0KXtpZigic3RyaW5nIj09dHlwZW9mIHQmJnQubGVuZ3RoKXJldHVybiB0Lmxlbmd0aDtpZigib2JqZWN0Ij09dHlwZW9mIHQpe2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgQXJyYXlCdWZmZXImJnQgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciYmdC5ieXRlTGVuZ3RoKXJldHVybiB0LmJ5dGVMZW5ndGg7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBCbG9iJiZ0IGluc3RhbmNlb2YgQmxvYiYmdC5zaXplKXJldHVybiB0LnNpemU7aWYoISgidW5kZWZpbmVkIiE9dHlwZW9mIEZvcm1EYXRhJiZ0IGluc3RhbmNlb2YgRm9ybURhdGEpKXRyeXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkodCkubGVuZ3RofWNhdGNoKGUpe3JldHVybn19fX0se31dLDIzOltmdW5jdGlvbih0LGUsbil7dmFyIHI9ITE7dHJ5e3ZhciBvPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwicGFzc2l2ZSIse2dldDpmdW5jdGlvbigpe3I9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInRlc3RQYXNzaXZlIixudWxsLG8pLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJ0ZXN0UGFzc2l2ZSIsbnVsbCxvKX1jYXRjaChpKXt9ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiByP3twYXNzaXZlOiEwLGNhcHR1cmU6ISF0fTohIXR9fSx7fV0sMjQ6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgcj0wLG89bmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvRmlyZWZveFtcL1xzXShcZCtcLlxkKykvKTtvJiYocj0rb1sxXSksZS5leHBvcnRzPXJ9LHt9XSwyNTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXt2YXIgbj1bYSx0LHtuYW1lOnR9LGVdO3JldHVybiBpKCJzdG9yZU1ldHJpYyIsbixudWxsLCJhcGkiKSxufWZ1bmN0aW9uIG8odCxlKXt2YXIgbj1bcyx0LHtuYW1lOnR9LGVdO3JldHVybiBpKCJzdG9yZUV2ZW50TWV0cmljcyIsbixudWxsLCJhcGkiKSxufXZhciBpPXQoImhhbmRsZSIpLGE9InNtIixzPSJjbSI7ZS5leHBvcnRzPXtjb25zdGFudHM6e1NVUFBPUlRBQklMSVRZX01FVFJJQzphLENVU1RPTV9NRVRSSUM6c30scmVjb3JkU3VwcG9ydGFiaWxpdHk6cixyZWNvcmRDdXN0b206b319LHt9XSwyNjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIoKXtyZXR1cm4gcy5leGlzdHMmJnBlcmZvcm1hbmNlLm5vdz9NYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm5vdygpKTooaT1NYXRoLm1heCgobmV3IERhdGUpLmdldFRpbWUoKSxpKSktYX1mdW5jdGlvbiBvKCl7cmV0dXJuIGl9dmFyIGk9KG5ldyBEYXRlKS5nZXRUaW1lKCksYT1pLHM9dCgzMyk7ZS5leHBvcnRzPXIsZS5leHBvcnRzLm9mZnNldD1hLGUuZXhwb3J0cy5nZXRMYXN0VGltZXN0YW1wPW99LHt9XSwyNzpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXt2YXIgbj10LmdldEVudHJpZXMoKTtuLmZvckVhY2goZnVuY3Rpb24odCl7ImZpcnN0LXBhaW50Ij09PXQubmFtZT9sKCJ0aW1pbmciLFsiZnAiLE1hdGguZmxvb3IodC5zdGFydFRpbWUpXSk6ImZpcnN0LWNvbnRlbnRmdWwtcGFpbnQiPT09dC5uYW1lJiZsKCJ0aW1pbmciLFsiZmNwIixNYXRoLmZsb29yKHQuc3RhcnRUaW1lKV0pfSl9ZnVuY3Rpb24gbyh0LGUpe3ZhciBuPXQuZ2V0RW50cmllcygpO2lmKG4ubGVuZ3RoPjApe3ZhciByPW5bbi5sZW5ndGgtMV07aWYoZiYmZjxyLnN0YXJ0VGltZSlyZXR1cm47dmFyIG89W3JdLGk9YSh7fSk7aSYmby5wdXNoKGkpLGwoImxjcCIsbyl9fWZ1bmN0aW9uIGkodCl7dC5nZXRFbnRyaWVzKCkuZm9yRWFjaChmdW5jdGlvbih0KXt0LmhhZFJlY2VudElucHV0fHxsKCJjbHMiLFt0XSl9KX1mdW5jdGlvbiBhKHQpe3ZhciBlPW5hdmlnYXRvci5jb25uZWN0aW9ufHxuYXZpZ2F0b3IubW96Q29ubmVjdGlvbnx8bmF2aWdhdG9yLndlYmtpdENvbm5lY3Rpb247aWYoZSlyZXR1cm4gZS50eXBlJiYodFsibmV0LXR5cGUiXT1lLnR5cGUpLGUuZWZmZWN0aXZlVHlwZSYmKHRbIm5ldC1ldHlwZSJdPWUuZWZmZWN0aXZlVHlwZSksZS5ydHQmJih0WyJuZXQtcnR0Il09ZS5ydHQpLGUuZG93bmxpbmsmJih0WyJuZXQtZGxpbmsiXT1lLmRvd25saW5rKSx0fWZ1bmN0aW9uIHModCl7aWYodCBpbnN0YW5jZW9mIHcmJiF5KXt2YXIgZT1NYXRoLnJvdW5kKHQudGltZVN0YW1wKSxuPXt0eXBlOnQudHlwZX07YShuKSxlPD1oLm5vdygpP24uZmlkPWgubm93KCktZTplPmgub2Zmc2V0JiZlPD1EYXRlLm5vdygpPyhlLT1oLm9mZnNldCxuLmZpZD1oLm5vdygpLWUpOmU9aC5ub3coKSx5PSEwLGwoInRpbWluZyIsWyJmaSIsZSxuXSl9fWZ1bmN0aW9uIGModCl7ImhpZGRlbiI9PT10JiYoZj1oLm5vdygpLGwoInBhZ2VIaWRlIixbZl0pKX1pZighKCJpbml0ImluIE5SRVVNJiYicGFnZV92aWV3X3RpbWluZyJpbiBOUkVVTS5pbml0JiYiZW5hYmxlZCJpbiBOUkVVTS5pbml0LnBhZ2Vfdmlld190aW1pbmcmJk5SRVVNLmluaXQucGFnZV92aWV3X3RpbWluZy5lbmFibGVkPT09ITEpKXt2YXIgZix1LGQscCxsPXQoImhhbmRsZSIpLGg9dCgibG9hZGVyIiksbT10KDMwKSx2PXQoMjMpLHc9TlJFVU0uby5FVjtpZigiUGVyZm9ybWFuY2VPYnNlcnZlciJpbiB3aW5kb3cmJiJmdW5jdGlvbiI9PXR5cGVvZiB3aW5kb3cuUGVyZm9ybWFuY2VPYnNlcnZlcil7dT1uZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihyKTt0cnl7dS5vYnNlcnZlKHtlbnRyeVR5cGVzOlsicGFpbnQiXX0pfWNhdGNoKGcpe31kPW5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKG8pO3RyeXtkLm9ic2VydmUoe2VudHJ5VHlwZXM6WyJsYXJnZXN0LWNvbnRlbnRmdWwtcGFpbnQiXX0pfWNhdGNoKGcpe31wPW5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKGkpO3RyeXtwLm9ic2VydmUoe3R5cGU6ImxheW91dC1zaGlmdCIsYnVmZmVyZWQ6ITB9KX1jYXRjaChnKXt9fWlmKCJhZGRFdmVudExpc3RlbmVyImluIGRvY3VtZW50KXt2YXIgeT0hMSx4PVsiY2xpY2siLCJrZXlkb3duIiwibW91c2Vkb3duIiwicG9pbnRlcmRvd24iLCJ0b3VjaHN0YXJ0Il07eC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIodCxzLHYoITEpKX0pfW0oYyl9fSx7fV0sMjg6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKCl7ZnVuY3Rpb24gdCgpe3JldHVybiBlPzE1JmVbbisrXToxNipNYXRoLnJhbmRvbSgpfDB9dmFyIGU9bnVsbCxuPTAscj13aW5kb3cuY3J5cHRvfHx3aW5kb3cubXNDcnlwdG87ciYmci5nZXRSYW5kb21WYWx1ZXMmJihlPXIuZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KDMxKSkpO2Zvcih2YXIgbyxpPSJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgiLGE9IiIscz0wO3M8aS5sZW5ndGg7cysrKW89aVtzXSwieCI9PT1vP2ErPXQoKS50b1N0cmluZygxNik6InkiPT09bz8obz0zJnQoKXw4LGErPW8udG9TdHJpbmcoMTYpKTphKz1vO3JldHVybiBhfWZ1bmN0aW9uIG8oKXtyZXR1cm4gYSgxNil9ZnVuY3Rpb24gaSgpe3JldHVybiBhKDMyKX1mdW5jdGlvbiBhKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbj8xNSZuW3IrK106MTYqTWF0aC5yYW5kb20oKXwwfXZhciBuPW51bGwscj0wLG89d2luZG93LmNyeXB0b3x8d2luZG93Lm1zQ3J5cHRvO28mJm8uZ2V0UmFuZG9tVmFsdWVzJiZVaW50OEFycmF5JiYobj1vLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSh0KSkpO2Zvcih2YXIgaT1bXSxhPTA7YTx0O2ErKylpLnB1c2goZSgpLnRvU3RyaW5nKDE2KSk7cmV0dXJuIGkuam9pbigiIil9ZS5leHBvcnRzPXtnZW5lcmF0ZVV1aWQ6cixnZW5lcmF0ZVNwYW5JZDpvLGdlbmVyYXRlVHJhY2VJZDppfX0se31dLDI5OltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe2lmKCFvKXJldHVybiExO2lmKHQhPT1vKXJldHVybiExO2lmKCFlKXJldHVybiEwO2lmKCFpKXJldHVybiExO2Zvcih2YXIgbj1pLnNwbGl0KCIuIikscj1lLnNwbGl0KCIuIiksYT0wO2E8ci5sZW5ndGg7YSsrKWlmKHJbYV0hPT1uW2FdKXJldHVybiExO3JldHVybiEwfXZhciBvPW51bGwsaT1udWxsLGE9L1ZlcnNpb25cLyhcUyspXHMrU2FmYXJpLztpZihuYXZpZ2F0b3IudXNlckFnZW50KXt2YXIgcz1uYXZpZ2F0b3IudXNlckFnZW50LGM9cy5tYXRjaChhKTtjJiZzLmluZGV4T2YoIkNocm9tZSIpPT09LTEmJnMuaW5kZXhPZigiQ2hyb21pdW0iKT09PS0xJiYobz0iU2FmYXJpIixpPWNbMV0pfWUuZXhwb3J0cz17YWdlbnQ6byx2ZXJzaW9uOmksbWF0Y2g6cn19LHt9XSwzMDpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCl7ZnVuY3Rpb24gZSgpe3QocyYmZG9jdW1lbnRbc10/ZG9jdW1lbnRbc106ZG9jdW1lbnRbaV0/ImhpZGRlbiI6InZpc2libGUiKX0iYWRkRXZlbnRMaXN0ZW5lciJpbiBkb2N1bWVudCYmYSYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihhLGUsbyghMSkpfXZhciBvPXQoMjMpO2UuZXhwb3J0cz1yO3ZhciBpLGEsczsidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50LmhpZGRlbj8oaT0iaGlkZGVuIixhPSJ2aXNpYmlsaXR5Y2hhbmdlIixzPSJ2aXNpYmlsaXR5U3RhdGUiKToidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50Lm1zSGlkZGVuPyhpPSJtc0hpZGRlbiIsYT0ibXN2aXNpYmlsaXR5Y2hhbmdlIik6InVuZGVmaW5lZCIhPXR5cGVvZiBkb2N1bWVudC53ZWJraXRIaWRkZW4mJihpPSJ3ZWJraXRIaWRkZW4iLGE9IndlYmtpdHZpc2liaWxpdHljaGFuZ2UiLHM9IndlYmtpdFZpc2liaWxpdHlTdGF0ZSIpfSx7fV0sMzE6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7dmFyIG49W10scj0iIixpPTA7Zm9yKHIgaW4gdClvLmNhbGwodCxyKSYmKG5baV09ZShyLHRbcl0pLGkrPTEpO3JldHVybiBufXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZS5leHBvcnRzPXJ9LHt9XSwzMjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4pe2V8fChlPTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49dD90Lmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLWV8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT10W2Urcl07cmV0dXJuIGl9ZS5leHBvcnRzPXJ9LHt9XSwzMzpbZnVuY3Rpb24odCxlLG4pe2UuZXhwb3J0cz17ZXhpc3RzOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlJiZ3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nJiYidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0fX0se31dLGVlOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBvKHQpe2Z1bmN0aW9uIGUodCl7cmV0dXJuIHQmJnQgaW5zdGFuY2VvZiByP3Q6dD9mKHQsYyxhKTphKCl9ZnVuY3Rpb24gbihuLHIsbyxpLGEpe2lmKGEhPT0hMSYmKGE9ITApLCFsLmFib3J0ZWR8fGkpe3QmJmEmJnQobixyLG8pO2Zvcih2YXIgcz1lKG8pLGM9bShuKSxmPWMubGVuZ3RoLHU9MDt1PGY7dSsrKWNbdV0uYXBwbHkocyxyKTt2YXIgcD1kW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW3gsbixyLHNdKSxzfX1mdW5jdGlvbiBpKHQsZSl7Z1t0XT1tKHQpLmNvbmNhdChlKX1mdW5jdGlvbiBoKHQsZSl7dmFyIG49Z1t0XTtpZihuKWZvcih2YXIgcj0wO3I8bi5sZW5ndGg7cisrKW5bcl09PT1lJiZuLnNwbGljZShyLDEpfWZ1bmN0aW9uIG0odCl7cmV0dXJuIGdbdF18fFtdfWZ1bmN0aW9uIHYodCl7cmV0dXJuIHBbdF09cFt0XXx8byhuKX1mdW5jdGlvbiB3KHQsZSl7bC5hYm9ydGVkfHx1KHQsZnVuY3Rpb24odCxuKXtlPWV8fCJmZWF0dXJlIix5W25dPWUsZSBpbiBkfHwoZFtlXT1bXSl9KX12YXIgZz17fSx5PXt9LHg9e29uOmksYWRkRXZlbnRMaXN0ZW5lcjppLHJlbW92ZUV2ZW50TGlzdGVuZXI6aCxlbWl0Om4sZ2V0OnYsbGlzdGVuZXJzOm0sY29udGV4dDplLGJ1ZmZlcjp3LGFib3J0OnMsYWJvcnRlZDohMX07cmV0dXJuIHh9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gZih0LGMsYSl9ZnVuY3Rpb24gYSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBzKCl7KGQuYXBpfHxkLmZlYXR1cmUpJiYobC5hYm9ydGVkPSEwLGQ9bC5iYWNrbG9nPXt9KX12YXIgYz0ibnJAY29udGV4dCIsZj10KCJnb3MiKSx1PXQoMzEpLGQ9e30scD17fSxsPWUuZXhwb3J0cz1vKCk7ZS5leHBvcnRzLmdldE9yU2V0Q29udGV4dD1pLGwuYmFja2xvZz1kfSx7fV0sZ29zOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUsbil7aWYoby5jYWxsKHQsZSkpcmV0dXJuIHRbZV07dmFyIHI9bigpO2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmtleXMpdHJ5e3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpyLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6ITF9KSxyfWNhdGNoKGkpe31yZXR1cm4gdFtlXT1yLHJ9dmFyIG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtlLmV4cG9ydHM9cn0se31dLGhhbmRsZTpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4scil7by5idWZmZXIoW3RdLHIpLG8uZW1pdCh0LGUsbil9dmFyIG89dCgiZWUiKS5nZXQoImhhbmRsZSIpO2UuZXhwb3J0cz1yLHIuZWU9b30se31dLGlkOltmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXt2YXIgZT10eXBlb2YgdDtyZXR1cm4hdHx8Im9iamVjdCIhPT1lJiYiZnVuY3Rpb24iIT09ZT8tMTp0PT09d2luZG93PzA6YSh0LGksZnVuY3Rpb24oKXtyZXR1cm4gbysrfSl9dmFyIG89MSxpPSJuckBpZCIsYT10KCJnb3MiKTtlLmV4cG9ydHM9cn0se31dLGxvYWRlcjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIoKXtpZighVCsrKXt2YXIgdD1PLmluZm89TlJFVU0uaW5mbyxlPW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpWzBdO2lmKHNldFRpbWVvdXQoZi5hYm9ydCwzZTQpLCEodCYmdC5saWNlbnNlS2V5JiZ0LmFwcGxpY2F0aW9uSUQmJmUpKXJldHVybiBmLmFib3J0KCk7YyhFLGZ1bmN0aW9uKGUsbil7dFtlXXx8KHRbZV09bil9KTt2YXIgbj1hKCk7cygibWFyayIsWyJvbmxvYWQiLG4rTy5vZmZzZXRdLG51bGwsImFwaSIpLHMoInRpbWluZyIsWyJsb2FkIixuXSk7dmFyIHI9bS5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTswPT09dC5hZ2VudC5pbmRleE9mKCJodHRwOi8vIil8fDA9PT10LmFnZW50LmluZGV4T2YoImh0dHBzOi8vIik/ci5zcmM9dC5hZ2VudDpyLnNyYz1sKyI6Ly8iK3QuYWdlbnQsZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShyLGUpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PW0ucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtzKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStPLm9mZnNldF0sbnVsbCwiYXBpIil9dmFyIGE9dCgyNikscz10KCJoYW5kbGUiKSxjPXQoMzEpLGY9dCgiZWUiKSx1PXQoMjkpLGQ9dCgyMSkscD10KDIzKSxsPWQuZ2V0Q29uZmlndXJhdGlvbigic3NsIik9PT0hMT8iaHR0cCI6Imh0dHBzIixoPXdpbmRvdyxtPWguZG9jdW1lbnQsdj0iYWRkRXZlbnRMaXN0ZW5lciIsdz0iYXR0YWNoRXZlbnQiLGc9aC5YTUxIdHRwUmVxdWVzdCx5PWcmJmcucHJvdG90eXBlLHg9ITE7TlJFVU0ubz17U1Q6c2V0VGltZW91dCxTSTpoLnNldEltbWVkaWF0ZSxDVDpjbGVhclRpbWVvdXQsWEhSOmcsUkVROmguUmVxdWVzdCxFVjpoLkV2ZW50LFBSOmguUHJvbWlzZSxNTzpoLk11dGF0aW9uT2JzZXJ2ZXJ9O3ZhciBiPSIiK2xvY2F0aW9uLEU9e2JlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixlcnJvckJlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixhZ2VudDoianMtYWdlbnQubmV3cmVsaWMuY29tL25yLXNwYS0xMjE2Lm1pbi5qcyJ9LFI9ZyYmeSYmeVt2XSYmIS9DcmlPUy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxPPWUuZXhwb3J0cz17b2Zmc2V0OmEuZ2V0TGFzdFRpbWVzdGFtcCgpLG5vdzphLG9yaWdpbjpiLGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpSLHVzZXJBZ2VudDp1LGRpc2FibGVkOnh9O2lmKCF4KXt0KDIwKSx0KDI3KSxtW3ZdPyhtW3ZdKCJET01Db250ZW50TG9hZGVkIixpLHAoITEpKSxoW3ZdKCJsb2FkIixyLHAoITEpKSk6KG1bd10oIm9ucmVhZHlzdGF0ZWNoYW5nZSIsbyksaFt3XSgib25sb2FkIixyKSkscygibWFyayIsWyJmaXJzdGJ5dGUiLGEuZ2V0TGFzdFRpbWVzdGFtcCgpXSxudWxsLCJhcGkiKTt2YXIgVD0wfX0se31dLCJ3cmFwLWZ1bmN0aW9uIjpbZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXtmdW5jdGlvbiBuKGUsbixyLGMsZil7ZnVuY3Rpb24gbnJXcmFwcGVyKCl7dmFyIGksYSx1LHA7dHJ5e2E9dGhpcyxpPWQoYXJndW1lbnRzKSx1PSJmdW5jdGlvbiI9PXR5cGVvZiByP3IoaSxhKTpyfHx7fX1jYXRjaChsKXtvKFtsLCIiLFtpLGEsY10sdV0sdCl9cyhuKyJzdGFydCIsW2ksYSxjXSx1LGYpO3RyeXtyZXR1cm4gcD1lLmFwcGx5KGEsaSl9Y2F0Y2goaCl7dGhyb3cgcyhuKyJlcnIiLFtpLGEsaF0sdSxmKSxofWZpbmFsbHl7cyhuKyJlbmQiLFtpLGEscF0sdSxmKX19cmV0dXJuIGEoZSk/ZToobnx8KG49IiIpLG5yV3JhcHBlcltwXT1lLGkoZSxucldyYXBwZXIsdCksbnJXcmFwcGVyKX1mdW5jdGlvbiByKHQsZSxyLG8saSl7cnx8KHI9IiIpO3ZhciBzLGMsZix1PSItIj09PXIuY2hhckF0KDApO2ZvcihmPTA7ZjxlLmxlbmd0aDtmKyspYz1lW2ZdLHM9dFtjXSxhKHMpfHwodFtjXT1uKHMsdT9jK3I6cixvLGMsaSkpfWZ1bmN0aW9uIHMobixyLGksYSl7aWYoIWh8fGUpe3ZhciBzPWg7aD0hMDt0cnl7dC5lbWl0KG4scixpLGUsYSl9Y2F0Y2goYyl7byhbYyxuLHIsaV0sdCl9aD1zfX1yZXR1cm4gdHx8KHQ9dSksbi5pblBsYWNlPXIsbi5mbGFnPXAsbn1mdW5jdGlvbiBvKHQsZSl7ZXx8KGU9dSk7dHJ5e2UuZW1pdCgiaW50ZXJuYWwtZXJyb3IiLHQpfWNhdGNoKG4pe319ZnVuY3Rpb24gaSh0LGUsbil7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3Qua2V5cyl0cnl7dmFyIHI9T2JqZWN0LmtleXModCk7cmV0dXJuIHIuZm9yRWFjaChmdW5jdGlvbihuKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdFtuXX0sc2V0OmZ1bmN0aW9uKGUpe3JldHVybiB0W25dPWUsZX19KX0pLGV9Y2F0Y2goaSl7byhbaV0sbil9Zm9yKHZhciBhIGluIHQpbC5jYWxsKHQsYSkmJihlW2FdPXRbYV0pO3JldHVybiBlfWZ1bmN0aW9uIGEodCl7cmV0dXJuISh0JiZ0IGluc3RhbmNlb2YgRnVuY3Rpb24mJnQuYXBwbHkmJiF0W3BdKX1mdW5jdGlvbiBzKHQsZSl7dmFyIG49ZSh0KTtyZXR1cm4gbltwXT10LGkodCxuLHUpLG59ZnVuY3Rpb24gYyh0LGUsbil7dmFyIHI9dFtlXTt0W2VdPXMocixuKX1mdW5jdGlvbiBmKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDsrK24pZVtuXT1hcmd1bWVudHNbbl07cmV0dXJuIGV9dmFyIHU9dCgiZWUiKSxkPXQoMzIpLHA9Im5yQG9yaWdpbmFsIixsPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksaD0hMTtlLmV4cG9ydHM9cixlLmV4cG9ydHMud3JhcEZ1bmN0aW9uPXMsZS5leHBvcnRzLndyYXBJblBsYWNlPWMsZS5leHBvcnRzLmFyZ3NUb0FycmF5PWZ9LHt9XX0se30sWyJsb2FkZXIiLDIsMTcsNSwzLDRdKTs8L3NjcmlwdD48c2NyaXB0PgoJCQlmdW5jdGlvbiBEZWZlckpTKHNyYykgewoJCQlmdW5jdGlvbiBkb3dubG9hZEpTQXRPbmxvYWQoKSB7CgkJCXZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CgkJCWVsZW1lbnQuc3JjID0gc3JjOwoJCQlkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpOwoJCQl9CgkJCWlmICh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikKCQkJd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLCBkb3dubG9hZEpTQXRPbmxvYWQsIGZhbHNlKTsKCQkJZWxzZSBpZiAod2luZG93LmF0dGFjaEV2ZW50KQoJCQl3aW5kb3cuYXR0YWNoRXZlbnQoIm9ubG9hZCIsIGRvd25sb2FkSlNBdE9ubG9hZCk7CgkJCWVsc2Ugd2luZG93Lm9ubG9hZCA9IGRvd25sb2FkSlNBdE9ubG9hZDsKCQkJfQoJCTwvc2NyaXB0PgoJCTxzY3JpcHQ+CgkJCURlZmVySlMoImh0dHBzOi8vZDFieGg4dWFzMW1udzcuY2xvdWRmcm9udC5uZXQvYXNzZXRzL2VtYmVkLmpzIik7CgkJPC9zY3JpcHQ+CgkJPHNjcmlwdD4KCQkJRGVmZXJKUygiaHR0cHM6Ly9kMWJ4aDh1YXMxbW53Ny5jbG91ZGZyb250Lm5ldC9hc3NldHMvZW1iZWQuanMiKTsKCQk8L3NjcmlwdD4KCQk8c2NyaXB0PgogICAgICAgICAgICAgICAgRGVmZXJKUygiaHR0cHM6Ly9iYWRnZS5kaW1lbnNpb25zLmFpL2JhZGdlLmpzIik7CgkJCTwvc2NyaXB0PgoJCTxzY3JpcHQ+CiAgICAgICAgICAgICAgICBEZWZlckpTKCJodHRwczovL2JhZGdlLmRpbWVuc2lvbnMuYWkvYmFkZ2UuanMiKTsKCQkJPC9zY3JpcHQ+CgkJPHNjcmlwdD4KICAgICAgICAgICAgICAgIERlZmVySlMoImh0dHBzOi8vYmFkZ2UuZGltZW5zaW9ucy5haS9iYWRnZS5qcyIpOwoJCQk8L3NjcmlwdD4KCQk8c2NyaXB0PgoJCQl2YXIgX3VyY29uZmlnID0geyBzaWQ6ICJkZWZjM2E3ZC00YjM0LTRiNmYtYWQxYy0wNzE2ZTBhMDVhNjUiLCBhaXA6IDAsIHVzZVBhZ2VQcm90b2NvbDogZmFsc2UgfTsKCQkJKGZ1bmN0aW9uIChkLCBzKQoJCQkKCQkJeyB2YXIganMgPSBkLmNyZWF0ZUVsZW1lbnQocyksIHNjID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXTsganMuc3JjID0gImh0dHBzOi8vaGl0LnVwdHJlbmRzZGF0YS5jb20vcnVtLm1pbi5qcyI7IGpzLmFzeW5jID0gImFzeW5jIjsgc2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoanMsIHNjKTsgfQoJCQkoZG9jdW1lbnQsICJzY3JpcHQiKSk7CgkJPC9zY3JpcHQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgoJCTxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CgkJPG1ldGEgbmFtZT0icm9ib3RzIiBjb250ZW50PSJub2FyY2hpdmUiPgoJCTx0aXRsZT5NZXRyb2xvZ2lhLCBWb2x1bWUgMjksIE51bWJlciA2LCBKYW51YXJ5IDE5OTIsIDE5OTIgLSBJT1BzY2llbmNlPC90aXRsZT4KCQkJPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLCBtaW5pbXVtLXNjYWxlPTEuMCI+CgkJPCEtLSBOb3RlIEdyaWRzZXQgcmVmIDM1MDg5IC0tPgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuNzkuMC9jc3MvY3JpdGljYWwtc3R5bGVzLm1pbi5jc3MiIHR5cGU9InRleHQvY3NzIiAvPgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuNzkuMC9jc3MvbWFpbi1zdHlsZXMubWluLmNzcyIgbWVkaWE9InByaW50IiBvbmxvYWQ9InRoaXMubWVkaWE9J2FsbCciPgoKPCEtLVtpZiBsdGUgSUUgMTBdPgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuNzkuMC9jc3MvZ3JpZHNldC1pZS1sdGU4LmNzcyIgdHlwZT0idGV4dC9jc3MiIC8+CjwhW2VuZGlmXS0tPgo8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgIChmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKAogICAgICAgIHsnZ3RtLnN0YXJ0JzogbmV3IERhdGUoKS5nZXRUaW1lKCksZXZlbnQ6J2d0bS5qcyd9CiAgICAgICAgKTt2YXIgZj1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLAogICAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAgICdodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JytpK2RsO2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaixmKTsKICAgICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1NNzNaNFcnKTsKICAgIDwvc2NyaXB0Pgo8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+PHNjcmlwdD4KCQkvKiAgQ3V0dGluZyB0aGUgbXVzdGFyZCAtIGh0dHA6Ly9yZXNwb25zaXZlbmV3cy5jby51ay9wb3N0LzE4OTQ4NDY2Mzk5L2N1dHRpbmctdGhlLW11c3RhcmQgKi8KCQkKCQkvKiBCZWxvdyBpcyB0aGUgb3JpZ2luYWwgaWYgc3RhdGVtZW50LCBmcm9tIHRoZSBsaW5rIGFib3ZlLiBJIGhhdmUgYW1lbmRlZCBpdCB0byB0dXJuIG9mIEpTIG9uIGFsbCBJRSBicm93c2VycyBsZXNzIHRoYW4gMTAuCgkJVGhpcyBpcyBkdWUgdG8gYSBmdW5jdGlvbiBpbiB0aGUgaW9wLmpxdWVyeS50b29sYmFyIGxpbmUgMzUvMzYuIFVzZXMgLnJlbW92ZSB3aGljaCBpcyBub3QgbmF0aXZlIGpzIHN1cHBvcnRlZCBpbiBJRTkgb3IgbG93ZXIgKi8KCQkvKmlmKCdxdWVyeVNlbGVjdG9yJyBpbiBkb2N1bWVudAoJCSYmICdsb2NhbFN0b3JhZ2UnIGluIHdpbmRvdwoJCSYmICdhZGRFdmVudExpc3RlbmVyJyBpbiB3aW5kb3cpKi8KCQkKCQkvKiBUaGlzIGlzIHRoZSB1cGRhdGVkIHNlbGVjdG9yLCB0YWtlbiBmcm9tOiBodHRwczovL2p1c3RtYXJrdXAuY29tL2xvZy8yMDE1LzAyLzI2L2N1dC10aGUtbXVzdGFyZC1yZXZpc2l0ZWQvICovCgkJaWYoJ3Zpc2liaWxpdHlTdGF0ZScgaW4gZG9jdW1lbnQpIHsKCQkKCQkvKiEgbG9hZEpTOiBsb2FkIGEgSlMuIFdlIGFyZSBsb2FkaW5nIHRoaXMgY29tbWFuZCBzdHJhaWdodCBhd2F5LCBiZWZvcmUgdGhlIGJvZHkgbG9hZHMsIHNvIHRoYXQgSUYgYSB1c2VyIGhhcyBKUyBlbmFibGVkLCB0aGVpciBzaG93IGhpZGUgcGFuZWxzIHdpbGwgYXV0b21hdGljYWxseSBiZSBjbG9zZWQuICovCgkJLyogSWYgdGhpcyBpc24ndCBoZXJlLCB0aGVuIHRoZXNlIHBhbmVscyBhcHBlYXIgb3BlbiB3aGlsZSB0aGUgcGFnZSBpcyBsb2FkaW5nLCB0aGVuIHdoZW4gdGhlIGpzIGxvYWRzIGF0IHRoZSBib3R0b20gb2YgdGhlIHBhZ2UsIHRoZXkgYXJlIHNodXQuIFNvIHRoZSB1c2VycyBzZWVzIG9wZW4gY29udGVudCwgdGhlbiBoaWRkZW4gYWZ0ZXIgYSBzZWNvbmQgb3IgMiB3aGVuIHRoZSBqcyBpcyBsb2FkZWQuIE5vdCBuaWNlICovCgkJZG9jdW1lbnQud3JpdGUoIjxzdHlsZT4ucmV2ZWFsLWNvbnRlbnR7ZGlzcGxheTpub25lO30uc2VhcmNoLXJlcy1maWx0ZXIgLnJldmVhbC1jb250ZW50e2Rpc3BsYXk6YmxvY2s7fTwvc3R5bGU+Iik7CgkJfQoJCTwvc2NyaXB0PgoJCTxzY3JpcHQ+dmFyIF9fdXpkYm1fMSA9ICJjMDE5YmM5OS01ODBhLTQ4YjAtYmQxMy03MWQ3NzFkZTljYTMiO3ZhciBfX3V6ZGJtXzIgPSAiTm1NNE9XSXhaR010T0RReU55MDBabU5pTFRsaE5qSXRNbVJtT1dOaVl6QmpNMlpsSkRjM0xqSXlNaTR5TlM0NE5BPT0iOzwvc2NyaXB0PiA8c2NyaXB0PihmdW5jdGlvbih3LCBkLCBlLCB1LCBjLCBnLCBhLCBiKXsgd1siU1NKU0Nvbm5lY3Rvck9iaiJdID0ge3NzX2NpZCA6IGMsIGRvbWFpbl9pbmZvOiAiYXV0byJ9OyBhID0gZC5jcmVhdGVFbGVtZW50KGUpOyBhLmFzeW5jID0gdHJ1ZTsgYS5zcmMgPSB1OyBiID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZShlKVswXTsgYi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLCBiKTsgfSkod2luZG93LGRvY3VtZW50LCJzY3JpcHQiLCJodHRwczovL2Nkbi5wZXJmZHJpdmUuY29tL2FwZXJ0dXJlL2FwZXJ0dXJlLmpzIiwiYTFjMyIsInNzQ29uZiIpOzwvc2NyaXB0PjwvaGVhZD4KCTxib2R5IGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIiBjbGFzcz0iaXNzbi0wMDI2LTEzOTQiPgogICAgPGEgaWQ9ImJhY2stdG8tdG9wLXRhcmdldCIgdGFiaW5kZXg9Ii0xIj48L2E+CiAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgo8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLU03M1o0VyIKICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPjxkaXYgY2xhc3M9ImNvb2tpZXMtYmFubmVyLXdyYXAiIGlkPSJjb29raWVCYW5uZXIiPgogICAgPGRpdiBjbGFzcz0iY29va2llcy1iYW5uZXIgY2YiPgogICAgICAgIFRoaXMgc2l0ZSB1c2VzIGNvb2tpZXMuIEJ5IGNvbnRpbnVpbmcgdG8gdXNlIHRoaXMgc2l0ZSB5b3UgYWdyZWUgdG8gb3VyIHVzZSBvZiBjb29raWVzLiBUbyBmaW5kIG91dCBtb3JlLCBzZWUgb3VyCiAgICAgICAgPGEgaHJlZj0iaHR0cDovL2lvcHB1Ymxpc2hpbmcub3JnL3ByaXZhY3lQb2xpY3kiPlByaXZhY3kgYW5kIENvb2tpZXM8L2E+IHBvbGljeS4KICAgICAgICA8c3BhbiByb2xlPSJidXR0b24iIHRhYmluZGV4PSIwIiBjbGFzcz0iZmEtaWNvbiBjb29raWVzLWJhbm5lci1jbG9zZSI+PHN2ZyBhcmlhLWhpZGRlbj0idHJ1ZSIgZm9jdXNhYmxlPSJmYWxzZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgNTEyIDUxMiI+PHBhdGggZD0iTTI1NiA4QzExOSA4IDggMTE5IDggMjU2czExMSAyNDggMjQ4IDI0OCAyNDgtMTExIDI0OC0yNDhTMzkzIDggMjU2IDh6bTEyMS42IDMxMy4xYzQuNyA0LjcgNC43IDEyLjMgMCAxN0wzMzggMzc3LjZjLTQuNyA0LjctMTIuMyA0LjctMTcgMEwyNTYgMzEybC02NS4xIDY1LjZjLTQuNyA0LjctMTIuMyA0LjctMTcgMEwxMzQuNCAzMzhjLTQuNy00LjctNC43LTEyLjMgMC0xN2w2NS42LTY1LTY1LjYtNjUuMWMtNC43LTQuNy00LjctMTIuMyAwLTE3bDM5LjYtMzkuNmM0LjctNC43IDEyLjMtNC43IDE3IDBsNjUgNjUuNyA2NS4xLTY1LjZjNC43LTQuNyAxMi4zLTQuNyAxNyAwbDM5LjYgMzkuNmM0LjcgNC43IDQuNyAxMi4zIDAgMTdMMzEyIDI1Nmw2NS42IDY1LjF6Ij48L3BhdGg+PC9zdmc+PHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPkNsb3NlIHRoaXMgbm90aWZpY2F0aW9uPC9zcGFuPjwvc3Bhbj4KICAgIDwvZGl2Pgo8L2Rpdj48IS0tIFN0YXJ0IFByb2R1Y3Rpb24gdG9vbGJhciAtLT4KPCEtLSBFbmQgUHJvZHVjdGlvbiB0b29sYmFyIC0tPjwhLS0gU3RhcnQgRG93bnRpbWUgQmFubmVyIC0tPgo8ZGl2IGNsYXNzPSJkb3dudGltZS1iYW5uZXItd3JhcCIgaWQ9ImRvd250aW1lQmFubmVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJkb3dudGltZS1iYW5uZXIgd3JhcHBlciI+CiAgICA8c3BhbiBjbGFzcz0iYXR0ZW50aW9uIj48aT5OT1RJQ0U8L2k+Ojwvc3Bhbj4gVGhlcmUgYXJlIGN1cnJlbnRseSBzb21lIHBlcmZvcm1hbmNlIGlzc3VlcyB3aXRoIElPUHNjaWVuY2UsIHdoaWNoIG1heSBhbHNvIGNhdXNlIGVycm9yIG1lc3NhZ2VzIHRvIGFwcGVhci4gQXBvbG9naWVzIGZvciB0aGUgaW5jb252ZW5pZW5jZS48L2E+Lgo8L2Rpdj48L2Rpdj4KPCEtLSBFbmQgRG93bnRpbWUgQmFubmVyIC0tPjwhLS0gSGVhZGVyIHRpbGUgc3RhcnRzIC0tPgo8aGVhZGVyIHJvbGU9ImJhbm5lciIgZGF0YS1uYXYtZ3JvdXA+Cgk8ZGl2IGNsYXNzPSJhY2Nlc3NpYmlsaXR5IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgoJICAgIDxwPjxzdHJvbmc+QWNjZXNzaWJpbGl0eSBMaW5rczwvc3Ryb25nPjwvcD4KCSAgICA8dWw+CgkgICAgICAgIDxsaT48YSBocmVmPSIjcGFnZS1jb250ZW50Ij5Ta2lwIHRvIGNvbnRlbnQ8L2E+PC9saT4KCSAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gjY29udGVudENvbCI+U2tpcCB0byBzZWFyY2ggSU9Qc2NpZW5jZTwvYT48L2xpPgoJICAgICAgICA8bGk+PGEgaHJlZj0iL2pvdXJuYWxzI2NvbnRlbnRDb2wiPlNraXAgdG8gSm91cm5hbHMgbGlzdDwvYT48L2xpPgoJICAgICAgICA8bGk+PGEgaHJlZj0iL3BhZ2UvYWNjZXNzaWJpbGl0eSNjb250ZW50Q29sIj5BY2Nlc3NpYmlsaXR5IGhlbHA8L2E+PC9saT4KCSAgICA8L3VsPgoJPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIGRnaC1zaG93Z3JpZCB0Z2gtc2hvd2dyaWQgY2YiIG5hbWU9ImNvbnRlbnRDb2wiPgoKICAgICAgICA8ZGl2IGlkPSJtb2JpbGUtaGVhZGVyIiBjbGFzcz0idGEtaGlkZSBkYS1oaWRlIHdkLW1vYmlsZS1uYXYiPgogICAgICAgICAgICA8YSB0aXRsZT0iTWVudSIgaHJlZj0iI3NpZHItbWFpbiIgaWQ9InNpbXBsZS1tZW51IiBjbGFzcz0iaWNvbi1tZW51Ij48L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxhIGhyZWY9Ii8iIGl0ZW1wcm9wPSJ1cmwiIGNsYXNzPSJoZWFkZXItbG9nbyB3ZC1oZWFkZXItZ3JhcGhpYyI+CiAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJuYW1lIiBjb250ZW50PSJJT1BzY2llbmNlIj4KICAgICAgICAgICAgPHN2ZyBoZWlnaHQ9IjE1IiB3aWR0aD0iMTAwIj4KICAgICAgICAgICAgICAgIDxpbWFnZSB4bGluazpocmVmPSJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjc5LjAvaW1nL2lvcHMtbG9nby5zdmciIHNyYz0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi43OS4wL2ltZy9pb3BzLWxvZ28ucG5nIiBoZWlnaHQ9IjE1IiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGl0ZW1wcm9wPSJsb2dvIiAvPgogICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPklPUCBTY2llbmNlIGhvbWU8L3NwYW4+CiAgICAgICAgPC9hPgoKICAgICAgICA8c2VjdGlvbiByb2xlPSJyZWdpb24iIGFyaWEtbGFiZWw9IkFjY2Vzc2liaWxpdHkgbGlua3MiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY2Nlc3NpYmlsaXR5LXNraXAtbGlua3MiPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgaHJlZj0iI3NraXAtdG8tY29udGVudC1saW5rLXRhcmdldCI+U2tpcCB0byBjb250ZW50PC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBpZD0iYWNjZXNzaWJpbGl0eS1oZWxwIiBocmVmPSIvcGFnZS9hY2Nlc3NpYmlsaXR5I3NraXAtdG8tY29udGVudC1saW5rLXRhcmdldCI+QWNjZXNzaWJpbGl0eSBIZWxwPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgaWQ9InNpZHIiIGNsYXNzPSJtLWhpZGUgd2QtbWFpbi1uYXYiIGFyaWEtbGFiZWw9IlNpdGUiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJuYXYtdG9wLWxpbmstZHJvcC1kb3duIG5hdi1pdGVtIG5hdi1zZWFyY2giIGRhdGEtbmF2LXRyaWdnZXI9ImFydGljbGVsb29rdXAiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWNvbnRyb2xzPSJuYXYtZHJvcGRvd24tYXJ0aWNsZWxvb2t1cCI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi43OS4wL2ltZy9pY29uLXNlYXJjaC5zdmciIGFsdD0iIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5TZWFyY2g8L3NwYW4+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtam91cm5hbHMgbmF2LWl0ZW0gd2QtbmF2LWpvdXJuYWwiPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi10b3AtbGluay1kcm9wLWRvd24iIGhyZWY9Ii9qb3VybmFscyIgZGF0YS1uYXYtdHJpZ2dlcj0iam91cm5hbHMiPkpvdXJuYWxzPHNwYW4gY2xhc3M9Imljb24tYXJyb3ctZG93biI+PC9zcGFuPjwvYT4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtZHJvcC1kb3duIHdkLW5hdi1qb3VybmFsLWRkIiBkYXRhLW5hdi1pdGVtPSJqb3VybmFscyI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2pvdXJuYWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgSm91cm5hbHMgbGlzdAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLWhpZGUiPkJyb3dzZSBtb3JlIHRoYW4gMTAwIHNjaWVuY2Ugam91cm5hbCB0aXRsZXM8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9wYWdlL3N1YmplY3RzIj4KICAgICAgICAgICAgICAgICAgICAgICAgU3ViamVjdCBjb2xsZWN0aW9ucwogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLWhpZGUiPlJlYWQgdGhlIHZlcnkgYmVzdCByZXNlYXJjaCBwdWJsaXNoZWQgaW4gSU9QIGpvdXJuYWxzPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvam91cm5hbHM/dHlwZT1wYXJ0bmVyI2pzLXRhYi1wdWJwYXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgUHVibGlzaGluZyBwYXJ0bmVycwogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLWhpZGUiPlBhcnRuZXIgb3JnYW5pc2F0aW9ucyBhbmQgcHVibGljYXRpb25zPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvaW5mby9wYWdlL29wZW5hY2Nlc3MiPgogICAgICAgICAgICAgICAgICAgICAgICBPcGVuIGFjY2VzcwogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLWhpZGUiPklPUCBQdWJsaXNoaW5nIG9wZW4gYWNjZXNzIHBvbGljeSBndWlkZTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2NvbmZlcmVuY2Utc2VyaWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgSU9QIENvbmZlcmVuY2UgU2VyaWVzCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im0taGlkZSI+UmVhZCBvcGVuIGFjY2VzcyBwcm9jZWVkaW5ncyBmcm9tIHNjaWVuY2UgY29uZmVyZW5jZXMgd29ybGR3aWRlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWJvb2tzIG5hdi1pdGVtIHdkLW5hdi1ib29rcyI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvYm9va3MiIGNsYXNzPSJuYXYtdG9wLWxpbmsiPkJvb2tzPC9hPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1wdWJsaXNoaW5nLXN1cHBvcnQgbmF2LWl0ZW0gd2QtcHVibGlzaGluZy1zdXBwb3J0Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3B1Ymxpc2hpbmdzdXBwb3J0LmlvcHNjaWVuY2UuaW9wLm9yZyIgY2xhc3M9Im5hdi10b3AtbGluayI+UHVibGlzaGluZyBTdXBwb3J0PC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0gSGVhZGVyIExvZ2luIHRpbGUgc3RhcnRzIGhlcmUgLS0+CiAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxvZ2luIG5hdi1pdGVtIHdkLW5hdi1sb2dpbiI+CjxhIGNsYXNzPSJuYXYtdG9wLWxpbmstZHJvcC1kb3duIiBpZD0ibG9naW4tZHJvcC1kb3duLXVzZXIiIGhyZWY9Imh0dHBzOi8vbXlpb3BzY2llbmNlLmlvcC5vcmcvc2lnbmluP29yaWdpbj1hMCZyZXR1cm49aHR0cHMlM0ElMkYlMkZpb3BzY2llbmNlLmlvcC5vcmclMkZpc3N1ZSUyRjAwMjYtMTM5NCUyRjI5JTJGNiIgZGF0YS1uYXYtdHJpZ2dlcj0ibG9naW4iPjxzcGFuIGNsYXNzPSJuYXYtdG9wLXVzZXJuYW1lIj48c3BhbiBjbGFzcz0iZmEtaWNvbiI+PHN2ZyBhcmlhLWhpZGRlbj0idHJ1ZSIgZm9jdXNhYmxlPSJmYWxzZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgNDk2IDUxMiI+PHBhdGggZD0iTTI0OCA4QzExMSA4IDAgMTE5IDAgMjU2czExMSAyNDggMjQ4IDI0OCAyNDgtMTExIDI0OC0yNDhTMzg1IDggMjQ4IDh6bTAgOTZjNDguNiAwIDg4IDM5LjQgODggODhzLTM5LjQgODgtODggODgtODgtMzkuNC04OC04OCAzOS40LTg4IDg4LTg4em0wIDM0NGMtNTguNyAwLTExMS4zLTI2LjYtMTQ2LjUtNjguMiAxOC44LTM1LjQgNTUuNi01OS44IDk4LjUtNTkuOCAyLjQgMCA0LjguNCA3LjEgMS4xIDEzIDQuMiAyNi42IDYuOSA0MC45IDYuOSAxNC4zIDAgMjgtMi43IDQwLjktNi45IDIuMy0uNyA0LjctMS4xIDcuMS0xLjEgNDIuOSAwIDc5LjcgMjQuNCA5OC41IDU5LjhDMzU5LjMgNDIxLjQgMzA2LjcgNDQ4IDI0OCA0NDh6Ij48L3BhdGg+PC9zdmc+PC9zcGFuPkxvZ2luPC9zcGFuPjxzcGFuIGNsYXNzPSJpY29uLWFycm93LWRvd24iPjwvc3Bhbj48L2E+CiAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWRyb3AtZG93biB3ZC1uYXYtbG9naW4tZGQiIGRhdGEtbmF2LWl0ZW09ImxvZ2luIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9teWlvcHNjaWVuY2UuaW9wLm9yZy9zaWduaW4/b3JpZ2luPWEwJnJldHVybj1odHRwcyUzQSUyRiUyRmlvcHNjaWVuY2UuaW9wLm9yZyUyRmlzc3VlJTJGMDAyNi0xMzk0JTJGMjklMkY2IiBpZD0id2QtbG9naW4tbGluayI+SU9Qc2NpZW5jZSBsb2dpbiAvIFNpZ24gVXA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj48IS0tIEhlYWRlciBMb2dpbiB0aWxlIGVuZHMgaGVyZSAtLT4KICAgICAgICAgICAgPC9uYXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJhcnQtbG9va3VwLXBhbmVsIG0taGlkZSBuYXYtZHJvcC1kb3duIiBkYXRhLW5hdi1pdGVtPSJhcnRpY2xlbG9va3VwIj4KICAgIDxkaXYgY2xhc3M9IndyYXBwZXIgd3JhcHBlci0tc2VhcmNoIGNmIj4KICAgICAgICA8YSB0aXRsZT0iQ2xvc2UiIGNsYXNzPSJjbG9zZS1pY29uIGFydC1sb29rdXBfX2Nsb3NlIiB0YWJpbmRleD0iMCIgcm9sZT0iYnV0dG9uIiBhcmlhLWRlc2NyaWJlZGJ5PSJjbG9zZS1zZWFyY2gtZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1jbG9zZSI+PC9zcGFuPgogICAgICAgIDwvYT4KICAgICAgICA8cCBpZD0iY2xvc2Utc2VhcmNoLWRlc2NyaXB0aW9uIiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+Q2xpY2sgaGVyZSB0byBjbG9zZSB0aGlzIHBhbmVsLjwvcD4KCiAgICAgICAgPGRpdiBpZD0ic2VhcmNoIiBjbGFzcz0id2QtaGVhZGVyLXNlYXJjaCBhcnQtbG9va3VwX19zZWFyY2giPgogICAgPGZvcm0gYWNjZXB0LWNoYXJzZXQ9InV0Zi04LGlzby04ODU5LTEiIGNsYXNzPSJwcmltYXJ5LXNlYXJjaCIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iL25zZWFyY2giIHJvbGU9InNlYXJjaCI+CiAgICAgICAgPGZpZWxkc2V0IGFyaWEtbGFiZWxsZWRieT0ic2VhcmNoLWxlZ2VuZCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydC1sb29rdXBfX2ZpZWxkcy13cmFwcGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InNlYXJjaC1sZWdlbmQiIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5QcmltYXJ5IHNlYXJjaDwvZGl2PgogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icXVpY2tTZWFyY2giPlNlYXJjaCBhbGwgSU9Qc2NpZW5jZSBjb250ZW50PC9sYWJlbD4KCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiB4LXdlYmtpdC1zcGVlY2g9IiIgbmFtZT0idGVybXMiIGlkPSJxdWlja1NlYXJjaCIgY2xhc3M9ImFydC1sb29rdXBfX2ZpZWxkLS1ncm93IgogICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaCBhbGwgSU9Qc2NpZW5jZSBjb250ZW50IiB2YWx1ZT0iIi8+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHgtd2Via2l0LXNwZWVjaD0iIiB2YWx1ZT0iU2VhcmNoIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGhkci1zZWFyY2gtYnRuIGJkLTAgYXJ0LWxvb2t1cF9fc3VibWl0Ij4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZmllbGRzZXQ+CiAgICA8L2Zvcm0+CjwvZGl2Pgo8ZGl2IGlkPSJ3ZC1jb250ZW50LWZpbmRlciIgY2xhc3M9ImFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyIj4KICAgICAgICAgICAgPGZvcm0gYWNjZXB0LWNoYXJzZXQ9InV0Zi04LGlzby04ODU5LTEiIG1ldGhvZD0iZ2V0IiBhY3Rpb249Ii9maW5kY29udGVudCIgbmFtZT0iY29udGVudEZpbmRlckZvcm0iCiAgICAgIGlkPSJ3ZC1maW5kLWFydC1mb3JtIiBjbGFzcz0iY2YgZmluZC1hcnRpY2xlLWlzc3VlLWRpc3BsYXkiIGF1dG9jb21wbGV0ZT0iT0ZGIj4KICAgIDxmaWVsZHNldCBhcmlhLWxhYmVsbGVkYnk9ImNvbnRlbnQtZmluZGVyLWxlZ2VuZCI+CiAgICAgICAgPGRpdiBpZD0iY29udGVudC1maW5kZXItbGVnZW5kIiBjbGFzcz0iZXllYnJvdyBleWVicm93LS1ibHVlIj5BcnRpY2xlIExvb2t1cDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImFydC1sb29rdXBfX2ZpZWxkcy13cmFwcGVyIj4KCiAgICAgICAgICAgIDxsYWJlbCBmb3I9IkNGX0pPVVJOQUwiIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5TZWxlY3Qgam91cm5hbCAocmVxdWlyZWQpPC9sYWJlbD4KICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJDRl9KT1VSTkFMIgogICAgICAgIGlkPSJDRl9KT1VSTkFMImNsYXNzPSJmaW5kLWFydGljbGUtc2VsZWN0IGFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyLWZpZWxkIGFydC1sb29rdXBfX2ZpZWxkLS1ncm93IGFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyLWZpZWxkLS1maXJzdCIgPgogICAgPG9wdGlvbiB2YWx1ZT0ibm9uZSIgIGhpZGRlbiBkaXNhYmxlZD5TZWxlY3Qgam91cm5hbCAocmVxdWlyZWQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTMtMTU4MyIgICA+MkQgTWF0ZXIuICgyMDE0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAwNC00MjNYIiAgID5BY3RhIFBoeXMuIFNpbi4gKE92ZXJzZWFzIEVkbikgKDE5OTIgLSAxOTk5KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDQzLTYyNjIiICAgPkFkdi4gTmF0LiBTY2k6IE5hbm9zY2kuIE5hbm90ZWNobm9sLiAoMjAxMCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE4ODItMDc4NiIgICA+QXBwbC4gUGh5cy4gRXhwcmVzcyAoMjAwOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NTgtNTA5MCIgICA+QmlvZmFicmljYXRpb24gKDIwMDkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzQ4LTMxOTAiICAgPkJpb2luc3Bpci4gQmlvbWltLiAoMjAwNiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDgtNjA1WCIgICA+QmlvbWVkLiBNYXRlci4gKDIwMDYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDU3LTE5NzYiICAgPkJpb21lZC4gUGh5cy4gRW5nLiBFeHByZXNzICgyMDE1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDUwOC0zNDQzIiAgID5Cci4gSi4gQXBwbC4gUGh5cy4gKDE5NTAgLSAxOTY3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDA5LTkyNzEiICAgPkNoaW4uIEouIEFzdHJvbi4gQXN0cm9waHlzLiAoMjAwMSAtIDIwMDgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwMDMtNzcxMyIgICA+Q2hpbi4gSi4gQ2hlbS4gUGh5cy4gKDE5ODcgLSAyMDA3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjc0LTAwNjgiICAgPkNoaW4uIEouIENoZW0uIFBoeXMuICgyMDA4IC0gMjAxMik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAwOS0xOTYzIiAgID5DaGluZXNlIFBoeXMuICgyMDAwIC0gMjAwNyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTY3NC0xMDU2IiAgID5DaGluZXNlIFBoeXMuIEIgKDIwMDggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjc0LTExMzciICAgPkNoaW5lc2UgUGh5cy4gQyAoMjAwOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAyNTYtMzA3WCIgICA+Q2hpbmVzZSBQaHlzLiBMZXR0LiAoMTk4NCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAyNjQtOTM4MSIgICA+Q2xhc3MuIFF1YW50dW0gR3Jhdi4gKDE5ODQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMTQzLTA4MTUiICAgPkNsaW4uIFBoeXMuIFBoeXNpb2wuIE1lYXMuICgxOTgwIC0gMTk5Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTM2NC03ODMwIiAgID5Db21idXN0LiBUaGVvcnkgTW9kZWxsaW5nICgxOTk3IC0gMjAwNCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDI1My02MTAyIiAgID5Db21tdW4uIFRoZW9yLiBQaHlzLiAoMTk4MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDktNDY5OSIgICA+Q29tcHV0LiBTY2kuIERpc2MuICgyMDA4IC0gMjAxNSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1Ny0xNzM5IiAgID5Db252ZXJnLiBTY2kuIFBoeXMuIE9uY29sLiAoMjAxNSAtIDIwMTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NjctMTg0NiIgICA+RGlzdHJpYi4gU3lzdC4gRW5nbmcuICgxOTkzIC0gMTk5OSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjc1NC0yNzM0IiAgID5FQ1MgQWR2LiAoMjAyMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIxNjItODczNCIgICA+RUNTIEVsZWN0cm9jaGVtLiBMZXR0LiAoMjAxMiAtIDIwMTUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIxNjItODc3NyIgICA+RUNTIEouIFNvbGlkIFN0YXRlIFNjaS4gVGVjaG5vbC4gKDIwMTIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNzU0LTI3MjYiICAgPkVDUyBTZW5zLiBQbHVzICgyMDIyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjE2Mi04NzUwIiAgID5FQ1MgU29saWQgU3RhdGUgTGV0dC4gKDIwMTIgLSAyMDE1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxOTM4LTU4NjIiICAgPkVDUyBUcmFucy4gKDIwMDUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMjk1LTUwNzUiICAgPkVQTCAoMTk4NiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE5NDQtODc4MyIgICA+RWxlY3Ryb2NoZW0uIFNvYy4gSW50ZXJmYWNlICgxOTkyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTk0NC04Nzc1IiAgID5FbGVjdHJvY2hlbS4gU29saWQtU3RhdGUgTGV0dC4gKDE5OTggLSAyMDEyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE2LTEwNzUiICAgPkVsZWN0cm9uLiBTdHJ1Y3QuICgyMDE5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMS04Njk1IiAgID5FbmcuIFJlcy4gRXhwcmVzcyAoMjAxOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI1MTUtNzYyMCIgICA+RW52aXJvbi4gUmVzLiBDb21tdW4uICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0OC05MzI2IiAgID5FbnZpcm9uLiBSZXMuIExldHQuICgyMDA2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjc1Mi01Mjk1IiAgID5FbnZpcm9uLiBSZXMuOiBDbGltYXRlICgyMDIyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjc1Mi02NjRYIiAgID5FbnZpcm9uLiBSZXMuOiBFY29sLiAoMjAyMiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI3NTItNTMwOSIgICA+RW52aXJvbi4gUmVzLjogSGVhbHRoICgyMDIyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzNC00NTA1IiAgID5FbnZpcm9uLiBSZXMuOiBJbmZyYXN0cnVjdC4gU3VzdGFpbi4gKDIwMjEgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMTQzLTA4MDciICAgPkV1ci4gSi4gUGh5cy4gKDE5ODAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDU4LTg1ODUiICAgPkZsZXguIFByaW50LiBFbGVjdHJvbi4gKDIwMTUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxODczLTcwMDUiICAgPkZsdWlkIER5bi4gUmVzLiAoMTk4NiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzEtNjMzMSIgICA+RnVuY3QuIENvbXBvcy4gU3RydWN0LiAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NTUtMTMxNSIgICA+SU9QIENvbmYuIFNlci46IEVhcnRoIEVudmlyb24uIFNjaS4gKDIwMDggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzU3LTg5OVgiICAgPklPUCBDb25mLiBTZXIuOiBNYXRlci4gU2NpLiBFbmcuICgyMDA5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMy0xMzU3IiAgID5JT1AgU2NpTm90ZXMgKDIwMjAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMxLTc5OTAiICAgPkludC4gSi4gRXh0cmVtLiBNYW51Zi4gKDIwMTkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMjY2LTU2MTEiICAgPkludmVyc2UgUHJvYmxlbXMgKDE5ODUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDY0LTU2MzIiICAgPkl6di4gTWF0aC4gKDE5OTUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzUyLTcxNjMiICAgPkouIEJyZWF0aCBSZXMuICgyMDA3IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ3NS03NTE2IiAgID5KLiBDb3Ntb2wuIEFzdHJvcGFydC4gUGh5cy4gKDIwMDMgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxOTQ1LTcxMTEiICAgPkouIEVsZWN0cm9jaGVtLiBTb2MuICgxOTAyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0Mi0yMTQwIiAgID5KLiBHZW9waHlzLiBFbmcuICgyMDA0IC0gMjAxOCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTEyNi02NzA4IiAgID5KLiBIaWdoIEVuZXJneSBQaHlzLiAoMTk5NyAtIDIwMDkpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NDgtMDIyMSIgICA+Si4gSW5zdC4gKDIwMDYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTYwLTEzMTciICAgPkouIE1pY3JvbWVjaC4gTWljcm9lbmcuICgxOTkxIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0MS0yNTUyIiAgID5KLiBOZXVyYWwgRW5nLiAoMjAwNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzNjgtMzI4MSIgICA+Si4gTnVjbC4gRW5lcmd5LCBQYXJ0IEMgUGxhc21hIFBoeXMuICgxOTU5IC0gMTk2Nik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDE1MC01MzZYIiAgID5KLiBPcHQuICgxOTc3IC0gMTk5OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA0MC04OTg2IiAgID5KLiBPcHQuICgyMDEwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ2NC00MjU4IiAgID5KLiBPcHQuIEE6IFB1cmUgQXBwbC4gT3B0LiAoMTk5OSAtIDIwMDkpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjQtNDI2NiIgICA+Si4gT3B0LiBCOiBRdWFudHVtIFNlbWljbGFzcy4gT3B0LiAoMTk5OSAtIDIwMDUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjItMzY4OSIgICA+Si4gUGh5cy4gQTogR2VuLiBQaHlzLiAoMTk2OCAtIDE5NzIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMDUtNDQ3MCIgICA+Si4gUGh5cy4gQTogTWF0aC4gR2VuLiAoMTk3NSAtIDIwMDYpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMDEtMDAxNSIgICA+Si4gUGh5cy4gQTogTWF0aC4gTnVjbC4gR2VuLiAoMTk3MyAtIDE5NzQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE3NTEtODEyMSIgICA+Si4gUGh5cy4gQTogTWF0aC4gVGhlb3IuICgyMDA3IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1My00MDc1IiAgID5KLiBQaHlzLiBCOiBBdC4gTW9sLiBPcHQuIFBoeXMuICgxOTg4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyMi0zNzAwIiAgID5KLiBQaHlzLiBCOiBBdC4gTW9sLiBQaHlzLiAoMTk2OCAtIDE5ODcpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjItMzcxOSIgICA+Si4gUGh5cy4gQzogU29saWQgU3RhdGUgUGh5cy4gKDE5NjggLSAxOTg4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMzk5LTY1MjgiICAgPkouIFBoeXMuIENvbW11bi4gKDIwMTcgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMyLTA3MlgiICAgPkouIFBoeXMuIENvbXBsZXguICgyMDE5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyMi0zNzI3IiAgID5KLiBQaHlzLiBEOiBBcHBsLiBQaHlzLiAoMTk2OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMjItMzczNSIgICA+Si4gUGh5cy4gRTogU2NpLiBJbnN0cnVtLiAoMTk2OCAtIDE5ODkpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI1MTUtNzY1NSIgICA+Si4gUGh5cy4gRW5lcmd5ICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDMwNS00NjA4IiAgID5KLiBQaHlzLiBGOiBNZXQuIFBoeXMuICgxOTcxIC0gMTk4OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1NC0zODk5IiAgID5KLiBQaHlzLiBHOiBOdWNsLiBQYXJ0LiBQaHlzLiAoMTk4OSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAzMDUtNDYxNiIgICA+Si4gUGh5cy4gRzogTnVjbC4gUGh5cy4gKDE5NzUgLSAxOTg4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE1LTc2MzkiICAgPkouIFBoeXMuIE1hdGVyLiAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI1MTUtNzY0NyIgICA+Si4gUGh5cy4gUGhvdG9uaWNzICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1My04OTg0IiAgID5KLiBQaHlzLjogQ29uZGVucy4gTWF0dGVyICgxOTg5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTc0Mi02NTk2IiAgID5KLiBQaHlzLjogQ29uZi4gU2VyLiAoMjAwNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTItNDc0NiIgICA+Si4gUmFkaW9sLiBQcm90LiAoMTk4OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTAtNzY3MSIgICA+Si4gU2NpLiBJbnN0cnVtLiAoMTkyMyAtIDE5NjcpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2NzQtNDkyNiIgICA+Si4gU2VtaWNvbmQuICgyMDA5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDI2MC0yODE0IiAgID5KLiBTb2MuIFJhZGlvbC4gUHJvdC4gKDE5ODEgLSAxOTg3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNzQyLTU0NjgiICAgPkouIFN0YXQuIE1lY2guICgyMDA0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ2OC01MjQ4IiAgID5KLiBUdXJidWxlbmNlICgyMDAwIC0gMjAwNCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTM0Ny00MDY1IiAgID5KcG4uIEouIEFwcGwuIFBoeXMuICgxOTYyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTU1NS02NjExIiAgID5MYXNlciBQaHlzLiAoMjAxMyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2MTItMjAyWCIgICA+TGFzZXIgUGh5cy4gTGV0dC4gKDIwMDQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMyLTIxNTMiICAgPk1hY2guIExlYXJuLjogU2NpLiBUZWNobm9sLiAoMjAxOSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI3NTItNTcyNCIgICA+TWF0ZXIuIEZ1dHVyZXMgKDIwMjIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNjMzLTQzNTYiICAgPk1hdGVyLiBRdWFudHVtIFRlY2hub2wuICgyMDIwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjA1My0xNTkxIiAgID5NYXRlci4gUmVzLiBFeHByZXNzICgyMDE0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyNS01NzI2IiAgID5NYXRoLiBVU1NSIEl6di4gKDE5NjcgLSAxOTkyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDI1LTU3MzQiICAgPk1hdGguIFVTU1IgU2IuICgxOTY3IC0gMTk5Myk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1Ny0wMjMzIiAgID5NZWFzLiBTY2kuIFRlY2hub2wuICgxOTkwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjE1MS0yMDQzIiAgID5NZWV0LiBBYnN0ci4gKDIwMDIgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDUwLTYxMjAiICAgPk1ldGhvZHMgQXBwbC4gRmx1b3Jlc2MuICgyMDEzIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyNi0xMzk0IiBzZWxlY3RlZCAgPk1ldHJvbG9naWEgKDE5NjUgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTY1LTAzOTMiICAgPk1vZGVsbGluZyBTaW11bC4gTWF0ZXIuIFNjaS4gRW5nLiAoMTk5MiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIzOTktNzUzMiIgICA+TXVsdGlmdW5jdC4gTWF0ZXIuICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzMi05NTlYIiAgID5OYW5vIEV4cHJlc3MgKDIwMjAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMzk5LTE5ODQiICAgPk5hbm8gRnV0dXJlcyAoMjAxNyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTctNDQ4NCIgICA+TmFub3RlY2hub2xvZ3kgKDE5OTAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTU0LTg5OFgiICAgPk5ldHdvcms6IENvbXB1dC4gTmV1cmFsIFN5c3QuICgxOTkwIC0gMjAwNCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjYzNC00Mzg2IiAgID5OZXVyb21vcnBoLiBDb21wdXQuIEVuZy4gKDIwMjEgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMzY3LTI2MzAiICAgPk5ldyBKLiBQaHlzLiAoMTk5OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTEtNzcxNSIgICA+Tm9ubGluZWFyaXR5ICgxOTg4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDMzNS03MzY4IiAgID5Ob3V2ZWxsZSBSZXZ1ZSBkJ09wdGlxdWUgKDE5NzMgLSAxOTc2KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDI5LTQ3ODAiICAgPk5vdXZlbGxlIFJldnVlIGQnT3B0aXF1ZSBBcHBsaXF1w6llICgxOTcwIC0gMTk3Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAyOS01NTE1IiAgID5OdWNsLiBGdXNpb24gKDE5NjAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTM4LTM4NzMiICAgPlBBU1AgKDE4ODkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDc4LTM5NzUiICAgPlBoeXMuIEJpb2wuICgyMDA0IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzMS05MTEyIiAgID5QaHlzLiBCdWxsLiAoMTk1MCAtIDE5ODgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzEtOTEyMCIgICA+UGh5cy4gRWR1Yy4gKDE5NjYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDMxLTkxNTUiICAgPlBoeXMuIE1lZC4gQmlvbC4gKDE5NTYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDAyLTQ4OTYiICAgPlBoeXMuIFNjci4gKDE5NzAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDU4LTcwNTgiICAgPlBoeXMuIFdvcmxkICgxOTg4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTA2My03ODY5IiAgID5QaHlzLi1Vc3AuICgxOTkzIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDMwNS00NjI0IiAgID5QaHlzaWNzIGluIFRlY2hub2xvZ3kgKDE5NzMgLSAxOTg4KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTY3LTMzMzQiICAgPlBoeXNpb2wuIE1lYXMuICgxOTkzIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzMi0xMDI4IiAgID5QbGFzbWEgUGh5cy4gKDE5NjcgLSAxOTgzKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwNzQxLTMzMzUiICAgPlBsYXNtYSBQaHlzLiBDb250cm9sLiBGdXNpb24gKDE5ODQgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE2LTEwNjciICAgPlBsYXNtYSBSZXMuIEV4cHJlc3MgKDIwMTggLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDA5LTA2MzAiICAgPlBsYXNtYSBTY2kuIFRlY2hub2wuICgxOTk5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2My0wMjUyIiAgID5QbGFzbWEgU291cmNlcyBTY2kuIFRlY2hub2wuICgxOTkyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjU3Ni0xNTc5IiAgID5Qcm9jLiAtIEVsZWN0cm9jaGVtLiBTb2MuICgxOTY3IC0gMjAwNSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk1OS01MzA5IiAgID5Qcm9jLiBQaHlzLiBTb2MuICgxOTI2IC0gMTk0OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDM3MC0xMzI4IiAgID5Qcm9jLiBQaHlzLiBTb2MuICgxOTU4IC0gMTk2Nyk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDM3MC0xMjk4IiAgID5Qcm9jLiBQaHlzLiBTb2MuIEEgKDE5NDkgLSAxOTU3KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMzcwLTEzMDEiICAgPlByb2MuIFBoeXMuIFNvYy4gQiAoMTk0OSAtIDE5NTcpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NzgtNzgxNCIgICA+UHJvYy4gUGh5cy4gU29jLiBMb25kb24gKDE4NzQgLSAxOTI1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE2LTEwOTEiICAgPlByb2cuIEJpb21lZC4gRW5nLiAoMjAxOCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI1MTYtMTA4MyIgICA+UHJvZy4gRW5lcmd5ICgyMDE4IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDk2My02NjI1IiAgID5QdWJsaWMgVW5kZXJzdGFuZC4gU2NpLiAoMTk5MiAtIDIwMDIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NjMtOTY1OSIgICA+UHVyZSBBcHBsLiBPcHQuICgxOTkyIC0gMTk5OCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQ2OS03Njg4IiAgID5RdWFudGl0YXRpdmUgRmluYW5jZSAoMjAwMSAtIDIwMDQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwNjMtNzgxOCIgICA+UXVhbnR1bSBFbGVjdHJvbi4gKDE5OTMgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTU0LTg5OTgiICAgPlF1YW50dW0gT3B0LiAoMTk4OSAtIDE5OTQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTgtOTU2NSIgICA+UXVhbnR1bSBTY2kuIFRlY2hub2wuICgyMDE1IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTM1NS01MTExIiAgID5RdWFudHVtIFNlbWljbGFzcy4gT3B0LiAoMTk5NSAtIDE5OTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMzQtNDg4NSIgICA+UmVwLiBQcm9nLiBQaHlzLiAoMTkzNCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2NzQtNDUyNyIgICA+UmVzLiBBc3Ryb24uIEFzdHJvcGh5cy4gKDIwMDkgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNTE1LTUxNzIiICAgPlJlc2VhcmNoIE5vdGVzIG9mIHRoZSBBQVMgKDIwMTcgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDM0LTY2ODMiICAgPlJldmlldyBvZiBQaHlzaWNzIGluIFRlY2hub2xvZ3kgKDE5NzAgLSAxOTcyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDY4LTQ4MDIiICAgPlJ1c3MuIEFjYWQuIFNjaS4gU2IuIE1hdGguICgxOTkzIC0gMTk5NSk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzNi0wMjFYIiAgID5SdXNzLiBDaGVtLiBSZXYuICgxOTYwIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzNi0wMjc5IiAgID5SdXNzLiBNYXRoLiBTdXJ2LiAoMTk2MCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjgtNDgxMCIgICA+UnVzc2lhbiBBY2FkLiBTY2kuIEl6di4gTWF0aC4gKDE5OTMgLSAxOTk1KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDY0LTU2MTYiICAgPlNiLiBNYXRoLiAoMTk5NSAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NjgtNjk5NiIgICA+U2NpLiBUZWNobm9sLiBBZHYuIE1hdGVyLiAoMjAwMCAtIDIwMTUpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAyNjgtMTI0MiIgICA+U2VtaWNvbmQuIFNjaS4gVGVjaG5vbC4gKDE5ODYgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTY0LTE3MjYiICAgPlNtYXJ0IE1hdGVyLiBTdHJ1Y3QuICgxOTkyIC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDA0OS0xNzQ4IiAgID5Tb3YuIEouIFF1YW50dW0gRWxlY3Ryb24uICgxOTcxIC0gMTk5Mik8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAzOC01NjcwIiAgID5Tb3YuIFBoeXMuIFVzcC4gKDE5NTggLSAxOTkyKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwOTUzLTIwNDgiICAgPlN1cGVyY29uZC4gU2NpLiBUZWNobm9sLiAoMTk4OCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTEtNjcyWCIgICA+U3VyZi4gVG9wb2dyLjogTWV0cm9sLiBQcm9wLiAoMjAxMyAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1MzgtMzg4MSIgICA+VGhlIEFzdHJvbm9taWNhbCBKb3VybmFsICgxODQ5IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAwNC02MzdYIiAgID5UaGUgQXN0cm9waHlzaWNhbCBKb3VybmFsICgxOTk2IC0gcHJlc2VudCk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTUzOC00MzU3IiAgID5UaGUgQXN0cm9waHlzaWNhbCBKb3VybmFsIExldHRlcnMgKDE5OTUgLSAyMDA5KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMDQxLTgyMDUiICAgPlRoZSBBc3Ryb3BoeXNpY2FsIEpvdXJuYWwgTGV0dGVycyAoMjAxMCAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwNjctMDA0OSIgICA+VGhlIEFzdHJvcGh5c2ljYWwgSm91cm5hbCBTdXBwbGVtZW50IFNlcmllcyAoMTk5NiAtIHByZXNlbnQpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjI2MzItMzMzOCIgICA+VGhlIFBsYW5ldGFyeSBTY2llbmNlIEpvdXJuYWwgKDIwMjAgLSBwcmVzZW50KTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyMTU2LTczOTUiICAgPlRyYW5zLiBBbS4gRWxlY3Ryb2NoZW0uIFNvYy4gKDE5MzAgLSAxOTMwKTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxOTQ1LTY4NTkiICAgPlRyYW5zLiBFbGVjdHJvY2hlbS4gU29jLiAoMTkzMSAtIDE5NDgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NzUtNDg3OCIgICA+VHJhbnMuIE9wdC4gU29jLiAoMTg5OSAtIDE5MzIpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIwNTMtMTYxMyIgICA+VHJhbnNsLiBNYXRlci4gUmVzLiAoMjAxNCAtIDIwMTgpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjA5NTktNzE3NCIgICA+V2F2ZXMgUmFuZG9tIE1lZGlhICgxOTkxIC0gMjAwNCk8L29wdGlvbj4KPC9zZWxlY3Q+CjxsYWJlbCBmb3I9IkNGX1ZPTFVNRSIgY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPlZvbHVtZSBudW1iZXI6PC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9IkNGX1ZPTFVNRSIgaWQ9IkNGX1ZPTFVNRSIgY2xhc3M9ImFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyLWZpZWxkIiBwbGFjZWhvbGRlcj0iVm9sdW1lIiB4LXdlYmtpdC1zcGVlY2g9IiI+CiAgICAgICAgICAgIDxsYWJlbCBmb3I9IkNGX0lTU1VFIiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+SXNzdWUgbnVtYmVyIChpZiBrbm93bik6PC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9IkNGX0lTU1VFIiBpZD0iQ0ZfSVNTVUUiIGNsYXNzPSJhcnQtbG9va3VwX19jb250ZW50LWZpbmRlci1maWVsZCIgcGxhY2Vob2xkZXI9Iklzc3VlIiB4LXdlYmtpdC1zcGVlY2g9IiI+CiAgICAgICAgICAgIDxsYWJlbCBmb3I9IkNGX1BBR0UiIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5BcnRpY2xlIG9yIHBhZ2UgbnVtYmVyOjwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJDRl9QQUdFIiBpZD0iQ0ZfUEFHRSIgY2xhc3M9ImFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyLWZpZWxkIGFydC1sb29rdXBfX2NvbnRlbnQtZmluZGVyLWZpZWxkLS1sYXN0IiBwbGFjZWhvbGRlcj0iQXJ0aWNsZSBvciBwYWdlIiB4LXdlYmtpdC1zcGVlY2g9IiI+CgogICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGFydC1sb29rdXBfX3N1Ym1pdCIgdmFsdWU9Ikxvb2t1cCIgbmFtZT0ic3VibWl0Ij4KICAgICAgICA8L2Rpdj4KICAgIDwvZmllbGRzZXQ+CjwvZm9ybT48L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj48L2hlYWRlcj4KPCEtLSBIZWFkZXIgdGlsZSBlbmRzIC0tPgo8ZGl2IGNsYXNzPSJwYWdlLWJvZHkiID4KICAgICAgICA8YSBuYW1lPSIiIGlkPSJza2lwLXRvLWNvbnRlbnQtbGluay10YXJnZXQiIHRhYmluZGV4PSItMSI+PC9hPgogICAgICAgIDwhLS0gU3RhcnQgdHdvIGNvbHVtbiBsYXlvdXQgLS0+CjxkaXYgY2xhc3M9IndyYXBwZXIgZ3JpZC0yLWNvbCBkYi1zaG93Z3JpZCB0Yi1zaG93Z3JpZCBjZiI+CiAgICAgICAgICAgIDxtYWluIHJvbGU9Im1haW4iPgogICAgICAgICAgICAgICAgPCEtLSBTZWNvbmRhcnkgaGVhZGVyIHN0YXJ0cyAtLT4KPGRpdiBjbGFzcz0ic2Vjb25kYXJ5LWhlYWRlciBjZiIgaWQ9IndkLXNlY29uZGFyeS1oZWFkZXIiPgogICAgPCEtLSBCcmFuZGVkIGpvdXJuYWwgaGVhZGVyIHN0YXJ0cyAtLT4KPGRpdiBjbGFzcz0iYnJhbmRlZCI+CgogICAgPGRpdiBjbGFzcz0icHVibGljYXRpb24tbmFtZSIgaWQ9IndkLXB1Yi1uYW1lIj4KCTxkaXYgY2xhc3M9InB1YmxpY2F0aW9uLXRpdGxlIiBpdGVtcHJvcD0ibmFtZSIgaXRlbWlkPSJwZXJpb2RpY2FsIj4KCQkJCTxhIGhyZWY9Ii9qb3VybmFsLzAwMjYtMTM5NCIgaXRlbXByb3A9InVybCIgPk1ldHJvbG9naWE8L2E+Cgk8L2Rpdj4KCQk8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InBhcnRuZXItbG9nb3MgbS1oaWRlIiBpZD0id2QtcGFydG5lci1sb2dvcyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcnRuZXItbG9nby1hbGlnbm1lbnQiPgogICAgICAgICAgICAgICAgPCEtLSBQYXJ0bmVyIGxvZ28gdGlsZSBzdGFydHMgLS0+CjxidXR0b24gY2xhc3M9Im92ZXJsYXktbGF1bmNoIHBhcnRuZXItbG9nbyIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPgogICAgPGltZyBib3JkZXI9IjAiIHNyYz0iaHR0cHM6Ly9jbXMuaW9wc2NpZW5jZS5vcmcvNWY2YTU5N2ItYTI1MC0xMWRiLTkxZDEtNDNjYmMwMjQxMTRhL2JpcG0uZ2lmP2d1ZXN0PXRydWUiIGFsdD0iSW50ZXJuYXRpb25hbCBCdXJlYXUgb2YgV2VpZ2h0cyBhbmQgTWVhc3VyZXMgKEJJUE0pLCBmaW5kIG91dCBtb3JlIj4KPC9idXR0b24+CjxzcGFuIGNsYXNzPSJvdmVybGF5LXNldCI+CiAgICA8ZGl2IGNsYXNzPSJ0aW50LXNjcmVlbiI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJvdmVybGF5LXBhbmVsIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJjbG9zZS1pY29uIGNsb3NlLW92ZXJsYXkiIGFyaWEtbGFiZWw9IkNsb3NlIj48c3BhbiBjbGFzcz0iaWNvbi1jbG9zZSI+PC9zcGFuPjwvYnV0dG9uPgogICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXktaW1nIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5iaXBtLm9yZy8iPgogICAgICAgICAgICAgICAgPGltZyBib3JkZXI9IjAiIHNyYz0iaHR0cHM6Ly9jbXMuaW9wc2NpZW5jZS5vcmcvNWY2YTU5N2ItYTI1MC0xMWRiLTkxZDEtNDNjYmMwMjQxMTRhL2JpcG0uZ2lmP2d1ZXN0PXRydWUiIGFsdD0iSW50ZXJuYXRpb25hbCBCdXJlYXUgb2YgV2VpZ2h0cyBhbmQgTWVhc3VyZXMgKEJJUE0pLCBmaW5kIG91dCBtb3JlIj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXktdGV4dCI+CiAgICAgICAgICAgIDxwPlRoZSBJbnRlcm5hdGlvbmFsIEJ1cmVhdSBvZiBXZWlnaHRzIGFuZCBNZWFzdXJlcyAoQklQTSkgd2FzIHNldCB1cCBieSB0aGUgTWV0cmUgQ29udmVudGlvbiBhbmQgaGFzIGl0cyBoZWFkcXVhcnRlcnMgbmVhciBQYXJpcywgRnJhbmNlLiBJdCBpcyBmaW5hbmNlZCBqb2ludGx5IGJ5IGl0cyBNZW1iZXIgU3RhdGVzIGFuZCBvcGVyYXRlcyB1bmRlciB0aGUgZXhjbHVzaXZlIHN1cGVydmlzaW9uIG9mIHRoZSBDSVBNLjwvcD4gPHA+SXRzIG1hbmRhdGUgaXMgdG8gcHJvdmlkZSB0aGUgYmFzaXMgZm9yIGEgc2luZ2xlLCBjb2hlcmVudCBzeXN0ZW0gb2YgbWVhc3VyZW1lbnRzIHRocm91Z2hvdXQgdGhlIHdvcmxkLCB0cmFjZWFibGUgdG8gdGhlIEludGVybmF0aW9uYWwgU3lzdGVtIG9mIFVuaXRzIChTSSkuIFRoaXMgdGFzayB0YWtlcyBtYW55IGZvcm1zLCBmcm9tIGRpcmVjdCBkaXNzZW1pbmF0aW9uIG9mIHVuaXRzIChhcyBpbiB0aGUgY2FzZSBvZiBtYXNzIGFuZCB0aW1lKSB0byBjb29yZGluYXRpb24gdGhyb3VnaCBpbnRlcm5hdGlvbmFsIGNvbXBhcmlzb25zIG9mIG5hdGlvbmFsIG1lYXN1cmVtZW50IHN0YW5kYXJkcyAoYXMgaW4gZWxlY3RyaWNpdHkgYW5kIGlvbml6aW5nIHJhZGlhdGlvbikuPC9wPiA8cD5UaGUgQklQTSBoYXMgYW4gaW50ZXJuYXRpb25hbCBzdGFmZiBvZiBvdmVyIDcwIGFuZCBpdHMgc3RhdHVzIHZpcy0mYWdyYXZlOy12aXMgdGhlIEZyZW5jaCBHb3Zlcm5tZW50IGlzIHNpbWlsYXIgdG8gdGhhdCBvZiBvdGhlciBpbnRlcmdvdmVybm1lbnRhbCBvcmdhbml6YXRpb25zIGJhc2VkIGluIFBhcmlzLjwvcD48L2Rpdj4KICAgICAgICA8cCBjbGFzcz0idGEtYyBtdC0xIG1iLTIiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYmlwbS5vcmcvIj5odHRwOi8vd3d3LmJpcG0ub3JnLzwvYT48L3A+CiAgICA8L2Rpdj4KPC9zcGFuPgo8IS0tIFBhcnRuZXIgbG9nbyB0aWxlIGVuZHMgLS0+Cgo8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8IS0tIEJyYW5kZWQgam91cm5hbCBoZWFkZXIgZW5kcyAtLT4KPC9kaXY+IDwhLS0gZW5kIHNlY29uZGFyeS1oZWFkZXIgLS0+CjwhLS0gU2Vjb25kYXJ5IGhlYWRlciBlbmRzIC0tPjxkaXYgY2xhc3M9ImRiMSB0YjEiPgogICAgICAgICAgICAgICAgICAgIDwhLS0gU3RhcnQgaXNzdWUgcGFnZSB0aWxlIC0tPgo8ZGl2IGl0ZW1wcm9wPSJoYXNQYXJ0IiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1B1YmxpY2F0aW9uSXNzdWUiPgogICAgPCEtLSBTdGFydCBJc3N1ZSB0aXRsZXMgLS0+CjxoMT5UYWJsZSBvZiBjb250ZW50czwvaDE+CjxkaXYgY2xhc3M9ImJveG91dCIgaWQ9IndkLWpubC1pc3N1ZS10aXRsZSI+CiAgICA8aDI+PGEgaHJlZj0iL3ZvbHVtZS8wMDI2LTEzOTQvMjkiPlZvbHVtZSAyOTwvYT48L2gyPgogICAgPHAgY2xhc3M9InJlcGxpY2EtaDMgbWItMDUgbXQtMCIgaXRlbXByb3A9Imlzc3VlTnVtYmVyIj5OdW1iZXIgNiwgSmFudWFyeSAxOTkyPC9wPgogICAgPHAgY2xhc3M9Im1iLTA1Ij4KICAgICAgICA8YSBocmVmPSIvaXNzdWUvMDAyNi0xMzk0LzI5LzUiIGNsYXNzPSJtci0xIj48c3BhbiBjbGFzcz0iaWNvbi1hcnJvdy1sZWZ0IHByLTAiPjwvc3Bhbj5QcmV2aW91cyBpc3N1ZTwvYT48YSBocmVmPSIvaXNzdWUvMDAyNi0xMzk0LzMwLzEiIGNsYXNzPSJtbC0xIj5OZXh0IGlzc3VlPHNwYW4gY2xhc3M9Imljb24tYXJyb3ctcmlnaHQiPjwvc3Bhbj48L2E+PC9wPgogICAgPC9kaXY+Cgo8IS0tIEVuZCBJc3N1ZSB0aXRsZXMgLS0+CjwhLS0gU3RhcnQgSXNzdWUgZGlzcGxheSBsaW5rcyAtLT4KPHAgaWQ9ImpubC1pc3N1ZS1kaXNwLWxpbmtzIiBjbGFzcz0iY2YiPgogICAgPGEgaHJlZj0iIiBkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFsbCBhYnN0cmFjdHMiIGNsYXNzPSJyZXZlYWwtYWxsLXRyaWdnZXIgbXItMiBzbWFsbCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhbGwgYWJzdHJhY3RzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9ImluIHRoaXMgaXNzdWUiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJpbiB0aGlzIGlzc3VlIj5PcGVuIGFsbCBhYnN0cmFjdHM8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO2luIHRoaXMgaXNzdWU8L3NwYW4+PC9hPgogICAgPC9wPgo8IS0tIEVuZCBJc3N1ZSBkaXNwbGF5IGxpbmtzIC0tPjwhLS0gU3RhcnQgSXNzdWUgVG9jIEVsZW1lbnQgTGlzdGluZyAtLT4KPGZvcm0gaWQ9ImFydGljbGVzIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iIiBjbGFzcz0iYXJ0aWNsZS1saXN0LWZvcm0iPgoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iaXNzbiIgdmFsdWU9IjAwMjYtMTM5NCIgLz4KCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InZvbHVtZSIgdmFsdWU9IjI5IiAvPgoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iaXNzdWUiIHZhbHVlPSI2IiAvPgoJPGRpdiBjbGFzcz0iYXJ0LWxpc3QiIGlkPSJ3ZC1qbmwtaXNzdWUtYXJ0LWxpc3QiPgoJCTxoMyBjbGFzcz0iYmR0LTYgYmQtZ3JleS10aW50IG1iLTEiPlBBUEVSUzwvaDM+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+MzczPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDAxIiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJRGVjYWRlIERlc2lnbnMgZm9yIFdlaWdoaW5ncyBvZiBOb24tdW5pZm9ybSBWYXJpYW5jZTwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRSBDIE1vcnJpczwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJEZWNhZGUgRGVzaWducyBmb3IgV2VpZ2hpbmdzIG9mIE5vbi11bmlmb3JtIFZhcmlhbmNlIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iRGVjYWRlIERlc2lnbnMgZm9yIFdlaWdoaW5ncyBvZiBOb24tdW5pZm9ybSBWYXJpYW5jZSIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDEvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7RGVjYWRlIERlc2lnbnMgZm9yIFdlaWdoaW5ncyBvZiBOb24tdW5pZm9ybSBWYXJpYW5jZTwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMS9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0RlY2FkZSBEZXNpZ25zIGZvciBXZWlnaGluZ3Mgb2YgTm9uLXVuaWZvcm0gVmFyaWFuY2U8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPlRoZSBzZWxlY3Rpb24gb2YgYW4gZWZmaWNpZW50IHdlaWdoaW5nIGRlc2lnbiBpcyBhIGNvbW1vbiBwcm9ibGVtIGluIG1hc3MgbWV0cm9sb2d5LiBUaGUgY2FsaWJyYXRpb24gb2YgYSBzZXQgb2Ygbm9taW5hbGx5IGVxdWFsIG1hc3NlcyBpbiB0ZXJtcyBvZiBvbmUgb3IgbW9yZSByZWZlcmVuY2UgbWFzc2VzIG9mIHRoZSBzYW1lIHZhbHVlIGRvZXMgbm90IG5vcm1hbGx5IHByZXNlbnQgYW55IGRpZmZpY3VsdHksIGJ1dCBkZXNpZ25zIGZvciBleHRlbmRpbmcgdGhlIGNhbGlicmF0aW9uIG9mIGEga2lsb2dyYW0gbWFzcyB0byBtdWx0aXBsZXMgYW5kIHN1Ym11bHRpcGxlcyBvZiB0aGUgdW5pdCBhcmUgbW9yZSBjb21wbGV4LiBBIHNlbGVjdGlvbiBydWxlIHRoYXQgaXMgdmVyeSB3aWRlbHkgdXNlZCBpcyB0aGF0IHRoZSBkZXNpZ24gbWF0cml4IGJlIG9ydGhvZ29uYWwuIEhvd2V2ZXIsIG9ydGhvZ29uYWxpdHkgaXMgYWR2YW50YWdlb3VzIG9ubHkgd2hlbiBhbGwgdGhlIHdlaWdoaW5ncyBpbiB0aGUgZGVzaWduIGhhdmUgdGhlIHNhbWUgdmFyaWFuY2UuIEluIGFjY3VyYXRlIHdvcmsgdGhpcyBpcyBnZW5lcmFsbHkgbm90IHRoZSBjYXNlLCBhcyB0aGUgdmFyaWFuY2Ugb2YgYmFsYW5jZXMgaXMgbG9hZC1kZXBlbmRlbnQgYW5kIGZ1cnRoZXJtb3JlIGl0IGlzIG9mdGVuIG5lY2Vzc2FyeSB0byB1c2UgbW9yZSB0aGFuIG9uZSBiYWxhbmNlLiBEZXNpZ25zIHdoaWNoIG1ha2UgYmV0dGVyIHVzZSBvZiB3ZWlnaGluZ3Mgb2Ygbm9uLXVuaWZvcm0gdmFyaWFuY2UgaGF2ZSBiZWVuIHN0dWRpZWQsIGFuZCBhIHByYWN0aWNhbCBhcHByb2FjaCB0byB0aGUgY29uc3RydWN0aW9uIG9mIHN1Y2ggZGVzaWducyBpcyBnaXZlbi48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDAxIj5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDE8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjM3OTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCVByb3BhZ2F0aW9uIG9mIFZhcmlhbmNlIGluIERldyBQb2ludCBhbmQgUHN5Y2hyb21ldGVyIEh1bWlkaXR5IEdhdWdlczwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gRyBEIENoYXBtYW48L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iUHJvcGFnYXRpb24gb2YgVmFyaWFuY2UgaW4gRGV3IFBvaW50IGFuZCBQc3ljaHJvbWV0ZXIgSHVtaWRpdHkgR2F1Z2VzIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iUHJvcGFnYXRpb24gb2YgVmFyaWFuY2UgaW4gRGV3IFBvaW50IGFuZCBQc3ljaHJvbWV0ZXIgSHVtaWRpdHkgR2F1Z2VzIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMi9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtQcm9wYWdhdGlvbiBvZiBWYXJpYW5jZSBpbiBEZXcgUG9pbnQgYW5kIFBzeWNocm9tZXRlciBIdW1pZGl0eSBHYXVnZXM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDIvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtQcm9wYWdhdGlvbiBvZiBWYXJpYW5jZSBpbiBEZXcgUG9pbnQgYW5kIFBzeWNocm9tZXRlciBIdW1pZGl0eSBHYXVnZXM8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPkFuIGFuYWx5c2lzIG9mIHRoZSBwcm9wYWdhdGlvbiBvZiB0aGUgdmFyaWFuY2Ugb2YgdGVtcGVyYXR1cmUgYW5kIGJhcm9tZXRyaWMgcHJlc3N1cmUgaW4gdGhlIGRldGVybWluYXRpb24gb2YgcmVsYXRpdmUgaHVtaWRpdHkgYnkgbWVhbnMgb2YgZGV3IHBvaW50IGdhdWdlcyBhbmQgcHN5Y2hyb21ldGVycyBpcyBwcmVzZW50ZWQuIFRoZSByZXN1bHRzIGFyZSBhcHBsaWNhYmxlIGluIHRoZSB0ZW1wZXJhdHVyZSByYW5nZSAyNzMgSyB0byAzMDAgSyBhbmQgdG8gYmFyb21ldHJpYyBwcmVzc3VyZXMgYmV0d2VlbiBhYm91dCA2MCBrUGEgYW5kIDExNSBrUGEuPC9wPjwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMiI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDAyPC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj4zODk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDMiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlDb21wYXJpc29uIG9mIEpvc2VwaHNvbiBWb2x0YWdlIFN0YW5kYXJkcyBvZiB0aGUgRWxlY3Ryb3RlY2huaWNhbCBMYWJvcmF0b3J5IGFuZCB0aGUgQnVyZWF1IEludGVybmF0aW9uYWwgZGVzIFBvaWRzIGV0IE1lc3VyZXM8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEQgUmV5bWFubjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEEgSXdhc2E8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBIIFlvc2hpZGE8L3NwYW4+PC9zcGFuPiwgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBUIEVuZG88L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBUIEogV2l0dDwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJDb21wYXJpc29uIG9mIEpvc2VwaHNvbiBWb2x0YWdlIFN0YW5kYXJkcyBvZiB0aGUgRWxlY3Ryb3RlY2huaWNhbCBMYWJvcmF0b3J5IGFuZCB0aGUgQnVyZWF1IEludGVybmF0aW9uYWwgZGVzIFBvaWRzIGV0IE1lc3VyZXMiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJDb21wYXJpc29uIG9mIEpvc2VwaHNvbiBWb2x0YWdlIFN0YW5kYXJkcyBvZiB0aGUgRWxlY3Ryb3RlY2huaWNhbCBMYWJvcmF0b3J5IGFuZCB0aGUgQnVyZWF1IEludGVybmF0aW9uYWwgZGVzIFBvaWRzIGV0IE1lc3VyZXMiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDAzL21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NvbXBhcmlzb24gb2YgSm9zZXBoc29uIFZvbHRhZ2UgU3RhbmRhcmRzIG9mIHRoZSBFbGVjdHJvdGVjaG5pY2FsIExhYm9yYXRvcnkgYW5kIHRoZSBCdXJlYXUgSW50ZXJuYXRpb25hbCBkZXMgUG9pZHMgZXQgTWVzdXJlczwvc3Bhbj48L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMy9wZGYiIGNsYXNzPSJtci0yIG5vd3JhcCI+PHNwYW4gY2xhc3M9Imljb24tZmlsZS1wZGYiPjwvc3Bhbj5QREY8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO0NvbXBhcmlzb24gb2YgSm9zZXBoc29uIFZvbHRhZ2UgU3RhbmRhcmRzIG9mIHRoZSBFbGVjdHJvdGVjaG5pY2FsIExhYm9yYXRvcnkgYW5kIHRoZSBCdXJlYXUgSW50ZXJuYXRpb25hbCBkZXMgUG9pZHMgZXQgTWVzdXJlczwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIG9uZSB2b2x0IHN0YW5kYXJkcyBvZiB0aGUgRWxlY3Ryb3RlY2huaWNhbCBMYWJvcmF0b3J5IChFVEwpLCBUc3VrdWJhLCBKYXBhbiwgYW5kIHRoZSBCdXJlYXUgSW50ZXJuYXRpb25hbCBkZXMgUG9pZHMgZXQgTWVzdXJlcyAoQklQTSksIFPDqHZyZXMsIEZyYW5jZSwgd2VyZSBjb21wYXJlZCBieSB0aHJlZSBtZXRob2RzOiBkaXJlY3QgY29tcGFyaXNvbiBvZiB0aGUgb3V0cHV0cyBvZiBKb3NlcGhzb24ganVuY3Rpb24gYXJyYXlzOyBpbmRpcmVjdCBjb21wYXJpc29uIHZpYSBhIHZvbHRhZ2UgdHJhbnNmZXIgc3RhbmRhcmQ7IGFuZCBzaW1wbGUgY29tcGFyaXNvbiBvZiBzdGFuZGFyZHMgYmFzZWQgb24gWmVuZXIgZGlvZGVzIGNhbGlicmF0ZWQgd2l0aCB0aGUgYXJyYXkgaW5zdHJ1bWVudHMuIFRoZSBmaXJzdCB0d28gbWV0aG9kcyBzaG93IG5vIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgdHdvIGFycmF5IHN0YW5kYXJkcyB0byB3aXRoaW4gYSB0eXBlIEEgdW5jZXJ0YWludHkgb2YgMSw1IHBhcnRzIGluIDEwPHN1cD4xMDwvc3VwPiAoMCwxNSBuVikuIFRoZSBjb21iaW5lZCB1bmNlcnRhaW50eSBmb3IgdGhlIGZpcnN0IHR3byBtZXRob2RzIGlzIDAsMiBuVi4gRm9yIHRoZSBaZW5lciBkaW9kZSBtZWFzdXJlbWVudHMgdGhlIEVUTCB2YWx1ZSB3YXMgMiBuViBoaWdoZXIgdGhhbiB0aGF0IG9mIHRoZSBCSVBNIHdoZW4gdGhlIFplbmVyIGRpb2RlIGRldmljZSdzIG91dHB1dCB3YXMgZ3JvdW5kZWQgYW5kIDE2IG5WIGxvd2VyIHdoZW4gaXQgd2FzIGZsb2F0aW5nLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDMiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwMzwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+Mzk3PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA0IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJUmVhbC10aW1lIFJlc3RpdHV0aW9uIG9mIEdQUyBUaW1lIFRocm91Z2ggYSBLYWxtYW4gRXN0aW1hdGlvbjwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gQ2xhdWRpbmUgVGhvbWFzPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlJlYWwtdGltZSBSZXN0aXR1dGlvbiBvZiBHUFMgVGltZSBUaHJvdWdoIGEgS2FsbWFuIEVzdGltYXRpb24iIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJSZWFsLXRpbWUgUmVzdGl0dXRpb24gb2YgR1BTIFRpbWUgVGhyb3VnaCBhIEthbG1hbiBFc3RpbWF0aW9uIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwNC9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtSZWFsLXRpbWUgUmVzdGl0dXRpb24gb2YgR1BTIFRpbWUgVGhyb3VnaCBhIEthbG1hbiBFc3RpbWF0aW9uPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA0L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7UmVhbC10aW1lIFJlc3RpdHV0aW9uIG9mIEdQUyBUaW1lIFRocm91Z2ggYSBLYWxtYW4gRXN0aW1hdGlvbjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+VGhlIEdsb2JhbCBQb3NpdGlvbmluZyBTeXN0ZW0gaXMgYW4gb3V0c3RhbmRpbmcgdG9vbCBmb3IgdGhlIGRpc3NlbWluYXRpb24gb2YgdGltZS4gRXF1aXBwZWQgd2l0aCBDL0EtY29kZSBHUFMgdGltZSByZWNlaXZlcnMsIGNpdmlsIHVzZXJzIG1heSBhY2Nlc3MgdGhlIHRpbWUgc2NhbGUgR1BTIHRpbWUsIHdoaWNoIGlzIGRpc3NlbWluYXRlZCBieSB0aGUgR1BTIHNhdGVsbGl0ZXMsIGFuZCB0aGVuIHRoZSByZWZlcmVuY2UgdGltZSBzY2FsZXMgVVRDKFVTTk8pIGFuZCBVVEMuIEF0IGEgZ2l2ZW4gaW5zdGFudCwgdGhlIHJlc3RpdHV0aW9uIG9mIEdQUyB0aW1lIHRocm91Z2ggdGhlIHNhdGVsbGl0ZSBjb25zdGVsbGF0aW9uIHByZXNlbnRzIGEgcGVhay10by1wZWFrIGRpc2NyZXBhbmN5IG9mIHNldmVyYWwgdGVucyBvZiBuYW5vc2Vjb25kcyB3aXRob3V0IFNBIGFuZCBzZXZlcmFsIGh1bmRyZWRzIG9mIG5hbm9zZWNvbmRzIHdpdGggU0EuIFRoZSBhcHBsaWNhdGlvbiBvZiBhIEthbG1hbiBmaWx0ZXIgdG8gR1BTIHRpbWluZyBkYXRhIGFsbG93cyBsb2NhbCBhY2Nlc3MgdG8gR1BTIHRpbWUgdGhyb3VnaCBhbiBlc3RpbWF0aW9uIGJhc2VkIG9uIHBhc3QgZGF0YSBhbmQgdXBkYXRlZCBhdCBlYWNoIG5ldyBvYnNlcnZhdGlvbi4gVGhlIHJlYWwtdGltZSByZXN0aXR1dGlvbiBvZiBHUFMgdGltZSwgd2l0aCBpbXBsZW1lbnRhdGlvbiBvZiBTQSwgaXMgdGhlbiBpbXByb3ZlZCB0byB0aGUgbGV2ZWwgb2J0YWluZWQgd2l0aG91dCBTQS4gVGhpcyBwYXBlciBnaXZlcyBkZXRhaWxzIG9mIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBzdWNoIGEgbWV0aG9kIHRvZ2V0aGVyIHdpdGggYSBudW1lcmljYWwgdGVzdCBvZiBpdHMgcG90ZW50aWFsLjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDQiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwNDwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+NDE1PC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA1IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJVGhlcm1vZHluYW1pYyBJbmNvbnNpc3RlbmN5IG9mIHRoZSBJVFMtOTAgQmVsb3cgMSw1IEs8L2E+CgkJCTwvZGl2PgoJCQk8cCBjbGFzcz0ic21hbGwgYXJ0LWxpc3QtaXRlbS1tZXRhIj48c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IEIgRmVsbG11dGg8L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBHIFNjaHVzdGVyPC9zcGFuPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgoJCQkJPGEgaHJlZj0iIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQ9IlRoZXJtb2R5bmFtaWMgSW5jb25zaXN0ZW5jeSBvZiB0aGUgSVRTLTkwIEJlbG93IDEsNSBLIiBkYXRhLWxpbmstcHVycG9zZS1hcHBlbmQtb3Blbj0iVGhlcm1vZHluYW1pYyBJbmNvbnNpc3RlbmN5IG9mIHRoZSBJVFMtOTAgQmVsb3cgMSw1IEsiCWRhdGEtcmV2ZWFsLWxhYmVsLWFsdD0iQ2xvc2UgYWJzdHJhY3QiIGNsYXNzPSJyZXZlYWwtdHJpZ2dlciBtci0yIG5vd3JhcCIgZGF0YS1yZXZlYWwtdGV4dD0iT3BlbiBhYnN0cmFjdCI+T3BlbiBhYnN0cmFjdDwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA1L21ldGEiIGNsYXNzPSJtci0yIG5vd3JhcCI+IDxzcGFuIGNsYXNzPSJpY29uLWFydGljbGUiPjwvc3Bhbj5WaWV3IGFydGljbGU8c3BhbiBjbGFzcz0ib2Zmc2NyZWVuLWhpZGRlbiI+LCZuYnNwO1RoZXJtb2R5bmFtaWMgSW5jb25zaXN0ZW5jeSBvZiB0aGUgSVRTLTkwIEJlbG93IDEsNSBLPC9zcGFuPjwvYT4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA1L3BkZiIgY2xhc3M9Im1yLTIgbm93cmFwIj48c3BhbiBjbGFzcz0iaWNvbi1maWxlLXBkZiI+PC9zcGFuPlBERjxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7VGhlcm1vZHluYW1pYyBJbmNvbnNpc3RlbmN5IG9mIHRoZSBJVFMtOTAgQmVsb3cgMSw1IEs8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB3ZC1qbmwtYXJ0LWFic3RyYWN0IGNmIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgoJCQkJCQkJCTxwPk5ldyB0aGVybW9keW5hbWljIGNhbGN1bGF0aW9ucyBoYXZlIGJlZW4gbWFkZSBvZiB0aGUgPHN1cD4zPC9zdXA+SGUgdmFwb3VyLXByZXNzdXJlIHNjYWxlIHVzaW5nIHJlY2VudGx5LXB1Ymxpc2hlZCB0aGVybWFsIGFuZCBQVlQgZGF0YSBmb3IgdGhlIGxpcXVpZCBhbmQgdmFwb3VyIHBoYXNlcy4gSXQgaXMgc2hvd24gdGhhdCBieSBtYWtpbmcgcmVhc29uYWJsZSBjaG9pY2VzIG9mIHRoZSBkYXRhIGZvciB0aGUgc2Vjb25kIGFuZCB0aGlyZCB2aXJpYWwgY29lZmZpY2llbnRzIG9mIHRoZSB2YXBvdXIsIGFuZCBmb3IgdGhlIGhlYXQgY2FwYWNpdHkgb2YgdGhlIGxpcXVpZCwgZ29vZCBhZ3JlZW1lbnQgY2FuIGJlIG9idGFpbmVkIGJldHdlZW4gYSBjYWxjdWxhdGVkIHZhcG91ci1wcmVzc3VyZSBzY2FsZSBhbmQgcmVjZW50IGV4cGVyaW1lbnRhbCBvYnNlcnZhdGlvbnMgYmFzZWQgb24gbWFnbmV0aWMgdGhlcm1vbWV0cnkuIFRoZXNlIGhhdmUgcmV2ZWFsZWQgZGV2aWF0aW9ucyBvZiB0aGUgSVRTLTkwIGZyb20gdGhlcm1vZHluYW1pYyB0ZW1wZXJhdHVyZSBvZiB1cCB0byAxIG1LIGF0IDAsNjUgSy48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA1Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDU8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0gcmV2ZWFsLWNvbnRhaW5lciByZXZlYWwtY2xvc2VkIHJldmVhbC1wbHVzLWljb24iPgo8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLWJvZHkiPgoJCTxkaXYgY2xhc3M9ImluZGV4ZXIiPjQyNTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJleWVicm93Ij4KCQkJCTwhLS0gU3RhcnQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+CiAgICA8IS0tIEVuZCBDb2xsZWN0aW9uIExhYmVscyAtLT4gPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUtd3JhcHBlciI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwNiIgY2xhc3M9ImFydC1saXN0LWl0ZW0tdGl0bGUiPgoJCQkJCUVsYXN0aWMgRGlzdG9ydGlvbnMgaW4gUGlzdG9uLUN5bGluZGVyIFVuaXRzIGF0IFByZXNzdXJlcyB1cCB0byAwLDUgR1BhPC9hPgoJCQk8L2Rpdj4KCQkJPHAgY2xhc3M9InNtYWxsIGFydC1saXN0LWl0ZW0tbWV0YSI+PHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBHIEYgTW9saW5hcjwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFIgTWFnaGVuemFuaTwvc3Bhbj48L3NwYW4+LCA8c3BhbiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIiBpdGVtcHJvcD0iYXV0aG9yIiBjbGFzcz0ibm93cmFwIj48c3BhbiBpdGVtcHJvcD0ibmFtZSI+IFAgQyBDcmVzdG88L3NwYW4+PC9zcGFuPiBhbmQgPHNwYW4gaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiIgaXRlbXByb3A9ImF1dGhvciIgY2xhc3M9Im5vd3JhcCI+PHNwYW4gaXRlbXByb3A9Im5hbWUiPiBMIEJpYW5jaGk8L3NwYW4+PC9zcGFuPjwvcD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZD0iRWxhc3RpYyBEaXN0b3J0aW9ucyBpbiBQaXN0b24tQ3lsaW5kZXIgVW5pdHMgYXQgUHJlc3N1cmVzIHVwIHRvIDAsNSBHUGEiIGRhdGEtbGluay1wdXJwb3NlLWFwcGVuZC1vcGVuPSJFbGFzdGljIERpc3RvcnRpb25zIGluIFBpc3Rvbi1DeWxpbmRlciBVbml0cyBhdCBQcmVzc3VyZXMgdXAgdG8gMCw1IEdQYSIJZGF0YS1yZXZlYWwtbGFiZWwtYWx0PSJDbG9zZSBhYnN0cmFjdCIgY2xhc3M9InJldmVhbC10cmlnZ2VyIG1yLTIgbm93cmFwIiBkYXRhLXJldmVhbC10ZXh0PSJPcGVuIGFic3RyYWN0Ij5PcGVuIGFic3RyYWN0PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDYvbWV0YSIgY2xhc3M9Im1yLTIgbm93cmFwIj4gPHNwYW4gY2xhc3M9Imljb24tYXJ0aWNsZSI+PC9zcGFuPlZpZXcgYXJ0aWNsZTxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj4sJm5ic3A7RWxhc3RpYyBEaXN0b3J0aW9ucyBpbiBQaXN0b24tQ3lsaW5kZXIgVW5pdHMgYXQgUHJlc3N1cmVzIHVwIHRvIDAsNSBHUGE8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDYvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtFbGFzdGljIERpc3RvcnRpb25zIGluIFBpc3Rvbi1DeWxpbmRlciBVbml0cyBhdCBQcmVzc3VyZXMgdXAgdG8gMCw1IEdQYTwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+RWxhc3RpYyBkaXN0b3J0aW9ucyBpbiBwaXN0b24tY3lsaW5kZXIgdW5pdHMsIHVzZWQgaW4gcHJpbWFyeSBzdGFuZGFyZCBwaXN0b24gZ2F1Z2VzLCBhcmUgcmVzcG9uc2libGUgZm9yIGxhcmdlIHVuY2VydGFpbnRpZXMgaW4gcHJlc3N1cmUgbWVhc3VyZW1lbnQgdmFsdWVzIHR5cGljYWxseSBoaWdoZXIgdGhhbiA1MCBNUGEuIFRoZSBwcmVzZW50IHN0dWR5IGNvbnNpZGVycyB0aGUgcmVzdWx0cyBvYnRhaW5lZCBpbiB0aGUgY2FsY3VsYXRpb24gb2YgdGhlIHByZXNzdXJlIGRpc3RvcnRpb24gY29lZmZpY2llbnRzIG9mIHR3byAxMDAgTVBhIHBpc3Rvbi1jeWxpbmRlciB1bml0cyBhbmQgb25lIDUwMCBNUGEgdW5pdC4gVGhlIGNhbGN1bGF0aW9uIG9mIGRpc3RvcnRpb25zIGluIHRoZSBhYm92ZSBwaXN0b24tY3lsaW5kZXIgdW5pdHMgZm9sbG93cyB0aGUgYXBwbGljYXRpb24gb2YgYW4gYW5hbHl0aWNhbCB0ZWNobmlxdWUgdGFraW5nIGFjY291bnQgaXRlcmF0aXZlbHkgb2YgbWVjaGFuaWNhbCBkaXN0b3J0aW9ucyBhbmQgcHJlc3N1cmUgZGlzdHJpYnV0aW9uIGluIHRoZSBwaXN0b24tY3lsaW5kZXIgY2xlYXJhbmNlLiBUaGUgZGlzdG9ydGlvbiB2YWx1ZXMgZXhwZXJpbWVudGFsbHkgZGV0ZXJtaW5lZCBvbiB0aGUgb3V0ZXIgc3VyZmFjZSBvZiB0aGUgY3lsaW5kZXJzIGFyZSBjb21wYXJlZCB3aXRoIHRoZSBjYWxjdWxhdGVkIHJlc3VsdHMuIFByZXNzdXJlIGRpc3RyaWJ1dGlvbnMgaW4gdGhlIHBpc3Rvbi1jeWxpbmRlciBjbGVhcmFuY2VzLCBhbmQgcGlzdG9uIGFuZCBjeWxpbmRlciByYWRpYWwgZGlzcGxhY2VtZW50cywgYXJlIGNhbGN1bGF0ZWQgZm9yIHZhcmlvdXMgY29uZGl0aW9ucyBvZiB1c2UgYW5kIHRoZSByZXN1bHRzIGFsbG93IHRoZSBwcmVzc3VyZSBkaXN0b3J0aW9uIGNvZWZmaWNpZW50IG9mIGVhY2ggdW5pdCB0byBiZSBvYnRhaW5lZC4gRGlmZmVyZW50IGVmZmVjdHMgb24gcGlzdG9uLWN5bGluZGVyIHVuaXRzIGFyZSBldmFsdWF0ZWQgdG8gYWNxdWlyZSB1c2VmdWwgaW5mb3JtYXRpb24gb24gcGlzdG9uIGdhdWdlcyBhbmQgdG8gaW1wcm92ZSB0aGVpciBhY2N1cmFjeS48L3A+PC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibXItMiIJaHJlZj0iaHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA2Ij5odHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDY8L2E+CjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KPC9kaXY+CjxoMyBjbGFzcz0iYmR0LTYgYmQtZ3JleS10aW50IG1iLTEiPk9CSVRVQVJZPC9oMz4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtIHJldmVhbC1jb250YWluZXIgcmV2ZWFsLWNsb3NlZCByZXZlYWwtcGx1cy1pY29uIj4KPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS1ib2R5Ij4KCQk8ZGl2IGNsYXNzPSJpbmRleGVyIj40NDE8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZXllYnJvdyI+CgkJCQk8IS0tIFN0YXJ0IENvbGxlY3Rpb24gTGFiZWxzIC0tPgogICAgPCEtLSBFbmQgQ29sbGVjdGlvbiBMYWJlbHMgLS0+IDwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlLXdyYXBwZXIiPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi9FMDEiIGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRpdGxlIj4KCQkJCQlMZXNsaWUgRSBIb3dsZXR0LCAxOTA04oCTMTk5MjwvYT4KCQkJPC9kaXY+CgkJCTxwIGNsYXNzPSJzbWFsbCBhcnQtbGlzdC1pdGVtLW1ldGEiPjxzcGFuIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iIGl0ZW1wcm9wPSJhdXRob3IiIGNsYXNzPSJub3dyYXAiPjxzcGFuIGl0ZW1wcm9wPSJuYW1lIj4gSCBQcmVzdG9uLVRob21hczwvc3Bhbj48L3NwYW4+PC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnQtbGlzdC1pdGVtLXRvb2xzIHNtYWxsIj4KCQkJCTxhIGhyZWY9IiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kPSJMZXNsaWUgRSBIb3dsZXR0LCAxOTA04oCTMTk5MiIgZGF0YS1saW5rLXB1cnBvc2UtYXBwZW5kLW9wZW49Ikxlc2xpZSBFIEhvd2xldHQsIDE5MDTigJMxOTkyIglkYXRhLXJldmVhbC1sYWJlbC1hbHQ9IkNsb3NlIGFic3RyYWN0IiBjbGFzcz0icmV2ZWFsLXRyaWdnZXIgbXItMiBub3dyYXAiIGRhdGEtcmV2ZWFsLXRleHQ9Ik9wZW4gYWJzdHJhY3QiPk9wZW4gYWJzdHJhY3Q8L2E+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82L0UwMS9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDtMZXNsaWUgRSBIb3dsZXR0LCAxOTA04oCTMTk5Mjwvc3Bhbj48L2E+CgkJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0icmV2ZWFsLWNvbnRlbnQiPgoJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHZpZXctdGV4dC1zbWFsbCI+CgkJCQkJPGRpdiBjbGFzcz0iYXJ0aWNsZS10ZXh0IHdkLWpubC1hcnQtYWJzdHJhY3QgY2YiIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+CgkJCQkJCQkJPHA+RHIgTCBFIEhvd2xldHQgb2YgT3R0YXdhIChDYW5hZGEpLCB3aG8gZGllZCBpbiBoaXMgODh0aCB5ZWFyIG9uIDIxIEphbnVhcnkgMTk5Miwgd2FzIGEgbWVtYmVyIG9mIHRoZSBDb21pdMOpIEludGVybmF0aW9uYWwgZGVzIFBvaWRzIGV0IE1lc3VyZXMgKENJUE0pIGZyb20gMTk1NSB0byAxOTY4IGFuZCB3YXMgUHJlc2lkZW50IG9mIHRoZSBDb21pdMOpIENvbnN1bHRhdGlmIHBvdXIgbGEgRMOpZmluaXRpb24gZHUgTcOodHJlIChDQ0RNKSBmcm9tIDE5NTYuIEhlIHdhcyBlbGVjdGVkIFZpY2UtUHJlc2lkZW50IG9mIHRoZSBDSVBNIGluIDE5NjAgYW5kIFByZXNpZGVudCBpbiAxOTY0LCBhbmQgd2FzIG1hZGUgYW4gaG9ub3JhcnkgbWVtYmVyIGZvbGxvd2luZyBoaXMgcmV0aXJlbWVudCBpbiAxOTY4LjwvcD48cD5BZnRlciB0YWtpbmcgZGVncmVlcyBmcm9tIHRoZSB1bml2ZXJzaXRpZXMgb2YgQnJpdGlzaCBDb2xvbWJpYSwgVG9yb250byBhbmQgTWNHaWxsLCBIb3dsZXR0IGpvaW5lZCBDYW5hZGEncyBOYXRpb25hbCBSZXNlYXJjaCBDb3VuY2lsIGluIDE5MzEsIHJlbWFpbmluZyB3aXRoIHRoYXQgaW5zdGl0dXRpb24gZm9yIHZpcnR1YWxseSBhbGwgb2YgaGlzIHdvcmtpbmcgbGlmZS4gSGUgaW5pdGlhbGx5IHNldCB1cCwgc2luZ2xlaGFuZGVkbHksIGFuIG9wdGljcyBsYWJvcmF0b3J5IGF0IHRoZSBOUkMsIGJlaW5nIGpvaW5lZCBieSBhIHRlY2huaWNpYW4gaW4gMTkzMi4gQnkgdGhlIGJlZ2lubmluZyBvZiB0aGUgd2FyIGluIFNlcHRlbWJlciAxOTM5IHRoZSBsYWJvcmF0b3J5IGhhZCBhIHN0YWZmIG9mIGZvdXIsIGFuZCB0aGlzIHdhcyB0aGUgYmFzaXMgZnJvbSB3aGljaCwgdW5kZXIgSG93bGV0dCdzIGRpcmVjdGlvbiwgYW5kIHdpdGggbm8gcHJpb3Igb3B0aWNhbCBwcm9kdWN0aW9uIGluIHRoZSBjb3VudHJ5LCBhIENhbmFkaWFuIG9wdGljYWwgaW5kdXN0cnkgd2FzIGdlbmVyYXRlZCwgd2l0aCBzYW1wbGVzIG9mIGEgdmFyaWV0eSBvZiBvcHRpY2FsIGluc3RydW1lbnRzIGJlaW5nIGNvbXBsZXRlZCBieSB0aGUgZW5kIG9mIEFwcmlsIDE5NDAsIGFuZCBtYW55IHRob3VzYW5kcyBvZiBwcmVjaXNpb24gb3B0aWNhbCBjb21wb25lbnRzIGJlaW5nIG1hbnVmYWN0dXJlZCBkdXJpbmcgdGhlIGNvdXJzZSBvZiB0aGUgd2FyLjwvcD48cD5NdWNoIG9mIHRoaXMgcHJlY2lzaW9uIG9wdGljYWwgd29yayBpbnZvbHZlZCB0ZXN0aW5nLCBtZWFzdXJlbWVudCBhbmQgY2FsaWJyYXRpb24uIEhvd2xldHQncyBpbnRlcmVzdHMgaW4gc3VjaCB3b3JrIHdlcmUgc3Vic3RhbnRpYWxseSBlbmxhcmdlZCB3aGVuIGluIDE5NDggaGUgd2FzIHB1dCBpbiBjaGFyZ2UsIGFzIEFzc2lzdGFudCBEaXJlY3Rvciwgb2YgYXBwbGllZCByZXNlYXJjaCBpbiB0aGUgRGl2aXNpb24gb2YgUGh5c2ljcy4gVGhpcyB3YXMsIGluIGVmZmVjdCwgdG8gYmUgaW4gY2hhcmdlIG9mIENhbmFkYSdzIHN0YW5kYXJkcyBsYWJvcmF0b3J5LCBhbmQgaGUgdGhlbiB3YXMgbmF0dXJhbGx5IGEgY2FuZGlkYXRlIGZvciBtZW1iZXJzaGlwIG9mIHRoZSBDSVBNLiBPbiB0aGUgc3Vic2VxdWVudCBlc3RhYmxpc2htZW50IG9mIHRoZSBEaXZpc2lvbiBvZiBBcHBsaWVkIFBoeXNpY3MgSG93bGV0dCBiZWNhbWUgaXRzIERpcmVjdG9yLCBhIHBvc2l0aW9uIGhlIHJldGFpbmVkIHVudGlsIGhpcyByZXRpcmVtZW50LjwvcD48cD5JdCB3YXMgdW5kZXIgSG93bGV0dCdzIGRpcmVjdGlvbiB0aGF0IENhbmFkYSBwcm9ncmVzc2VkIGZyb20gYSBzdGF0ZSBvZiBoYXZpbmcgb25seSBjb21tZXJjaWFsIGFuZCBzdXJ2ZXlpbmcgc3RhbmRhcmRzIG9mIHZlcnkgbW9kZXJhdGUgcHJlY2lzaW9uIHRvIHRoYXQgb2YgcG9zc2Vzc2luZyBhIHdvcmxkLWNsYXNzIHN0YW5kYXJkcyBsYWJvcmF0b3J5LiBEdXJpbmcgdGhlIHBlcmlvZCBvZiBoaXMgbWVtYmVyc2hpcCBvZiB0aGUgQ0lQTSwKaGUgd2FzIGFuIGVudGh1c2lhc3RpYyBwcm9wb25lbnQgb2YgdGhlIGVzdGFibGlzaG1lbnQgb2YgdGhlIGlvbml6aW5nIHJhZGlhdGlvbiBsYWJvcmF0b3J5IGF0IHRoZSBCSVBNLCBhbmQgb2YgdGhlIGludHJvZHVjdGlvbiBvZiBxdWFudHVtIG1ldHJvbG9neSB0byB0aGUgU0kgaW4gdGhlIGZvcm0gb2YgdGhlIGtyeXB0b24tODYgZGVmaW5pdGlvbiBvZiB0aGUgbWV0cmUsIGFkb3B0ZWQgaW4gMTk2MCBkdXJpbmcgaGlzIHByZXNpZGVuY3kgb2YgdGhlIENDRE0sIGFuZCB0aGUgY2Flc2l1bS0xMzMgZGVmaW5pdGlvbiBvZiB0aGUgc2Vjb25kIGluIDE5NjcuIEhlIHdhcyByZXNwb25zaWJsZSBmb3IgZXN0YWJsaXNoaW5nICA8aT5NZXRyb2xvZ2lhPC9pPiwgdW5kZXIgdGhlIGF1c3BpY2VzIG9mIHRoZSBDSVBNLCBiZWluZyBlZGl0b3IgZnJvbSBpdHMgaW5jZXB0aW9uIGluIDE5NjUgdW50aWwgaGlzIHJldGlyZW1lbnQuIEZvciB0aGVzZSwgYW5kIGZvciBtYW55IG90aGVyIHJlbGF0ZWQgc2VydmljZXMsIENhbmFkYSBhbmQgdGhlIHdvcmxkIG1lYXN1cmVtZW50IGNvbW11bml0eSB3aWxsIHJlbWVtYmVyIGhpbSBhbmQgaGlzIHdvcmsgd2l0aCBncmF0aXR1ZGUuCjwvcD48L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tdG9vbHMgc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtci0yIglocmVmPSJodHRwczovL2RvaS5vcmcvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi9FMDEiPmh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8yOS82L0UwMTwvYT4KPC9kaXY+CgkJCTwvZGl2PgoJCTwvZGl2Pgo8L2Rpdj4KPGgzIGNsYXNzPSJiZHQtNiBiZC1ncmV5LXRpbnQgbWItMSI+Q09ORkVSRU5DRSBOT1RFUzwvaDM+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbSByZXZlYWwtY29udGFpbmVyIHJldmVhbC1jbG9zZWQgcmV2ZWFsLXBsdXMtaWNvbiI+CjxkaXYgY2xhc3M9ImFydC1saXN0LWl0ZW0tYm9keSI+CgkJPGRpdiBjbGFzcz0iaW5kZXhlciI+NDQyPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImV5ZWJyb3ciPgoJCQkJPCEtLSBTdGFydCBDb2xsZWN0aW9uIExhYmVscyAtLT4KICAgIDwhLS0gRW5kIENvbGxlY3Rpb24gTGFiZWxzIC0tPiA8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZS13cmFwcGVyIj4KCQkJCTxhIGhyZWY9Ii9hcnRpY2xlLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA3IiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10aXRsZSI+CgkJCQkJMTk5NSBDT0RBVEEgQWRqdXN0bWVudCBvZiB0aGUgRnVuZGFtZW50YWwgQ29uc3RhbnRzOiAxOTk0IENvbmZlcmVuY2Ugb24gUHJlY2lzaW9uIEVsZWN0cm9tYWduZXRpYyBNZWFzdXJlbWVudHMgKENQRU0nOTQpPC9hPgoJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CgkJCQk8YSBocmVmPSIvYXJ0aWNsZS8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwNy9tZXRhIiBjbGFzcz0ibXItMiBub3dyYXAiPiA8c3BhbiBjbGFzcz0iaWNvbi1hcnRpY2xlIj48L3NwYW4+VmlldyBhcnRpY2xlPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDsxOTk1IENPREFUQSBBZGp1c3RtZW50IG9mIHRoZSBGdW5kYW1lbnRhbCBDb25zdGFudHM6IDE5OTQgQ29uZmVyZW5jZSBvbiBQcmVjaXNpb24gRWxlY3Ryb21hZ25ldGljIE1lYXN1cmVtZW50cyAoQ1BFTSc5NCk8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iL2FydGljbGUvMTAuMTA4OC8wMDI2LTEzOTQvMjkvNi8wMDcvcGRmIiBjbGFzcz0ibXItMiBub3dyYXAiPjxzcGFuIGNsYXNzPSJpY29uLWZpbGUtcGRmIj48L3NwYW4+UERGPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPiwmbmJzcDsxOTk1IENPREFUQSBBZGp1c3RtZW50IG9mIHRoZSBGdW5kYW1lbnRhbCBDb25zdGFudHM6IDE5OTQgQ29uZmVyZW5jZSBvbiBQcmVjaXNpb24gRWxlY3Ryb21hZ25ldGljIE1lYXN1cmVtZW50cyAoQ1BFTSc5NCk8L3NwYW4+PC9hPgoJCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9InJldmVhbC1jb250ZW50Ij4KCQkJCTxkaXYgY2xhc3M9ImFydGljbGUtdGV4dCB2aWV3LXRleHQtc21hbGwiPgoJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iYXJ0LWxpc3QtaXRlbS10b29scyBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1yLTIiCWhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC4xMDg4LzAwMjYtMTM5NC8yOS82LzAwNyI+aHR0cHM6Ly9kb2kub3JnLzEwLjEwODgvMDAyNi0xMzk0LzI5LzYvMDA3PC9hPgo8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CjwvZGl2Pgo8L2Rpdj4KPC9mb3JtPgo8IS0tIEVuZCBJc3N1ZSBUb2MgRWxlbWVudCBMaXN0aW5nIC0tPjwvZGl2Pgo8IS0tIEVuZCBpc3N1ZSBwYWdlIHRpbGUgLS0+CjwvZGl2PgogICAgICAgICAgICA8L21haW4+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYjIgdGIyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpZGUtYW5kLWJlbG93Ij4KICAgICAgICAgICAgICAgICAgICA8IS0tIFN0YXJ0IEpvdXJuYWwgbGlua3MgLS0+Cjxhc2lkZSBpZD0id2Qtam5sLWxpbmtzIj4KICAgICAgICA8aDIgY2xhc3M9InJlcGxpY2EtaDQiPkpvdXJuYWwgbGlua3M8L2gyPgogICAgICAgIDx1bD48bGk+PGEgaHJlZiA9ICJodHRwOi8vbWMwNC5tYW51c2NyaXB0Y2VudHJhbC5jb20vbWV0LWJpcG0iIHRhcmdldD0iX2JsYW5rIj48c3Ryb25nPlN1Ym1pdCBhbiBhcnRpY2xlPC9zdHJvbmc+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL3B1Ymxpc2hpbmdzdXBwb3J0LmlvcHNjaWVuY2UuaW9wLm9yZy9qb3VybmFscy9tZXRyb2xvZ2lhL2Fib3V0LW1ldHJvbG9naWEvIj5BYm91dCB0aGUgam91cm5hbDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iLzAwMjYtMTM5NC9wYWdlL0VkaXRvcmlhbCBCb2FyZCI+RWRpdG9yaWFsIGJvYXJkPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL3B1Ymxpc2hpbmdzdXBwb3J0LmlvcHNjaWVuY2UuaW9wLm9yZy9qb3VybmFscy9tZXRyb2xvZ2lhLyI+QXV0aG9yIGd1aWRlbGluZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHVibGlzaGluZ3N1cHBvcnQuaW9wc2NpZW5jZS5pb3Aub3JnL3F1ZXN0aW9ucy92b2x1bnRlZXJpbmctdG8tYmUtYS1qb3VybmFsLXJldmlld2VyIj5SZXZpZXcgZm9yIHRoaXMgam91cm5hbDwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL3B1Ymxpc2hpbmdzdXBwb3J0LmlvcHNjaWVuY2UuaW9wLm9yZy9qb3VybmFscy9tZXRyb2xvZ2lhL2Fib3V0LW1ldHJvbG9naWEvI3B1YmxpY2F0aW9uLWNoYXJnZXMiPlB1YmxpY2F0aW9uIGNoYXJnZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Ii8wMDI2LTEzOTQvcGFnZS9Kb3VybmFsX25ld3MiPk5ld3MgYW5kIGVkaXRvcmlhbDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iLzAwMjYtMTM5NC9wYWdlL0F3YXJkcy8iPkF3YXJkczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iLzAwMjYtMTM5NC9wYWdlL0pvdXJuYWxfY29sbGVjdGlvbnMiPkpvdXJuYWwgY29sbGVjdGlvbnM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vaW9wcHVibGlzaGluZy5vcmcvbGlicmFyaWFucy8iPlByaWNpbmcgYW5kIG9yZGVyaW5nPC9hPjwvbGk+CjxsaT48YSBocmVmPSIvMDAyNi0xMzk0L3BhZ2UvQ29udGFjdF91cyI+Q29udGFjdCB1czwvYT48L2xpPgo8L3VsPgogICAgICAgIDwvYXNpZGU+CjwhLS0gRW5kIEpvdXJuYWwgbGlua3MgLS0+CjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwhLS0gRW5kIHR3byBjb2x1bW4gbGF5b3V0IC0tPgo8L2Rpdj4KCiAgICA8ZGl2IGRhdGEtc2Nyb2xsLWhlYWRlcj0iIiBjbGFzcz0iZGF0YS1oZWFkZXItYW5jaG9yIiBpZD0iZXhwIj48L2Rpdj4KPCEtLSBGb290ZXIgdGlsZSBzdGFydHMgLS0+Cjxmb290ZXIgcm9sZT0iY29udGVudGluZm8iIGRhdGEtZm9vdGVyLWNvbnRlbnQ+CiAgICA8ZGl2IGNsYXNzPSJpb3BzLWZvb3RlciBjZiI+CiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciI+CiAgICAgICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iRm9vdGVyIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJpb3BzLWZvb3Rlci1sb2dvIiBpZD0id2QtaW9wcy1mb290ZXItbG9nbyIgaXRlbXByb3A9InVybCIgaHJlZj0iLyI+CiAgICAgICAgICAgICAgICAgICAgPG1ldGEgY29udGVudD0iSU9Qc2NpZW5jZSIgaXRlbXByb3A9Im5hbWUiPgogICAgICAgICAgICAgICAgICAgIDxzdmcgaGVpZ2h0PSIxMyIgd2lkdGg9IjkwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIHhsaW5rOmhyZWY9Imh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuNzkuMC9pbWcvaW9wcy1sb2dvLnN2ZyIgc3JjPSJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjc5LjAvaW1nL2lvcHMtbG9nby5wbmciIGJvcmRlcj0iMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTMiIHdpZHRoPSI5MCIvPgogICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvZmZzY3JlZW4taGlkZGVuIj5JT1AgU2NpZW5jZSBob21lPC9zcGFuPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPHNtYWxsPgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb3VybmFscyI+Sm91cm5hbHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9ib29rcyI+Qm9va3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYWdlL2Fib3V0aW9wc2NpZW5jZSI+QWJvdXQgSU9Qc2NpZW5jZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NvbnRhY3QiPkNvbnRhY3QgdXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbmZvL3BhZ2UvZGV2ZWxvcGluZy1jb3VudHJpZXMtYWNjZXNzIj5EZXZlbG9waW5nIGNvdW50cmllcyBhY2Nlc3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbmZvL3BhZ2Uvb3BlbmFjY2VzcyI+SU9QIFB1Ymxpc2hpbmcgb3BlbiBhY2Nlc3MgcG9saWN5PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgIDwvbmF2PgogICAgICAgIDwvZGl2PiA8IS0tIGVuZCB3cmFwcGVyIC0tPgogICAgPC9kaXY+IDwhLS0gZW5kIGlvcHAtZm9vdGVyIC0tPgoKICAgIDxkaXYgY2xhc3M9ImlvcHAtZm9vdGVyIGNmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEgbWFyLTAgIj4KICAgICAgICAgICAgICAgIDxuYXYgcm9sZT0ibmF2aWdhdGlvbiIgYXJpYS1sYWJlbD0iRnVydGhlciBpbmZvcm1hdGlvbiBhYm91dCBJT1AgUHVibGlzaGluZyI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImlvcHAtZm9vdGVyLWxvZ28iIGlkPSJ3ZC1pb3BwLWZvb3Rlci1sb2dvIiBpdGVtcHJvcD0idXJsIgogICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9pb3BwdWJsaXNoaW5nLm9yZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGNvbnRlbnQ9IklPUHNjaWVuY2UiIGl0ZW1wcm9wPSJuYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTAwIiBoZWlnaHQ9IjE1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSB4bGluazpocmVmPSJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjc5LjAvaW1nL2lvcHAtbG9nby13aGl0ZS5zdmciIHNyYz0iaHR0cHM6Ly9zdGF0aWMuaW9wc2NpZW5jZS5jb20vMi43OS4wL2ltZy9pb3BwLWxvZ28ucG5nIiBib3JkZXI9IjAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMCIgaGVpZ2h0PSIxNSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9mZnNjcmVlbi1oaWRkZW4iPklPUCBQdWJsaXNoaW5nIGhvbWU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkgbWFyLTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNtYWxsIj48YSBocmVmPSIvcGFnZS9jb3B5cmlnaHRfbm90aWNlIj4mY29weTsgQ29weXJpZ2h0IDIwMjIgSU9QCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHVibGlzaGluZzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzbWFsbCI+PGEgaHJlZj0iL3BhZ2UvdGVybXMiPlRlcm1zICZhbXA7IGNvbmRpdGlvbnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic21hbGwiPjxhIGhyZWY9Ii9wYWdlL2Rpc2NsYWltZXIiPkRpc2NsYWltZXI8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic21hbGwiPjxhIGhyZWY9Imh0dHA6Ly9pb3BwdWJsaXNoaW5nLm9yZy9wcml2YWN5UG9saWN5IiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbD0ibm9vcGVuZXIiPlByaXZhY3kgJmFtcDsgY29va2llIHBvbGljeSA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaWNvbi1uZXd0YWIgd2hpdGUtdGV4dCI+PC9zcGFuPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzbWFsbCI+PHNtYWxsPlRoaXMgc2l0ZSB1c2VzIGNvb2tpZXMuIEJ5IGNvbnRpbnVpbmcgdG8gdXNlIHRoaXMgc2l0ZSB5b3UgYWdyZWUgdG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXIgdXNlIG9mIGNvb2tpZXMuPC9zbWFsbD48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9uYXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PiA8IS0tIGVuZCB3cmFwcGVyIC0tPgogICAgPC9kaXY+IDwhLS0gZW5kIGlvcHAtZm9vdGVyIC0tPgo8L2Zvb3Rlcj4KPCEtLSBGb290ZXIgdGlsZSBlbmRzIC0tPgo8c2NyaXB0PgogIHZhciBpbWdCYXNlID0gImh0dHBzOi8vc3RhdGljLmlvcHNjaWVuY2UuY29tLzIuNzkuMC9pbWciOwogIC8qICBDdXR0aW5nIHRoZSBtdXN0YXJkIC0gaHR0cDovL3Jlc3BvbnNpdmVuZXdzLmNvLnVrL3Bvc3QvMTg5NDg0NjYzOTkvY3V0dGluZy10aGUtbXVzdGFyZCAqLwoKICAvKiBUaGlzIGlzIHRoZSBvcmlnaW5hbCBpZiBzdGF0ZW1lbnQsIGZyb20gdGhlIGxpbmsgYWJvdmUuIEkgaGF2ZSBhbWVuZGVkIGl0IHRvIHR1cm4gb2YgSlMgb24gYWxsIElFIGJyb3dzZXJzIGxlc3MgdGhhbiAxMC4KCVRoaXMgaXMgZHVlIHRvIGEgZnVuY3Rpb24gaW4gdGhlIGlvcC5qcXVlcnkudG9vbGJhci5qcyBsaW5lIDM1LzM2LiBVc2VzIC5yZW1vdmUgd2hpY2ggaXMgbm90IG5hdGl2ZSBqcyBzdXBwb3J0ZWQgaW4gSUU5IG9yIGxvd2VyICovCiAgLyogaWYoJ3F1ZXJ5U2VsZWN0b3InIGluIGRvY3VtZW50CgkmJiAnbG9jYWxTdG9yYWdlJyBpbiB3aW5kb3cKCSYmICdhZGRFdmVudExpc3RlbmVyJyBpbiB3aW5kb3cpIHsgKi8KCiAgLyogVGhpcyBpcyB0aGUgdXBkYXRlZCBzZWxlY3RvciwgdGFrZW4gZnJvbTogaHR0cHM6Ly9qdXN0bWFya3VwLmNvbS9sb2cvMjAxNS8wMi8yNi9jdXQtdGhlLW11c3RhcmQtcmV2aXNpdGVkLyAqLwoJaWYoJ3Zpc2liaWxpdHlTdGF0ZScgaW4gZG9jdW1lbnQpIHsKCgkvKiEgbG9hZEpTOiBsb2FkIGEgSlMgZmlsZSBhc3luY2hyb25vdXNseS4gW2NdMjAxNCBAc2NvdHRqZWhsLCBGaWxhbWVudCBHcm91cCwgSW5jLiAoQmFzZWQgb24gaHR0cDovL2dvby5nbC9SRVFHUSBieSBQYXVsIElyaXNoKS4uIExpY2Vuc2VkIE1JVCAqLwoJZnVuY3Rpb24gbG9hZEpTKCBzcmMsIGNiICl7CgkgICJ1c2Ugc3RyaWN0IjsKCSAgdmFyIHJlZiA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggInNjcmlwdCIgKVsgMCBdOwoJICB2YXIgc2NyaXB0ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJzY3JpcHQiICk7CgkgIHNjcmlwdC5zcmMgPSBzcmM7CgkgIHNjcmlwdC5hc3luYyA9IHRydWU7CgkgIHJlZi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggc2NyaXB0LCByZWYgKTsKCSAgaWYgKGNiICYmIHR5cGVvZihjYikgPT09ICJmdW5jdGlvbiIpIHsKCQlzY3JpcHQub25sb2FkID0gY2I7CgkgIH0KCSAgcmV0dXJuIHNjcmlwdDsKCX0KCglsb2FkSlMoICJodHRwczovL3N0YXRpYy5pb3BzY2llbmNlLmNvbS8yLjc5LjAvanMvc2NyaXB0cy5taW4uanMiICk7CgogIH0KPC9zY3JpcHQ+CjwhLS0gR2VuZXJhbCAtIENhbHRlY2ggLS0+CjxzY3JpcHQ+dmFyIGV4Y2x1ZGVkID0gZmFsc2U7dmFyIGV4Y2x1ZGVkX3BhZ2VzID0gWydqb3VybmFsLzA5NTMtODk4NCcsJy9qb3VybmFsLzE3NTEtODEyMScsJy9qb3VybmFsLzI1MTUtNTE3MicsJy9qb3VybmFsLzE1MzgtMzg4MScsJy9qb3VybmFsLzAwMDQtNjM3WCcsJy9qb3VybmFsLzIwNDEtODIwNScsJy9qb3VybmFsLzI2MzItMzMzOCcsJy9qb3VybmFsLzAwNjctMDA0OScsJy9qb3VybmFsLzE3NTEtODEyMScsJy9qb3VybmFsLzA5NTMtODk4NCcsJy9qb3VybmFsTGlzdCddO2ZvcihpPTA7aTxleGNsdWRlZF9wYWdlcy5sZW5ndGg7aSsrKXtpZih3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKGV4Y2x1ZGVkX3BhZ2VzW2ldKT4tMSl7ZXhjbHVkZWQgPSB0cnVlO319aWYoIWV4Y2x1ZGVkKXsoZnVuY3Rpb24oZyxlLG8sdCxhLHIsZ2UsdGwseSl7Y29uc29sZS5sb2coJ3Byb2Nlc3NpbmcnKTt0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlO3ZhciBhPXdpbmRvdyxiPWcuZG9jdW1lbnRFbGVtZW50LGM9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLHc9YS5pbm5lcldpZHRofHxiLmNsaWVudFdpZHRofHxjLmNsaWVudFdpZHRoLGg9YS5pbm5lckhlaWdodHx8Yi5jbGllbnRIZWlnaHR8fGMuY2xpZW50SGVpZ2h0O3kuc3JjPSdodHRwczovL2cxNzgyNzU5MDE2LmNvL2dwP2lkPS1NbnpydUk0aG51TUJ6TjRaQmxUJnJlZnVybD0nK2cucmVmZXJyZXIrJyZ3aW51cmw9JytlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uKSsnJmN3PScrdysnJmNoPScraDt0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7fSkoZG9jdW1lbnQsJ3NjcmlwdCcpO308L3NjcmlwdD4KPCEtLSBGb2N1cyAtIE1hdGhzIC0gQ2FsdGVjaCAtLT4KPHNjcmlwdD4gKGZ1bmN0aW9uKGcsZSxvLHQsYSxyLGdlLHRsLHkpeyB0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlOyB2YXIgYT13aW5kb3csYj1nLmRvY3VtZW50RWxlbWVudCxjPWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSx3PWEuaW5uZXJXaWR0aHx8Yi5jbGllbnRXaWR0aHx8Yy5jbGllbnRXaWR0aCxoPWEuaW5uZXJIZWlnaHR8fGIuY2xpZW50SGVpZ2h0fHxjLmNsaWVudEhlaWdodDsgeS5zcmM9J2h0dHBzOi8vZzE3ODI3NTkwMTYuY28vZ3A/aWQ9LU1uenJBM0pXUlAtMnBTZ283RWkmcmVmdXJsPScrZy5yZWZlcnJlcisnJndpbnVybD0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24pKycmY3c9Jyt3KycmY2g9JytoOyB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7IH0pKGRvY3VtZW50LCdzY3JpcHQnKTs8L3NjcmlwdD4KPCEtLSBGb2N1cyAtIENvbmRlbnNlZCBzdWJqZWN0IGNvbGxlY3Rpb24gLSBDYWx0ZWNoIC0tPgo8c2NyaXB0PiAoZnVuY3Rpb24oZyxlLG8sdCxhLHIsZ2UsdGwseSl7IHQ9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZShlKVswXTt5PWcuY3JlYXRlRWxlbWVudChlKTt5LmFzeW5jPXRydWU7IHZhciBhPXdpbmRvdyxiPWcuZG9jdW1lbnRFbGVtZW50LGM9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLHc9YS5pbm5lcldpZHRofHxiLmNsaWVudFdpZHRofHxjLmNsaWVudFdpZHRoLGg9YS5pbm5lckhlaWdodHx8Yi5jbGllbnRIZWlnaHR8fGMuY2xpZW50SGVpZ2h0OyB5LnNyYz0naHR0cHM6Ly9nMTc4Mjc1OTAxNi5jby9ncD9pZD0tTWlXSkxfRWZGSFJfcjNRV1VJSCZyZWZ1cmw9JytnLnJlZmVycmVyKycmd2ludXJsPScrZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbikrJyZjdz0nK3crJyZjaD0nK2g7IHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoeSx0KTsgfSkoZG9jdW1lbnQsJ3NjcmlwdCcpOzwvc2NyaXB0PjxzY3JpcHQ+ZG9jdW1lbnQub25rZXlkb3duID0gZnVuY3Rpb24oZXZ0KSB7aWYoZXZ0LmtleUNvZGUgPT09IDI3ICYmIHR5cGVvZiBnZW9Qb3B1cENsb3NlID09ICJmdW5jdGlvbiIpe2dlb1BvcHVwQ2xvc2UoKTt9fTs8L3NjcmlwdD4KPCEtLSBBY2Nlc3MgZm9yIFVrcmFpbmlhbiBSZXNlYXJjaGVycyAtLT4KPHNjcmlwdD4gKGZ1bmN0aW9uKGcsZSxvLHQsYSxyLGdlLHRsLHkpeyB0PWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZSlbMF07eT1nLmNyZWF0ZUVsZW1lbnQoZSk7eS5hc3luYz10cnVlOyB2YXIgYT13aW5kb3csYj1nLmRvY3VtZW50RWxlbWVudCxjPWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSx3PWEuaW5uZXJXaWR0aHx8Yi5jbGllbnRXaWR0aHx8Yy5jbGllbnRXaWR0aCxoPWEuaW5uZXJIZWlnaHR8fGIuY2xpZW50SGVpZ2h0fHxjLmNsaWVudEhlaWdodDsgeS5zcmM9J2h0dHBzOi8vZzk3MDYxMzI0MTUuY28vZ3A/aWQ9LU4tMk1EOFFkVzNkTnU0U3E3RG8mcmVmdXJsPScrZy5yZWZlcnJlcisnJndpbnVybD0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24pKycmY3c9Jyt3KycmY2g9JytoOyB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHksdCk7IH0pKGRvY3VtZW50LCdzY3JpcHQnKTs8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSk7TlJFVU0uaW5mbz17ImVycm9yQmVhY29uIjoiYmFtLWNlbGwubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiYjJiZmFhZTFiNiIsImFnZW50IjoiIiwiYmVhY29uIjoiYmFtLWNlbGwubnItZGF0YS5uZXQiLCJhcHBsaWNhdGlvblRpbWUiOjEzNCwiYXBwbGljYXRpb25JRCI6IjE3MzI2ODc3OTAiLCJ0cmFuc2FjdGlvbk5hbWUiOiJOQUFITVVCVkNFTlNBQkZaWGcxS0x6WmlHekYxY1U0c2ZuZE1EeFlWUVJzRlgxNE9DbDRlRHdRY0NrZEFTRnBBRXc9PSIsInF1ZXVlVGltZSI6MH08L3NjcmlwdD48L2JvZHk+CjwvaHRtbD4=
  recorded_at: Sun, 29 May 2022 16:11:56 GMT
recorded_with: VCR 6.1.0
