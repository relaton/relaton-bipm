---
http_interactions:
- request:
    method: get
    uri: https://iopscience.iop.org/issue/0026-1394/29/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip, deflate, br
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
      User-Agent:
      - Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-US,en;q=0.9,ru-RU;q=0.8,ru;q=0.7
      Host:
      - iopscience.iop.org
      Cache-Control:
      - max-age=0
      Upgrade-Insecure-Requests:
      - '1'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - text/html;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=l6pxwIKznGNFAaAVvRgKB/RlUwirmUIQFZiIC9TZtYI8iyn5BcJWcX0a9ImLEQJUDVLpAIzPhlsdVWfnb0gFT4HNwCeJIpF5twP/6nwE65pcXtGXy3R7SoZcmfoq;
        Expires=Fri, 15 Apr 2022 12:34:24 GMT; Path=/
      - AWSALBCORS=l6pxwIKznGNFAaAVvRgKB/RlUwirmUIQFZiIC9TZtYI8iyn5BcJWcX0a9ImLEQJUDVLpAIzPhlsdVWfnb0gFT4HNwCeJIpF5twP/6nwE65pcXtGXy3R7SoZcmfoq;
        Expires=Fri, 15 Apr 2022 12:34:24 GMT; Path=/; SameSite=None; Secure
      - IOP_session_live=%2F%2F1649421264384%7C71131e80-a8aa-43e6-9e15-141ba244290a%7C20220408-4dec9e08022c2d89085efa2a5fd70566%7C%7C%7C%7C%7C%7C%7C%7C%7Cguest%2F5b07086934ca08c03c45862eebddad4f;
        Path=/; Domain=.iop.org; HttpOnly
      - JSESSIONID=9FA9851B0C8FED4DE91303BEE30AEE8F; Max-Age=-1; Path=; Secure; HttpOnly
      - JSESSIONID=9FA9851B0C8FED4DE91303BEE30AEE8F; Path=/; HttpOnly
      - __uzma=4cedc19a-6686-4c8f-bdfb-c929b05bbbfe; HttpOnly; path=/; Expires=Fri,
        07-Oct-22 12:34:24 GMT ; Max-Age=15724800; SameSite=Lax
      - __uzmb=1649421264; HttpOnly; path=/; Expires=Fri, 07-Oct-22 12:34:24 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzmc=337781068596; HttpOnly; path=/; Expires=Fri, 07-Oct-22 12:34:24 GMT
        ; Max-Age=15724800; SameSite=Lax
      - __uzmd=1649421264; HttpOnly; path=/; Expires=Fri, 07-Oct-22 12:34:24 GMT ;
        Max-Age=15724800; SameSite=Lax
      - __uzme=5467; HttpOnly; path=/; Expires=Fri, 07-Oct-22 12:34:24 GMT ; Max-Age=15724800;
        SameSite=Lax
      - rdw_storereferer=; HttpOnly; path=/; Expires=Fri, 07-Oct-22 12:34:24 GMT ;
        Max-Age=15724800; SameSite=Lax
      Iop-Associated-Identity-Ids:
      - guest,
      Iop-Session-Id:
      - 71131e80-a8aa-43e6-9e15-141ba244290a
      Vary:
      - Accept-Encoding
      Iop-Page-Type:
      - ISSUE
      Strict-Transport-Security:
      - max-age=300
      X-Logged-In:
      - ''
      Date:
      - Fri, 08 Apr 2022 12:34:24 GMT
      Iop-Session-Map:
      - iop_session_id=71131e80-a8aa-43e6-9e15-141ba244290a&identity_ids=guest%2C&ics_session_id=20220408-4dec9e08022c2d89085efa2a5fd70566&request_id=1b9a524f-fcb1-48c3-8560-41a5fa35a0b6&identity_id_primary=guest&
      X-Cache-Enabled:
      - '0'
      Content-Language:
      - en-US
      X-Frame-Options:
      - SAMEORIGIN
      Iop-Primary-Institution-Identity-Id:
      - guest
      X-Requested-Cache-Control:
      - max-age=0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 08 Apr 2022 12:34:24 GMT
recorded_with: VCR 6.1.0
